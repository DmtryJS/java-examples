/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 898.0, "series": [{"data": [[0.0, 1.0], [0.1, 11.0], [0.2, 11.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 14.0], [2.0, 14.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 14.0], [2.5, 14.0], [2.6, 14.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 15.0], [3.6, 15.0], [3.7, 15.0], [3.8, 15.0], [3.9, 15.0], [4.0, 15.0], [4.1, 15.0], [4.2, 15.0], [4.3, 15.0], [4.4, 15.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 15.0], [5.3, 15.0], [5.4, 16.0], [5.5, 16.0], [5.6, 16.0], [5.7, 16.0], [5.8, 16.0], [5.9, 16.0], [6.0, 16.0], [6.1, 16.0], [6.2, 16.0], [6.3, 16.0], [6.4, 16.0], [6.5, 16.0], [6.6, 16.0], [6.7, 16.0], [6.8, 16.0], [6.9, 16.0], [7.0, 16.0], [7.1, 16.0], [7.2, 16.0], [7.3, 17.0], [7.4, 17.0], [7.5, 17.0], [7.6, 17.0], [7.7, 17.0], [7.8, 17.0], [7.9, 17.0], [8.0, 17.0], [8.1, 17.0], [8.2, 17.0], [8.3, 17.0], [8.4, 17.0], [8.5, 17.0], [8.6, 17.0], [8.7, 17.0], [8.8, 17.0], [8.9, 17.0], [9.0, 17.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 17.0], [9.5, 18.0], [9.6, 18.0], [9.7, 18.0], [9.8, 18.0], [9.9, 18.0], [10.0, 18.0], [10.1, 18.0], [10.2, 18.0], [10.3, 18.0], [10.4, 18.0], [10.5, 18.0], [10.6, 18.0], [10.7, 18.0], [10.8, 18.0], [10.9, 18.0], [11.0, 18.0], [11.1, 18.0], [11.2, 18.0], [11.3, 18.0], [11.4, 18.0], [11.5, 18.0], [11.6, 18.0], [11.7, 18.0], [11.8, 18.0], [11.9, 18.0], [12.0, 18.0], [12.1, 18.0], [12.2, 18.0], [12.3, 18.0], [12.4, 18.0], [12.5, 19.0], [12.6, 19.0], [12.7, 19.0], [12.8, 19.0], [12.9, 19.0], [13.0, 19.0], [13.1, 19.0], [13.2, 19.0], [13.3, 19.0], [13.4, 19.0], [13.5, 19.0], [13.6, 19.0], [13.7, 19.0], [13.8, 19.0], [13.9, 19.0], [14.0, 19.0], [14.1, 19.0], [14.2, 19.0], [14.3, 19.0], [14.4, 19.0], [14.5, 19.0], [14.6, 19.0], [14.7, 19.0], [14.8, 19.0], [14.9, 19.0], [15.0, 19.0], [15.1, 19.0], [15.2, 19.0], [15.3, 19.0], [15.4, 19.0], [15.5, 19.0], [15.6, 19.0], [15.7, 19.0], [15.8, 19.0], [15.9, 19.0], [16.0, 19.0], [16.1, 19.0], [16.2, 19.0], [16.3, 19.0], [16.4, 19.0], [16.5, 20.0], [16.6, 20.0], [16.7, 20.0], [16.8, 20.0], [16.9, 20.0], [17.0, 20.0], [17.1, 20.0], [17.2, 20.0], [17.3, 20.0], [17.4, 20.0], [17.5, 20.0], [17.6, 20.0], [17.7, 20.0], [17.8, 20.0], [17.9, 20.0], [18.0, 20.0], [18.1, 20.0], [18.2, 20.0], [18.3, 20.0], [18.4, 20.0], [18.5, 20.0], [18.6, 20.0], [18.7, 20.0], [18.8, 20.0], [18.9, 20.0], [19.0, 20.0], [19.1, 20.0], [19.2, 20.0], [19.3, 20.0], [19.4, 20.0], [19.5, 20.0], [19.6, 20.0], [19.7, 20.0], [19.8, 20.0], [19.9, 20.0], [20.0, 20.0], [20.1, 20.0], [20.2, 20.0], [20.3, 20.0], [20.4, 20.0], [20.5, 20.0], [20.6, 20.0], [20.7, 20.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 21.0], [22.0, 21.0], [22.1, 21.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 21.0], [23.9, 21.0], [24.0, 21.0], [24.1, 21.0], [24.2, 21.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 22.0], [25.0, 22.0], [25.1, 22.0], [25.2, 22.0], [25.3, 22.0], [25.4, 22.0], [25.5, 22.0], [25.6, 22.0], [25.7, 22.0], [25.8, 22.0], [25.9, 22.0], [26.0, 22.0], [26.1, 22.0], [26.2, 22.0], [26.3, 22.0], [26.4, 22.0], [26.5, 22.0], [26.6, 22.0], [26.7, 22.0], [26.8, 22.0], [26.9, 22.0], [27.0, 22.0], [27.1, 22.0], [27.2, 22.0], [27.3, 22.0], [27.4, 22.0], [27.5, 22.0], [27.6, 22.0], [27.7, 22.0], [27.8, 22.0], [27.9, 22.0], [28.0, 22.0], [28.1, 22.0], [28.2, 22.0], [28.3, 22.0], [28.4, 23.0], [28.5, 23.0], [28.6, 23.0], [28.7, 23.0], [28.8, 23.0], [28.9, 23.0], [29.0, 23.0], [29.1, 23.0], [29.2, 23.0], [29.3, 23.0], [29.4, 23.0], [29.5, 23.0], [29.6, 23.0], [29.7, 23.0], [29.8, 23.0], [29.9, 23.0], [30.0, 23.0], [30.1, 23.0], [30.2, 23.0], [30.3, 23.0], [30.4, 23.0], [30.5, 23.0], [30.6, 23.0], [30.7, 23.0], [30.8, 23.0], [30.9, 23.0], [31.0, 23.0], [31.1, 23.0], [31.2, 23.0], [31.3, 24.0], [31.4, 24.0], [31.5, 24.0], [31.6, 24.0], [31.7, 24.0], [31.8, 24.0], [31.9, 24.0], [32.0, 24.0], [32.1, 24.0], [32.2, 24.0], [32.3, 24.0], [32.4, 24.0], [32.5, 24.0], [32.6, 24.0], [32.7, 24.0], [32.8, 24.0], [32.9, 24.0], [33.0, 24.0], [33.1, 24.0], [33.2, 24.0], [33.3, 24.0], [33.4, 24.0], [33.5, 24.0], [33.6, 25.0], [33.7, 25.0], [33.8, 25.0], [33.9, 25.0], [34.0, 25.0], [34.1, 25.0], [34.2, 25.0], [34.3, 25.0], [34.4, 25.0], [34.5, 25.0], [34.6, 25.0], [34.7, 25.0], [34.8, 25.0], [34.9, 25.0], [35.0, 25.0], [35.1, 25.0], [35.2, 25.0], [35.3, 25.0], [35.4, 25.0], [35.5, 26.0], [35.6, 26.0], [35.7, 26.0], [35.8, 26.0], [35.9, 26.0], [36.0, 26.0], [36.1, 26.0], [36.2, 26.0], [36.3, 26.0], [36.4, 26.0], [36.5, 26.0], [36.6, 26.0], [36.7, 26.0], [36.8, 26.0], [36.9, 26.0], [37.0, 26.0], [37.1, 26.0], [37.2, 26.0], [37.3, 26.0], [37.4, 27.0], [37.5, 27.0], [37.6, 27.0], [37.7, 27.0], [37.8, 27.0], [37.9, 27.0], [38.0, 27.0], [38.1, 27.0], [38.2, 27.0], [38.3, 27.0], [38.4, 27.0], [38.5, 27.0], [38.6, 27.0], [38.7, 27.0], [38.8, 27.0], [38.9, 27.0], [39.0, 27.0], [39.1, 27.0], [39.2, 28.0], [39.3, 28.0], [39.4, 28.0], [39.5, 28.0], [39.6, 28.0], [39.7, 28.0], [39.8, 28.0], [39.9, 28.0], [40.0, 28.0], [40.1, 28.0], [40.2, 28.0], [40.3, 28.0], [40.4, 28.0], [40.5, 28.0], [40.6, 28.0], [40.7, 28.0], [40.8, 29.0], [40.9, 29.0], [41.0, 29.0], [41.1, 29.0], [41.2, 29.0], [41.3, 29.0], [41.4, 29.0], [41.5, 29.0], [41.6, 29.0], [41.7, 29.0], [41.8, 29.0], [41.9, 29.0], [42.0, 29.0], [42.1, 29.0], [42.2, 30.0], [42.3, 30.0], [42.4, 30.0], [42.5, 30.0], [42.6, 30.0], [42.7, 30.0], [42.8, 30.0], [42.9, 30.0], [43.0, 30.0], [43.1, 30.0], [43.2, 30.0], [43.3, 30.0], [43.4, 30.0], [43.5, 31.0], [43.6, 31.0], [43.7, 31.0], [43.8, 31.0], [43.9, 31.0], [44.0, 31.0], [44.1, 31.0], [44.2, 31.0], [44.3, 31.0], [44.4, 31.0], [44.5, 31.0], [44.6, 31.0], [44.7, 32.0], [44.8, 32.0], [44.9, 32.0], [45.0, 32.0], [45.1, 32.0], [45.2, 32.0], [45.3, 32.0], [45.4, 32.0], [45.5, 32.0], [45.6, 32.0], [45.7, 32.0], [45.8, 33.0], [45.9, 33.0], [46.0, 33.0], [46.1, 33.0], [46.2, 33.0], [46.3, 33.0], [46.4, 33.0], [46.5, 33.0], [46.6, 33.0], [46.7, 33.0], [46.8, 33.0], [46.9, 34.0], [47.0, 34.0], [47.1, 34.0], [47.2, 34.0], [47.3, 34.0], [47.4, 34.0], [47.5, 34.0], [47.6, 34.0], [47.7, 34.0], [47.8, 34.0], [47.9, 34.0], [48.0, 35.0], [48.1, 35.0], [48.2, 35.0], [48.3, 35.0], [48.4, 35.0], [48.5, 35.0], [48.6, 35.0], [48.7, 35.0], [48.8, 35.0], [48.9, 35.0], [49.0, 36.0], [49.1, 36.0], [49.2, 36.0], [49.3, 36.0], [49.4, 36.0], [49.5, 36.0], [49.6, 36.0], [49.7, 36.0], [49.8, 36.0], [49.9, 36.0], [50.0, 36.0], [50.1, 37.0], [50.2, 37.0], [50.3, 37.0], [50.4, 37.0], [50.5, 37.0], [50.6, 37.0], [50.7, 37.0], [50.8, 37.0], [50.9, 37.0], [51.0, 37.0], [51.1, 37.0], [51.2, 37.0], [51.3, 38.0], [51.4, 38.0], [51.5, 38.0], [51.6, 38.0], [51.7, 38.0], [51.8, 38.0], [51.9, 38.0], [52.0, 38.0], [52.1, 38.0], [52.2, 38.0], [52.3, 38.0], [52.4, 39.0], [52.5, 39.0], [52.6, 39.0], [52.7, 39.0], [52.8, 39.0], [52.9, 39.0], [53.0, 39.0], [53.1, 39.0], [53.2, 39.0], [53.3, 39.0], [53.4, 39.0], [53.5, 40.0], [53.6, 40.0], [53.7, 40.0], [53.8, 40.0], [53.9, 40.0], [54.0, 40.0], [54.1, 40.0], [54.2, 40.0], [54.3, 40.0], [54.4, 40.0], [54.5, 41.0], [54.6, 41.0], [54.7, 41.0], [54.8, 41.0], [54.9, 41.0], [55.0, 41.0], [55.1, 41.0], [55.2, 41.0], [55.3, 41.0], [55.4, 41.0], [55.5, 41.0], [55.6, 42.0], [55.7, 42.0], [55.8, 42.0], [55.9, 42.0], [56.0, 42.0], [56.1, 42.0], [56.2, 42.0], [56.3, 42.0], [56.4, 42.0], [56.5, 42.0], [56.6, 43.0], [56.7, 43.0], [56.8, 43.0], [56.9, 43.0], [57.0, 43.0], [57.1, 43.0], [57.2, 43.0], [57.3, 43.0], [57.4, 43.0], [57.5, 43.0], [57.6, 43.0], [57.7, 44.0], [57.8, 44.0], [57.9, 44.0], [58.0, 44.0], [58.1, 44.0], [58.2, 44.0], [58.3, 44.0], [58.4, 44.0], [58.5, 44.0], [58.6, 44.0], [58.7, 44.0], [58.8, 45.0], [58.9, 45.0], [59.0, 45.0], [59.1, 45.0], [59.2, 45.0], [59.3, 45.0], [59.4, 45.0], [59.5, 45.0], [59.6, 45.0], [59.7, 45.0], [59.8, 45.0], [59.9, 45.0], [60.0, 46.0], [60.1, 46.0], [60.2, 46.0], [60.3, 46.0], [60.4, 46.0], [60.5, 46.0], [60.6, 46.0], [60.7, 46.0], [60.8, 46.0], [60.9, 46.0], [61.0, 46.0], [61.1, 47.0], [61.2, 47.0], [61.3, 47.0], [61.4, 47.0], [61.5, 47.0], [61.6, 47.0], [61.7, 47.0], [61.8, 47.0], [61.9, 47.0], [62.0, 47.0], [62.1, 48.0], [62.2, 48.0], [62.3, 48.0], [62.4, 48.0], [62.5, 48.0], [62.6, 48.0], [62.7, 48.0], [62.8, 48.0], [62.9, 48.0], [63.0, 48.0], [63.1, 49.0], [63.2, 49.0], [63.3, 49.0], [63.4, 49.0], [63.5, 49.0], [63.6, 49.0], [63.7, 49.0], [63.8, 49.0], [63.9, 49.0], [64.0, 50.0], [64.1, 50.0], [64.2, 50.0], [64.3, 50.0], [64.4, 50.0], [64.5, 50.0], [64.6, 50.0], [64.7, 50.0], [64.8, 50.0], [64.9, 51.0], [65.0, 51.0], [65.1, 51.0], [65.2, 51.0], [65.3, 51.0], [65.4, 51.0], [65.5, 51.0], [65.6, 51.0], [65.7, 51.0], [65.8, 52.0], [65.9, 52.0], [66.0, 52.0], [66.1, 52.0], [66.2, 52.0], [66.3, 52.0], [66.4, 52.0], [66.5, 52.0], [66.6, 53.0], [66.7, 53.0], [66.8, 53.0], [66.9, 53.0], [67.0, 53.0], [67.1, 53.0], [67.2, 53.0], [67.3, 53.0], [67.4, 54.0], [67.5, 54.0], [67.6, 54.0], [67.7, 54.0], [67.8, 54.0], [67.9, 54.0], [68.0, 54.0], [68.1, 54.0], [68.2, 55.0], [68.3, 55.0], [68.4, 55.0], [68.5, 55.0], [68.6, 55.0], [68.7, 55.0], [68.8, 55.0], [68.9, 56.0], [69.0, 56.0], [69.1, 56.0], [69.2, 56.0], [69.3, 56.0], [69.4, 56.0], [69.5, 56.0], [69.6, 57.0], [69.7, 57.0], [69.8, 57.0], [69.9, 57.0], [70.0, 57.0], [70.1, 57.0], [70.2, 57.0], [70.3, 58.0], [70.4, 58.0], [70.5, 58.0], [70.6, 58.0], [70.7, 58.0], [70.8, 58.0], [70.9, 58.0], [71.0, 59.0], [71.1, 59.0], [71.2, 59.0], [71.3, 59.0], [71.4, 59.0], [71.5, 59.0], [71.6, 59.0], [71.7, 60.0], [71.8, 60.0], [71.9, 60.0], [72.0, 60.0], [72.1, 60.0], [72.2, 60.0], [72.3, 61.0], [72.4, 61.0], [72.5, 61.0], [72.6, 61.0], [72.7, 61.0], [72.8, 61.0], [72.9, 61.0], [73.0, 62.0], [73.1, 62.0], [73.2, 62.0], [73.3, 62.0], [73.4, 62.0], [73.5, 62.0], [73.6, 62.0], [73.7, 63.0], [73.8, 63.0], [73.9, 63.0], [74.0, 63.0], [74.1, 63.0], [74.2, 63.0], [74.3, 64.0], [74.4, 64.0], [74.5, 64.0], [74.6, 64.0], [74.7, 64.0], [74.8, 64.0], [74.9, 65.0], [75.0, 65.0], [75.1, 65.0], [75.2, 65.0], [75.3, 65.0], [75.4, 65.0], [75.5, 66.0], [75.6, 66.0], [75.7, 66.0], [75.8, 66.0], [75.9, 66.0], [76.0, 66.0], [76.1, 67.0], [76.2, 67.0], [76.3, 67.0], [76.4, 67.0], [76.5, 67.0], [76.6, 67.0], [76.7, 68.0], [76.8, 68.0], [76.9, 68.0], [77.0, 68.0], [77.1, 68.0], [77.2, 68.0], [77.3, 69.0], [77.4, 69.0], [77.5, 69.0], [77.6, 69.0], [77.7, 69.0], [77.8, 70.0], [77.9, 70.0], [78.0, 70.0], [78.1, 70.0], [78.2, 70.0], [78.3, 70.0], [78.4, 71.0], [78.5, 71.0], [78.6, 71.0], [78.7, 71.0], [78.8, 71.0], [78.9, 72.0], [79.0, 72.0], [79.1, 72.0], [79.2, 72.0], [79.3, 72.0], [79.4, 73.0], [79.5, 73.0], [79.6, 73.0], [79.7, 73.0], [79.8, 73.0], [79.9, 74.0], [80.0, 74.0], [80.1, 74.0], [80.2, 74.0], [80.3, 74.0], [80.4, 75.0], [80.5, 75.0], [80.6, 75.0], [80.7, 75.0], [80.8, 75.0], [80.9, 76.0], [81.0, 76.0], [81.1, 76.0], [81.2, 76.0], [81.3, 76.0], [81.4, 77.0], [81.5, 77.0], [81.6, 77.0], [81.7, 77.0], [81.8, 77.0], [81.9, 78.0], [82.0, 78.0], [82.1, 78.0], [82.2, 78.0], [82.3, 78.0], [82.4, 79.0], [82.5, 79.0], [82.6, 79.0], [82.7, 79.0], [82.8, 79.0], [82.9, 80.0], [83.0, 80.0], [83.1, 80.0], [83.2, 80.0], [83.3, 81.0], [83.4, 81.0], [83.5, 81.0], [83.6, 81.0], [83.7, 81.0], [83.8, 82.0], [83.9, 82.0], [84.0, 82.0], [84.1, 82.0], [84.2, 83.0], [84.3, 83.0], [84.4, 83.0], [84.5, 83.0], [84.6, 83.0], [84.7, 84.0], [84.8, 84.0], [84.9, 84.0], [85.0, 84.0], [85.1, 85.0], [85.2, 85.0], [85.3, 85.0], [85.4, 85.0], [85.5, 86.0], [85.6, 86.0], [85.7, 86.0], [85.8, 86.0], [85.9, 87.0], [86.0, 87.0], [86.1, 87.0], [86.2, 87.0], [86.3, 88.0], [86.4, 88.0], [86.5, 88.0], [86.6, 88.0], [86.7, 89.0], [86.8, 89.0], [86.9, 89.0], [87.0, 89.0], [87.1, 90.0], [87.2, 90.0], [87.3, 90.0], [87.4, 90.0], [87.5, 91.0], [87.6, 91.0], [87.7, 91.0], [87.8, 92.0], [87.9, 92.0], [88.0, 92.0], [88.1, 92.0], [88.2, 93.0], [88.3, 93.0], [88.4, 93.0], [88.5, 94.0], [88.6, 94.0], [88.7, 94.0], [88.8, 94.0], [88.9, 95.0], [89.0, 95.0], [89.1, 95.0], [89.2, 96.0], [89.3, 96.0], [89.4, 96.0], [89.5, 96.0], [89.6, 97.0], [89.7, 97.0], [89.8, 97.0], [89.9, 98.0], [90.0, 98.0], [90.1, 98.0], [90.2, 99.0], [90.3, 99.0], [90.4, 99.0], [90.5, 100.0], [90.6, 100.0], [90.7, 100.0], [90.8, 101.0], [90.9, 101.0], [91.0, 101.0], [91.1, 102.0], [91.2, 102.0], [91.3, 103.0], [91.4, 103.0], [91.5, 103.0], [91.6, 104.0], [91.7, 104.0], [91.8, 104.0], [91.9, 105.0], [92.0, 105.0], [92.1, 106.0], [92.2, 106.0], [92.3, 106.0], [92.4, 107.0], [92.5, 107.0], [92.6, 108.0], [92.7, 108.0], [92.8, 109.0], [92.9, 109.0], [93.0, 109.0], [93.1, 110.0], [93.2, 110.0], [93.3, 111.0], [93.4, 111.0], [93.5, 112.0], [93.6, 112.0], [93.7, 113.0], [93.8, 113.0], [93.9, 114.0], [94.0, 114.0], [94.1, 115.0], [94.2, 115.0], [94.3, 116.0], [94.4, 116.0], [94.5, 117.0], [94.6, 117.0], [94.7, 118.0], [94.8, 118.0], [94.9, 119.0], [95.0, 120.0], [95.1, 120.0], [95.2, 121.0], [95.3, 122.0], [95.4, 122.0], [95.5, 123.0], [95.6, 124.0], [95.7, 124.0], [95.8, 125.0], [95.9, 126.0], [96.0, 127.0], [96.1, 127.0], [96.2, 128.0], [96.3, 129.0], [96.4, 130.0], [96.5, 131.0], [96.6, 132.0], [96.7, 132.0], [96.8, 133.0], [96.9, 134.0], [97.0, 135.0], [97.1, 136.0], [97.2, 138.0], [97.3, 139.0], [97.4, 140.0], [97.5, 141.0], [97.6, 142.0], [97.7, 144.0], [97.8, 145.0], [97.9, 147.0], [98.0, 148.0], [98.1, 150.0], [98.2, 152.0], [98.3, 154.0], [98.4, 156.0], [98.5, 158.0], [98.6, 160.0], [98.7, 163.0], [98.8, 165.0], [98.9, 169.0], [99.0, 172.0], [99.1, 176.0], [99.2, 181.0], [99.3, 186.0], [99.4, 193.0], [99.5, 201.0], [99.6, 212.0], [99.7, 227.0], [99.8, 251.0], [99.9, 291.0]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 5.0], [23.6, 5.0], [23.7, 5.0], [23.8, 5.0], [23.9, 5.0], [24.0, 5.0], [24.1, 5.0], [24.2, 5.0], [24.3, 5.0], [24.4, 5.0], [24.5, 5.0], [24.6, 5.0], [24.7, 5.0], [24.8, 5.0], [24.9, 5.0], [25.0, 5.0], [25.1, 5.0], [25.2, 5.0], [25.3, 5.0], [25.4, 5.0], [25.5, 5.0], [25.6, 5.0], [25.7, 5.0], [25.8, 5.0], [25.9, 5.0], [26.0, 5.0], [26.1, 5.0], [26.2, 5.0], [26.3, 5.0], [26.4, 5.0], [26.5, 5.0], [26.6, 5.0], [26.7, 5.0], [26.8, 5.0], [26.9, 5.0], [27.0, 5.0], [27.1, 5.0], [27.2, 5.0], [27.3, 5.0], [27.4, 5.0], [27.5, 5.0], [27.6, 5.0], [27.7, 5.0], [27.8, 5.0], [27.9, 5.0], [28.0, 5.0], [28.1, 5.0], [28.2, 5.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 5.0], [28.7, 5.0], [28.8, 5.0], [28.9, 5.0], [29.0, 5.0], [29.1, 5.0], [29.2, 5.0], [29.3, 5.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 6.0], [32.5, 6.0], [32.6, 6.0], [32.7, 6.0], [32.8, 6.0], [32.9, 6.0], [33.0, 6.0], [33.1, 6.0], [33.2, 6.0], [33.3, 6.0], [33.4, 6.0], [33.5, 6.0], [33.6, 6.0], [33.7, 6.0], [33.8, 6.0], [33.9, 6.0], [34.0, 6.0], [34.1, 6.0], [34.2, 6.0], [34.3, 6.0], [34.4, 6.0], [34.5, 6.0], [34.6, 6.0], [34.7, 6.0], [34.8, 6.0], [34.9, 6.0], [35.0, 6.0], [35.1, 6.0], [35.2, 6.0], [35.3, 6.0], [35.4, 6.0], [35.5, 6.0], [35.6, 6.0], [35.7, 6.0], [35.8, 6.0], [35.9, 6.0], [36.0, 6.0], [36.1, 6.0], [36.2, 6.0], [36.3, 6.0], [36.4, 6.0], [36.5, 6.0], [36.6, 6.0], [36.7, 6.0], [36.8, 6.0], [36.9, 6.0], [37.0, 6.0], [37.1, 6.0], [37.2, 6.0], [37.3, 6.0], [37.4, 6.0], [37.5, 6.0], [37.6, 6.0], [37.7, 6.0], [37.8, 6.0], [37.9, 6.0], [38.0, 6.0], [38.1, 6.0], [38.2, 6.0], [38.3, 6.0], [38.4, 6.0], [38.5, 6.0], [38.6, 6.0], [38.7, 6.0], [38.8, 6.0], [38.9, 6.0], [39.0, 6.0], [39.1, 6.0], [39.2, 6.0], [39.3, 6.0], [39.4, 6.0], [39.5, 6.0], [39.6, 6.0], [39.7, 6.0], [39.8, 6.0], [39.9, 6.0], [40.0, 6.0], [40.1, 7.0], [40.2, 7.0], [40.3, 7.0], [40.4, 7.0], [40.5, 7.0], [40.6, 7.0], [40.7, 7.0], [40.8, 7.0], [40.9, 7.0], [41.0, 7.0], [41.1, 7.0], [41.2, 7.0], [41.3, 7.0], [41.4, 7.0], [41.5, 7.0], [41.6, 7.0], [41.7, 7.0], [41.8, 7.0], [41.9, 7.0], [42.0, 7.0], [42.1, 7.0], [42.2, 7.0], [42.3, 7.0], [42.4, 7.0], [42.5, 7.0], [42.6, 7.0], [42.7, 7.0], [42.8, 7.0], [42.9, 7.0], [43.0, 7.0], [43.1, 7.0], [43.2, 7.0], [43.3, 7.0], [43.4, 7.0], [43.5, 7.0], [43.6, 7.0], [43.7, 7.0], [43.8, 7.0], [43.9, 7.0], [44.0, 7.0], [44.1, 7.0], [44.2, 7.0], [44.3, 7.0], [44.4, 7.0], [44.5, 7.0], [44.6, 7.0], [44.7, 7.0], [44.8, 7.0], [44.9, 7.0], [45.0, 7.0], [45.1, 7.0], [45.2, 7.0], [45.3, 7.0], [45.4, 7.0], [45.5, 7.0], [45.6, 7.0], [45.7, 7.0], [45.8, 7.0], [45.9, 7.0], [46.0, 7.0], [46.1, 7.0], [46.2, 7.0], [46.3, 8.0], [46.4, 8.0], [46.5, 8.0], [46.6, 8.0], [46.7, 8.0], [46.8, 8.0], [46.9, 8.0], [47.0, 8.0], [47.1, 8.0], [47.2, 8.0], [47.3, 8.0], [47.4, 8.0], [47.5, 8.0], [47.6, 8.0], [47.7, 8.0], [47.8, 8.0], [47.9, 8.0], [48.0, 8.0], [48.1, 8.0], [48.2, 8.0], [48.3, 8.0], [48.4, 8.0], [48.5, 8.0], [48.6, 8.0], [48.7, 8.0], [48.8, 8.0], [48.9, 8.0], [49.0, 8.0], [49.1, 8.0], [49.2, 8.0], [49.3, 8.0], [49.4, 8.0], [49.5, 8.0], [49.6, 8.0], [49.7, 8.0], [49.8, 8.0], [49.9, 8.0], [50.0, 8.0], [50.1, 8.0], [50.2, 8.0], [50.3, 8.0], [50.4, 8.0], [50.5, 8.0], [50.6, 8.0], [50.7, 8.0], [50.8, 8.0], [50.9, 8.0], [51.0, 8.0], [51.1, 8.0], [51.2, 8.0], [51.3, 8.0], [51.4, 8.0], [51.5, 9.0], [51.6, 9.0], [51.7, 9.0], [51.8, 9.0], [51.9, 9.0], [52.0, 9.0], [52.1, 9.0], [52.2, 9.0], [52.3, 9.0], [52.4, 9.0], [52.5, 9.0], [52.6, 9.0], [52.7, 9.0], [52.8, 9.0], [52.9, 9.0], [53.0, 9.0], [53.1, 9.0], [53.2, 9.0], [53.3, 9.0], [53.4, 9.0], [53.5, 9.0], [53.6, 9.0], [53.7, 9.0], [53.8, 9.0], [53.9, 9.0], [54.0, 9.0], [54.1, 9.0], [54.2, 9.0], [54.3, 9.0], [54.4, 9.0], [54.5, 9.0], [54.6, 9.0], [54.7, 9.0], [54.8, 9.0], [54.9, 9.0], [55.0, 9.0], [55.1, 9.0], [55.2, 9.0], [55.3, 9.0], [55.4, 9.0], [55.5, 9.0], [55.6, 9.0], [55.7, 9.0], [55.8, 9.0], [55.9, 9.0], [56.0, 9.0], [56.1, 9.0], [56.2, 10.0], [56.3, 10.0], [56.4, 10.0], [56.5, 10.0], [56.6, 10.0], [56.7, 10.0], [56.8, 10.0], [56.9, 10.0], [57.0, 10.0], [57.1, 10.0], [57.2, 10.0], [57.3, 10.0], [57.4, 10.0], [57.5, 10.0], [57.6, 10.0], [57.7, 10.0], [57.8, 10.0], [57.9, 10.0], [58.0, 10.0], [58.1, 10.0], [58.2, 10.0], [58.3, 10.0], [58.4, 10.0], [58.5, 10.0], [58.6, 10.0], [58.7, 10.0], [58.8, 10.0], [58.9, 10.0], [59.0, 10.0], [59.1, 10.0], [59.2, 10.0], [59.3, 10.0], [59.4, 10.0], [59.5, 10.0], [59.6, 10.0], [59.7, 10.0], [59.8, 10.0], [59.9, 10.0], [60.0, 10.0], [60.1, 10.0], [60.2, 10.0], [60.3, 11.0], [60.4, 11.0], [60.5, 11.0], [60.6, 11.0], [60.7, 11.0], [60.8, 11.0], [60.9, 11.0], [61.0, 11.0], [61.1, 11.0], [61.2, 11.0], [61.3, 11.0], [61.4, 11.0], [61.5, 11.0], [61.6, 11.0], [61.7, 11.0], [61.8, 11.0], [61.9, 11.0], [62.0, 11.0], [62.1, 11.0], [62.2, 11.0], [62.3, 11.0], [62.4, 11.0], [62.5, 11.0], [62.6, 11.0], [62.7, 11.0], [62.8, 11.0], [62.9, 11.0], [63.0, 11.0], [63.1, 11.0], [63.2, 11.0], [63.3, 11.0], [63.4, 11.0], [63.5, 11.0], [63.6, 11.0], [63.7, 11.0], [63.8, 11.0], [63.9, 12.0], [64.0, 12.0], [64.1, 12.0], [64.2, 12.0], [64.3, 12.0], [64.4, 12.0], [64.5, 12.0], [64.6, 12.0], [64.7, 12.0], [64.8, 12.0], [64.9, 12.0], [65.0, 12.0], [65.1, 12.0], [65.2, 12.0], [65.3, 12.0], [65.4, 12.0], [65.5, 12.0], [65.6, 12.0], [65.7, 12.0], [65.8, 12.0], [65.9, 12.0], [66.0, 12.0], [66.1, 12.0], [66.2, 12.0], [66.3, 12.0], [66.4, 12.0], [66.5, 12.0], [66.6, 12.0], [66.7, 12.0], [66.8, 12.0], [66.9, 12.0], [67.0, 13.0], [67.1, 13.0], [67.2, 13.0], [67.3, 13.0], [67.4, 13.0], [67.5, 13.0], [67.6, 13.0], [67.7, 13.0], [67.8, 13.0], [67.9, 13.0], [68.0, 13.0], [68.1, 13.0], [68.2, 13.0], [68.3, 13.0], [68.4, 13.0], [68.5, 13.0], [68.6, 13.0], [68.7, 13.0], [68.8, 13.0], [68.9, 13.0], [69.0, 13.0], [69.1, 13.0], [69.2, 13.0], [69.3, 13.0], [69.4, 13.0], [69.5, 13.0], [69.6, 14.0], [69.7, 14.0], [69.8, 14.0], [69.9, 14.0], [70.0, 14.0], [70.1, 14.0], [70.2, 14.0], [70.3, 14.0], [70.4, 14.0], [70.5, 14.0], [70.6, 14.0], [70.7, 14.0], [70.8, 14.0], [70.9, 14.0], [71.0, 14.0], [71.1, 14.0], [71.2, 14.0], [71.3, 14.0], [71.4, 14.0], [71.5, 14.0], [71.6, 14.0], [71.7, 14.0], [71.8, 15.0], [71.9, 15.0], [72.0, 15.0], [72.1, 15.0], [72.2, 15.0], [72.3, 15.0], [72.4, 15.0], [72.5, 15.0], [72.6, 15.0], [72.7, 15.0], [72.8, 15.0], [72.9, 15.0], [73.0, 15.0], [73.1, 15.0], [73.2, 15.0], [73.3, 15.0], [73.4, 15.0], [73.5, 15.0], [73.6, 15.0], [73.7, 15.0], [73.8, 16.0], [73.9, 16.0], [74.0, 16.0], [74.1, 16.0], [74.2, 16.0], [74.3, 16.0], [74.4, 16.0], [74.5, 16.0], [74.6, 16.0], [74.7, 16.0], [74.8, 16.0], [74.9, 16.0], [75.0, 16.0], [75.1, 16.0], [75.2, 16.0], [75.3, 16.0], [75.4, 16.0], [75.5, 17.0], [75.6, 17.0], [75.7, 17.0], [75.8, 17.0], [75.9, 17.0], [76.0, 17.0], [76.1, 17.0], [76.2, 17.0], [76.3, 17.0], [76.4, 17.0], [76.5, 17.0], [76.6, 17.0], [76.7, 17.0], [76.8, 17.0], [76.9, 17.0], [77.0, 17.0], [77.1, 18.0], [77.2, 18.0], [77.3, 18.0], [77.4, 18.0], [77.5, 18.0], [77.6, 18.0], [77.7, 18.0], [77.8, 18.0], [77.9, 18.0], [78.0, 18.0], [78.1, 18.0], [78.2, 18.0], [78.3, 18.0], [78.4, 18.0], [78.5, 18.0], [78.6, 19.0], [78.7, 19.0], [78.8, 19.0], [78.9, 19.0], [79.0, 19.0], [79.1, 19.0], [79.2, 19.0], [79.3, 19.0], [79.4, 19.0], [79.5, 19.0], [79.6, 19.0], [79.7, 19.0], [79.8, 19.0], [79.9, 20.0], [80.0, 20.0], [80.1, 20.0], [80.2, 20.0], [80.3, 20.0], [80.4, 20.0], [80.5, 20.0], [80.6, 20.0], [80.7, 20.0], [80.8, 20.0], [80.9, 20.0], [81.0, 20.0], [81.1, 20.0], [81.2, 21.0], [81.3, 21.0], [81.4, 21.0], [81.5, 21.0], [81.6, 21.0], [81.7, 21.0], [81.8, 21.0], [81.9, 21.0], [82.0, 21.0], [82.1, 21.0], [82.2, 21.0], [82.3, 22.0], [82.4, 22.0], [82.5, 22.0], [82.6, 22.0], [82.7, 22.0], [82.8, 22.0], [82.9, 22.0], [83.0, 22.0], [83.1, 22.0], [83.2, 22.0], [83.3, 23.0], [83.4, 23.0], [83.5, 23.0], [83.6, 23.0], [83.7, 23.0], [83.8, 23.0], [83.9, 23.0], [84.0, 23.0], [84.1, 23.0], [84.2, 23.0], [84.3, 24.0], [84.4, 24.0], [84.5, 24.0], [84.6, 24.0], [84.7, 24.0], [84.8, 24.0], [84.9, 24.0], [85.0, 24.0], [85.1, 24.0], [85.2, 25.0], [85.3, 25.0], [85.4, 25.0], [85.5, 25.0], [85.6, 25.0], [85.7, 25.0], [85.8, 25.0], [85.9, 25.0], [86.0, 26.0], [86.1, 26.0], [86.2, 26.0], [86.3, 26.0], [86.4, 26.0], [86.5, 26.0], [86.6, 26.0], [86.7, 26.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 27.0], [87.6, 28.0], [87.7, 28.0], [87.8, 28.0], [87.9, 28.0], [88.0, 28.0], [88.1, 28.0], [88.2, 28.0], [88.3, 29.0], [88.4, 29.0], [88.5, 29.0], [88.6, 29.0], [88.7, 29.0], [88.8, 29.0], [88.9, 30.0], [89.0, 30.0], [89.1, 30.0], [89.2, 30.0], [89.3, 30.0], [89.4, 30.0], [89.5, 30.0], [89.6, 31.0], [89.7, 31.0], [89.8, 31.0], [89.9, 31.0], [90.0, 31.0], [90.1, 32.0], [90.2, 32.0], [90.3, 32.0], [90.4, 32.0], [90.5, 32.0], [90.6, 32.0], [90.7, 33.0], [90.8, 33.0], [90.9, 33.0], [91.0, 33.0], [91.1, 33.0], [91.2, 34.0], [91.3, 34.0], [91.4, 34.0], [91.5, 34.0], [91.6, 34.0], [91.7, 35.0], [91.8, 35.0], [91.9, 35.0], [92.0, 35.0], [92.1, 35.0], [92.2, 36.0], [92.3, 36.0], [92.4, 36.0], [92.5, 36.0], [92.6, 37.0], [92.7, 37.0], [92.8, 37.0], [92.9, 37.0], [93.0, 38.0], [93.1, 38.0], [93.2, 38.0], [93.3, 38.0], [93.4, 39.0], [93.5, 39.0], [93.6, 39.0], [93.7, 39.0], [93.8, 40.0], [93.9, 40.0], [94.0, 40.0], [94.1, 41.0], [94.2, 41.0], [94.3, 41.0], [94.4, 41.0], [94.5, 42.0], [94.6, 42.0], [94.7, 42.0], [94.8, 43.0], [94.9, 43.0], [95.0, 43.0], [95.1, 44.0], [95.2, 44.0], [95.3, 44.0], [95.4, 45.0], [95.5, 45.0], [95.6, 45.0], [95.7, 46.0], [95.8, 46.0], [95.9, 47.0], [96.0, 47.0], [96.1, 47.0], [96.2, 48.0], [96.3, 48.0], [96.4, 49.0], [96.5, 49.0], [96.6, 50.0], [96.7, 50.0], [96.8, 51.0], [96.9, 51.0], [97.0, 52.0], [97.1, 52.0], [97.2, 53.0], [97.3, 54.0], [97.4, 54.0], [97.5, 55.0], [97.6, 56.0], [97.7, 56.0], [97.8, 57.0], [97.9, 58.0], [98.0, 59.0], [98.1, 59.0], [98.2, 60.0], [98.3, 61.0], [98.4, 62.0], [98.5, 63.0], [98.6, 64.0], [98.7, 66.0], [98.8, 67.0], [98.9, 69.0], [99.0, 70.0], [99.1, 72.0], [99.2, 74.0], [99.3, 76.0], [99.4, 78.0], [99.5, 81.0], [99.6, 85.0], [99.7, 89.0], [99.8, 95.0], [99.9, 105.0], [100.0, 469.0]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1.2765397E7, "series": [{"data": [[0.0, 1.156014E7], [300.0, 9413.0], [600.0, 127.0], [100.0, 1157431.0], [200.0, 55424.0], [400.0, 1517.0], [800.0, 1.0], [500.0, 61.0]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[0.0, 1.2765397E7], [300.0, 23.0], [100.0, 18274.0], [200.0, 331.0], [400.0, 9.0]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 94.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2.5567868E7, "series": [{"data": [[0.0, 2.5567868E7]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 186.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 94.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 96.96992602382073, "minX": 1.5457512E12, "maxY": 100.0, "series": [{"data": [[1.54575222E12, 100.0], [1.54575444E12, 100.0], [1.54575666E12, 100.0], [1.54575888E12, 100.0], [1.54575324E12, 100.0], [1.54575768E12, 100.0], [1.5457587E12, 100.0], [1.54575546E12, 100.0], [1.54575462E12, 100.0], [1.54575906E12, 100.0], [1.54575684E12, 100.0], [1.5457536E12, 100.0], [1.54575342E12, 100.0], [1.54575564E12, 100.0], [1.54575786E12, 100.0], [1.54575186E12, 100.0], [1.5457524E12, 100.0], [1.5457551E12, 100.0], [1.54575408E12, 100.0], [1.54575732E12, 100.0], [1.5457539E12, 100.0], [1.54575612E12, 100.0], [1.54575834E12, 100.0], [1.54575138E12, 100.0], [1.54575288E12, 100.0], [1.54575204E12, 100.0], [1.54575648E12, 100.0], [1.5457575E12, 100.0], [1.54575426E12, 100.0], [1.5457512E12, 96.96992602382073], [1.54575306E12, 100.0], [1.5457563E12, 100.0], [1.54575852E12, 100.0], [1.54575528E12, 100.0], [1.54575252E12, 100.0], [1.54575696E12, 100.0], [1.54575798E12, 100.0], [1.54575474E12, 100.0], [1.54575678E12, 100.0], [1.545759E12, 100.0], [1.54575354E12, 100.0], [1.54575576E12, 100.0], [1.5457527E12, 100.0], [1.54575492E12, 100.0], [1.54575714E12, 100.0], [1.54575198E12, 100.0], [1.54575372E12, 100.0], [1.54575816E12, 100.0], [1.54575918E12, 100.0], [1.54575594E12, 100.0], [1.54575318E12, 100.0], [1.5457554E12, 100.0], [1.54575762E12, 100.0], [1.54575216E12, 100.0], [1.5457515E12, 100.0], [1.5457542E12, 100.0], [1.54575642E12, 100.0], [1.54575864E12, 100.0], [1.54575168E12, 100.0], [1.54575558E12, 100.0], [1.54575234E12, 100.0], [1.54575456E12, 100.0], [1.54575132E12, 100.0], [1.5457578E12, 100.0], [1.54575438E12, 100.0], [1.54575882E12, 100.0], [1.5457566E12, 100.0], [1.54575336E12, 100.0], [1.54575144E12, 100.0], [1.54575606E12, 100.0], [1.54575282E12, 100.0], [1.54575504E12, 100.0], [1.54575828E12, 100.0], [1.54575486E12, 100.0], [1.54575708E12, 100.0], [1.54575384E12, 100.0], [1.545753E12, 100.0], [1.54575744E12, 100.0], [1.54575846E12, 100.0], [1.54575522E12, 100.0], [1.54575624E12, 100.0], [1.54575726E12, 100.0], [1.54575402E12, 100.0], [1.54575126E12, 100.0], [1.54575348E12, 100.0], [1.54575792E12, 100.0], [1.5457518E12, 100.0], [1.54575894E12, 100.0], [1.5457557E12, 100.0], [1.54575228E12, 100.0], [1.54575672E12, 100.0], [1.54575774E12, 100.0], [1.5457545E12, 100.0], [1.54575366E12, 100.0], [1.54575588E12, 100.0], [1.5457581E12, 100.0], [1.54575162E12, 100.0], [1.54575264E12, 100.0], [1.54575246E12, 100.0], [1.54575468E12, 100.0], [1.5457569E12, 100.0], [1.54575912E12, 100.0], [1.54575414E12, 100.0], [1.54575858E12, 100.0], [1.54575636E12, 100.0], [1.54575312E12, 100.0], [1.54575294E12, 100.0], [1.54575516E12, 100.0], [1.54575738E12, 100.0], [1.54575174E12, 100.0], [1.54575654E12, 100.0], [1.54575876E12, 100.0], [1.5457533E12, 100.0], [1.54575552E12, 100.0], [1.54575534E12, 100.0], [1.5457521E12, 100.0], [1.54575432E12, 100.0], [1.54575156E12, 100.0], [1.54575756E12, 100.0], [1.54575702E12, 100.0], [1.54575924E12, 99.98418937449937], [1.54575378E12, 100.0], [1.545756E12, 100.0], [1.54575582E12, 100.0], [1.54575258E12, 100.0], [1.5457548E12, 100.0], [1.54575804E12, 100.0], [1.5457584E12, 100.0], [1.54575192E12, 100.0], [1.54575396E12, 100.0], [1.54575618E12, 100.0], [1.54575276E12, 100.0], [1.5457572E12, 100.0], [1.54575822E12, 100.0], [1.54575498E12, 100.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54575924E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 66.58064516129032, "series": [{"data": [[2.0, 12.0], [3.0, 14.875000000000002], [4.0, 39.75], [5.0, 14.666666666666666], [6.0, 13.933333333333335], [7.0, 30.5], [8.0, 13.125000000000002], [9.0, 50.0], [10.0, 63.625], [11.0, 43.333333333333336], [12.0, 16.863636363636363], [13.0, 15.5], [14.0, 18.107142857142858], [15.0, 14.59375], [16.0, 17.4], [17.0, 37.15], [18.0, 18.666666666666668], [19.0, 16.700000000000003], [20.0, 46.919999999999995], [21.0, 17.210526315789483], [22.0, 21.88888888888889], [23.0, 19.851063829787233], [24.0, 12.791666666666664], [25.0, 13.041666666666668], [26.0, 23.721311475409838], [27.0, 14.440677966101696], [28.0, 15.214285714285715], [29.0, 27.535714285714285], [30.0, 14.55405405405405], [31.0, 19.703703703703706], [32.0, 20.08823529411765], [33.0, 27.083333333333332], [34.0, 35.800000000000004], [35.0, 20.559999999999995], [36.0, 26.333333333333332], [38.0, 35.39130434782608], [39.0, 21.636363636363637], [40.0, 16.846153846153843], [41.0, 25.567901234567902], [42.0, 15.040404040404042], [43.0, 13.8125], [44.0, 33.52272727272729], [45.0, 14.811764705882354], [46.0, 15.186046511627906], [47.0, 43.77551020408164], [48.0, 33.371428571428574], [49.0, 31.476190476190478], [50.0, 42.23404255319148], [51.0, 38.241379310344826], [52.0, 32.76923076923077], [53.0, 30.483870967741943], [54.0, 17.43076923076923], [55.0, 20.875000000000007], [56.0, 63.21153846153845], [57.0, 43.36363636363637], [58.0, 32.352941176470594], [59.0, 32.935897435897445], [60.0, 18.16494845360825], [61.0, 18.695652173913047], [62.0, 41.35384615384617], [64.0, 47.52941176470588], [65.0, 49.1904761904762], [66.0, 36.1304347826087], [67.0, 24.43055555555556], [68.0, 19.139784946236556], [69.0, 17.068627450980394], [70.0, 20.985915492957744], [71.0, 26.235294117647058], [72.0, 26.912], [73.0, 18.087719298245613], [74.0, 23.202702702702698], [75.0, 20.97945205479453], [76.0, 17.713178294573652], [77.0, 17.134615384615387], [78.0, 59.42105263157895], [79.0, 66.58064516129032], [80.0, 41.83333333333332], [81.0, 35.00000000000001], [82.0, 19.252100840336137], [83.0, 18.148148148148135], [84.0, 26.5], [85.0, 40.01492537313434], [86.0, 26.380434782608685], [88.0, 40.56291390728475], [89.0, 19.076335877862604], [90.0, 28.277777777777782], [91.0, 33.82653061224489], [92.0, 35.142857142857146], [93.0, 29.049180327868854], [94.0, 45.39436619718311], [95.0, 45.41463414634146], [96.0, 38.24242424242424], [97.0, 32.50000000000001], [98.0, 56.5], [99.0, 58.121019108280265], [100.0, 48.62009453181625], [1.0, 8.25]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[99.98511097444592, 48.61178529853861]], "isOverall": false, "label": "SkinPrice Creation-Aggregated", "isController": false}, {"data": [[2.0, 1.0], [3.0, 1.1428571428571428], [4.0, 1.6], [5.0, 1.1666666666666667], [6.0, 2.8], [7.0, 3.5], [8.0, 3.5000000000000004], [9.0, 9.5], [10.0, 1.625], [11.0, 3.923076923076923], [12.0, 4.125000000000001], [13.0, 5.499999999999999], [14.0, 7.192307692307692], [15.0, 3.4516129032258065], [16.0, 3.9444444444444446], [17.0, 15.187500000000002], [18.0, 21.624999999999996], [19.0, 13.0625], [20.0, 5.428571428571429], [21.0, 5.206896551724137], [22.0, 26.090909090909086], [23.0, 6.547619047619046], [24.0, 6.630434782608695], [25.0, 5.677419354838711], [26.0, 4.23529411764706], [27.0, 5.101449275362317], [28.0, 16.45], [29.0, 20.48571428571428], [30.0, 4.485294117647058], [31.0, 10.22857142857143], [32.0, 5.793103448275861], [33.0, 39.074074074074076], [34.0, 16.241379310344822], [35.0, 5.102564102564103], [36.0, 41.5], [37.0, 58.33333333333333], [38.0, 6.944444444444443], [39.0, 15.270833333333337], [40.0, 6.260000000000001], [41.0, 6.0131578947368425], [42.0, 5.17948717948718], [43.0, 4.9047619047619015], [44.0, 3.8548387096774217], [45.0, 5.638888888888891], [46.0, 6.760869565217389], [47.0, 14.575757575757576], [48.0, 32.142857142857146], [49.0, 30.282608695652172], [50.0, 14.033333333333333], [51.0, 36.17647058823528], [52.0, 12.681818181818185], [53.0, 10.878378378378375], [54.0, 10.144578313253014], [55.0, 4.9393939393939394], [56.0, 13.5], [57.0, 33.24999999999999], [58.0, 42.20754716981133], [59.0, 10.513157894736842], [60.0, 9.399999999999999], [61.0, 7.4615384615384635], [62.0, 17.07692307692308], [63.0, 47.285714285714285], [64.0, 27.347826086956523], [65.0, 3.3636363636363638], [66.0, 24.0], [67.0, 33.98591549295774], [68.0, 11.226890756302524], [69.0, 7.922413793103452], [70.0, 21.354838709677416], [71.0, 8.229508196721314], [72.0, 7.472222222222221], [73.0, 9.292307692307691], [74.0, 7.488372093023257], [75.0, 7.275], [76.0, 7.492424242424241], [77.0, 9.734848484848483], [78.0, 5.0], [79.0, 16.208333333333336], [80.0, 32.45652173913044], [81.0, 38.44594594594596], [82.0, 12.627737226277366], [83.0, 8.48031496062992], [84.0, 6.403846153846152], [85.0, 18.139534883720938], [86.0, 25.85046728971962], [87.0, 21.500000000000004], [88.0, 10.242187499999996], [89.0, 9.195121951219512], [90.0, 13.16], [91.0, 13.057142857142857], [92.0, 42.85915492957744], [93.0, 11.301587301587302], [94.0, 6.733333333333333], [95.0, 26.594594594594593], [96.0, 45.770270270270274], [97.0, 12.670886075949365], [98.0, 39.5], [99.0, 14.837662337662326], [100.0, 13.407818067868117], [1.0, 1.0]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}, {"data": [[99.98529423498363, 13.407980767260364]], "isOverall": false, "label": "SkinPrice Find By ID-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 131337.25, "minX": 1.5457512E12, "maxY": 855437.7666666667, "series": [{"data": [[1.54575222E12, 226057.01666666666], [1.54575444E12, 233573.65], [1.54575666E12, 210639.55], [1.54575888E12, 214869.08333333334], [1.54575324E12, 203412.08333333334], [1.54575768E12, 228607.93333333332], [1.5457587E12, 230940.66666666666], [1.54575546E12, 235020.98333333334], [1.54575462E12, 230238.86666666667], [1.54575906E12, 164053.41666666666], [1.54575684E12, 191262.0], [1.5457536E12, 215531.7], [1.54575342E12, 195169.63333333333], [1.54575564E12, 232157.01666666666], [1.54575786E12, 231093.81666666668], [1.54575186E12, 229075.51666666666], [1.5457524E12, 242161.05], [1.5457551E12, 249383.33333333334], [1.54575408E12, 205439.8], [1.54575732E12, 203596.35], [1.5457539E12, 207853.25], [1.54575612E12, 207687.33333333334], [1.54575834E12, 224144.26666666666], [1.54575138E12, 232354.71666666667], [1.54575288E12, 206237.38333333333], [1.54575204E12, 251633.78333333333], [1.54575648E12, 201629.43333333332], [1.5457575E12, 203975.45], [1.54575426E12, 211435.08333333334], [1.5457512E12, 131337.25], [1.54575306E12, 216285.18333333332], [1.5457563E12, 207037.46666666667], [1.54575852E12, 241913.15], [1.54575528E12, 220972.43333333332], [1.54575252E12, 234489.45], [1.54575696E12, 196278.96666666667], [1.54575798E12, 247940.25], [1.54575474E12, 255485.01666666666], [1.54575678E12, 199386.56666666668], [1.545759E12, 191630.88333333333], [1.54575354E12, 205084.18333333332], [1.54575576E12, 183837.95], [1.5457527E12, 213867.26666666666], [1.54575492E12, 242499.2], [1.54575714E12, 187349.71666666667], [1.54575198E12, 240486.3], [1.54575372E12, 199281.1], [1.54575816E12, 240047.05], [1.54575918E12, 199852.86666666667], [1.54575594E12, 217150.36666666667], [1.54575318E12, 201190.25], [1.5457554E12, 240388.2], [1.54575762E12, 228211.68333333332], [1.54575216E12, 241751.45], [1.5457515E12, 235253.83333333334], [1.5457542E12, 216065.15], [1.54575642E12, 185080.45], [1.54575864E12, 240597.26666666666], [1.54575168E12, 245294.16666666666], [1.54575558E12, 248299.28333333333], [1.54575234E12, 217890.0], [1.54575456E12, 240165.6], [1.54575132E12, 241500.98333333334], [1.5457578E12, 246062.2], [1.54575438E12, 203775.23333333334], [1.54575882E12, 236684.48333333334], [1.5457566E12, 209469.53333333333], [1.54575336E12, 209227.83333333334], [1.54575144E12, 248856.91666666666], [1.54575606E12, 203854.05], [1.54575282E12, 204062.7], [1.54575504E12, 228391.43333333332], [1.54575828E12, 205235.2], [1.54575486E12, 231520.93333333332], [1.54575708E12, 200141.2], [1.54575384E12, 208991.11666666667], [1.545753E12, 211490.51666666666], [1.54575744E12, 212849.56666666668], [1.54575846E12, 233662.55], [1.54575522E12, 219050.91666666666], [1.54575624E12, 205870.38333333333], [1.54575726E12, 216238.35], [1.54575402E12, 197506.33333333334], [1.54575126E12, 212314.53333333333], [1.54575348E12, 202132.06666666668], [1.54575792E12, 219922.38333333333], [1.5457518E12, 247772.38333333333], [1.54575894E12, 208886.73333333334], [1.5457557E12, 184036.23333333334], [1.54575228E12, 237628.11666666667], [1.54575672E12, 211844.73333333334], [1.54575774E12, 247593.6], [1.5457545E12, 238470.08333333334], [1.54575366E12, 203001.18333333332], [1.54575588E12, 198191.76666666666], [1.5457581E12, 209453.15], [1.54575162E12, 216907.01666666666], [1.54575264E12, 211597.98333333334], [1.54575246E12, 234884.65], [1.54575468E12, 235419.05], [1.5457569E12, 187336.26666666666], [1.54575912E12, 172290.58333333334], [1.54575414E12, 202344.28333333333], [1.54575858E12, 236102.03333333333], [1.54575636E12, 195844.83333333334], [1.54575312E12, 199570.26666666666], [1.54575294E12, 221713.56666666668], [1.54575516E12, 225773.18333333332], [1.54575738E12, 201175.45], [1.54575174E12, 237255.18333333332], [1.54575654E12, 207686.83333333334], [1.54575876E12, 226563.4], [1.5457533E12, 217318.7], [1.54575552E12, 232078.86666666667], [1.54575534E12, 241952.55], [1.5457521E12, 244088.48333333334], [1.54575432E12, 195475.83333333334], [1.54575156E12, 229759.25], [1.54575756E12, 200055.15], [1.54575702E12, 209305.43333333332], [1.54575924E12, 159598.25], [1.54575378E12, 202694.91666666666], [1.545756E12, 214876.43333333332], [1.54575582E12, 199448.25], [1.54575258E12, 209454.63333333333], [1.5457548E12, 237556.05], [1.54575804E12, 224056.96666666667], [1.5457584E12, 245349.4], [1.54575192E12, 233613.43333333332], [1.54575396E12, 213439.53333333333], [1.54575618E12, 202676.28333333333], [1.54575276E12, 206934.68333333332], [1.5457572E12, 192276.61666666667], [1.54575822E12, 219149.16666666666], [1.54575498E12, 236907.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.54575222E12, 741089.05], [1.54575444E12, 764653.5333333333], [1.54575666E12, 812699.9666666667], [1.54575888E12, 822222.7333333333], [1.54575324E12, 784817.2333333333], [1.54575768E12, 749344.5], [1.5457587E12, 756618.3], [1.54575546E12, 772164.1333333333], [1.54575462E12, 755847.95], [1.54575906E12, 632954.5333333333], [1.54575684E12, 737935.8666666667], [1.5457536E12, 831573.0], [1.54575342E12, 753007.3166666667], [1.54575564E12, 767096.1833333333], [1.54575786E12, 758297.6333333333], [1.54575186E12, 751165.0], [1.5457524E12, 794560.8333333334], [1.5457551E12, 816344.3666666667], [1.54575408E12, 792638.9], [1.54575732E12, 785518.7], [1.5457539E12, 801927.6166666667], [1.54575612E12, 801306.9333333333], [1.54575834E12, 732897.45], [1.54575138E12, 760787.0], [1.54575288E12, 795695.7166666667], [1.54575204E12, 824355.4666666667], [1.54575648E12, 777933.0], [1.5457575E12, 785059.6833333333], [1.54575426E12, 815780.6833333333], [1.5457512E12, 504782.1666666667], [1.54575306E12, 834477.5166666667], [1.5457563E12, 798798.1666666666], [1.54575852E12, 793646.8833333333], [1.54575528E12, 724300.7333333333], [1.54575252E12, 767625.7], [1.54575696E12, 757300.5833333334], [1.54575798E12, 812546.6333333333], [1.54575474E12, 837527.7333333333], [1.54575678E12, 769275.2333333333], [1.545759E12, 739355.5666666667], [1.54575354E12, 791233.5833333334], [1.54575576E12, 709289.9333333333], [1.5457527E12, 825142.8666666667], [1.54575492E12, 793384.4666666667], [1.54575714E12, 722837.3333333334], [1.54575198E12, 788234.0166666667], [1.54575372E12, 768871.2166666667], [1.54575816E12, 785860.3], [1.54575918E12, 771077.5], [1.54575594E12, 837818.4333333333], [1.54575318E12, 776214.2], [1.5457554E12, 788705.9333333333], [1.54575762E12, 747300.25], [1.54575216E12, 791536.85], [1.5457515E12, 769674.6333333333], [1.5457542E12, 833632.3333333334], [1.54575642E12, 714070.4], [1.54575864E12, 790664.5], [1.54575168E12, 805128.25], [1.54575558E12, 813654.4166666666], [1.54575234E12, 714961.0833333334], [1.54575456E12, 784685.85], [1.54575132E12, 801462.8166666667], [1.5457578E12, 807105.1], [1.54575438E12, 765687.9], [1.54575882E12, 776439.9], [1.5457566E12, 808165.45], [1.54575336E12, 807259.6], [1.54575144E12, 814796.5333333333], [1.54575606E12, 786516.65], [1.54575282E12, 787322.5333333333], [1.54575504E12, 748344.95], [1.54575828E12, 672810.9666666667], [1.54575486E12, 758897.3666666667], [1.54575708E12, 772198.2666666667], [1.54575384E12, 806362.8666666667], [1.545753E12, 815971.3333333334], [1.54575744E12, 820086.8166666667], [1.54575846E12, 764336.95], [1.54575522E12, 718854.9], [1.54575624E12, 794299.5666666667], [1.54575726E12, 834297.9666666667], [1.54575402E12, 762019.7], [1.54575126E12, 817481.5833333334], [1.54575348E12, 779893.9666666667], [1.54575792E12, 722367.4], [1.5457518E12, 812787.3166666667], [1.54575894E12, 805942.7333333333], [1.5457557E12, 710051.0], [1.54575228E12, 780496.7666666667], [1.54575672E12, 817346.3166666667], [1.54575774E12, 811037.7166666667], [1.5457545E12, 782124.4], [1.54575366E12, 783233.9333333333], [1.54575588E12, 764659.9833333333], [1.5457581E12, 685558.6833333333], [1.54575162E12, 710075.5666666667], [1.54575264E12, 816393.1166666667], [1.54575246E12, 769193.4333333333], [1.54575468E12, 772584.6666666666], [1.5457569E12, 722791.3], [1.54575912E12, 664735.5], [1.54575414E12, 780693.6666666666], [1.54575858E12, 774373.2333333333], [1.54575636E12, 755629.7], [1.54575312E12, 770006.8333333334], [1.54575294E12, 855437.7666666667], [1.54575516E12, 739670.5333333333], [1.54575738E12, 776194.0666666667], [1.54575174E12, 777004.6666666666], [1.54575654E12, 801326.5], [1.54575876E12, 742729.2], [1.5457533E12, 838464.9333333333], [1.54575552E12, 761374.3333333334], [1.54575534E12, 794032.25], [1.5457521E12, 801457.0666666667], [1.54575432E12, 751717.8333333334], [1.54575156E12, 751700.0333333333], [1.54575756E12, 708616.1833333333], [1.54575702E12, 807536.7333333333], [1.54575924E12, 601132.0], [1.54575378E12, 782040.7333333333], [1.545756E12, 829044.1666666666], [1.54575582E12, 769530.4], [1.54575258E12, 788835.5666666667], [1.5457548E12, 779214.3333333334], [1.54575804E12, 734653.2], [1.5457584E12, 804060.65], [1.54575192E12, 765819.3333333334], [1.54575396E12, 823498.7666666667], [1.54575618E12, 781973.5333333333], [1.54575276E12, 798418.8333333334], [1.5457572E12, 741856.3], [1.54575822E12, 718167.5833333334], [1.54575498E12, 776168.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54575924E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 12.242439578698086, "minX": 1.5457512E12, "maxY": 60.69426989922951, "series": [{"data": [[1.54575222E12, 51.13430155039617], [1.54575444E12, 49.291577825160324], [1.54575666E12, 46.403330017383524], [1.54575888E12, 46.44348862620541], [1.54575324E12, 47.67068996014824], [1.54575768E12, 50.032740360567885], [1.5457587E12, 49.935901726054944], [1.54575546E12, 49.10631524394843], [1.54575462E12, 50.01072134227344], [1.54575906E12, 60.69426989922951], [1.54575684E12, 51.23280212483427], [1.5457536E12, 45.159487753619146], [1.54575342E12, 50.27938050409995], [1.54575564E12, 49.385399921218145], [1.54575786E12, 49.72075516402077], [1.54575186E12, 50.809576619479], [1.5457524E12, 47.28943338437901], [1.5457551E12, 46.03224644568699], [1.54575408E12, 48.129453339102255], [1.54575732E12, 48.0692326086728], [1.5457539E12, 46.639449961803116], [1.54575612E12, 47.418446799836765], [1.54575834E12, 52.08734315451509], [1.54575138E12, 49.51325869180895], [1.54575288E12, 47.12924087666262], [1.54575204E12, 45.51950020808118], [1.54575648E12, 48.37466669466115], [1.5457575E12, 47.653299708375755], [1.54575426E12, 46.323127583549855], [1.5457512E12, 44.97305876476395], [1.54575306E12, 45.505191869169956], [1.5457563E12, 47.24371741130757], [1.54575852E12, 48.276653115834804], [1.54575528E12, 51.98142114697423], [1.54575252E12, 49.24039105966933], [1.54575696E12, 49.85171447056271], [1.54575798E12, 46.90153060711652], [1.54575474E12, 45.16657564172568], [1.54575678E12, 49.3645001698655], [1.545759E12, 51.27238686445805], [1.54575354E12, 47.55825598562825], [1.54575576E12, 53.56335417314277], [1.5457527E12, 45.519013777813115], [1.54575492E12, 47.91215645908395], [1.54575714E12, 51.849141875783786], [1.54575198E12, 47.891182960561345], [1.54575372E12, 48.928451553969644], [1.54575816E12, 48.21459673480431], [1.54575918E12, 49.746870167559784], [1.54575594E12, 44.992514036182335], [1.54575318E12, 48.59127598000531], [1.5457554E12, 47.547561859405604], [1.54575762E12, 51.04982221931352], [1.54575216E12, 47.90206759935617], [1.5457515E12, 48.7659037664441], [1.5457542E12, 45.08051449339241], [1.54575642E12, 53.8820104549148], [1.54575864E12, 47.31583187028741], [1.54575168E12, 47.19423453396482], [1.54575558E12, 46.30185004868584], [1.54575234E12, 52.81869073460517], [1.54575456E12, 48.478773903379086], [1.54575132E12, 46.846000549053976], [1.5457578E12, 46.85244193574516], [1.54575438E12, 49.391829481121924], [1.54575882E12, 48.70993289719987], [1.5457566E12, 46.29665864850148], [1.54575336E12, 46.78599607517839], [1.54575144E12, 46.14003980278689], [1.54575606E12, 47.81201133850454], [1.54575282E12, 48.167838768566824], [1.54575504E12, 50.77394360048843], [1.54575828E12, 56.17931042852512], [1.54575486E12, 49.701068649713264], [1.54575708E12, 48.71995558375672], [1.54575384E12, 46.50552309982073], [1.545753E12, 46.147136837258685], [1.54575744E12, 46.26184888323147], [1.54575846E12, 49.20431693113241], [1.54575522E12, 52.77321941853499], [1.54575624E12, 47.04026114224046], [1.54575726E12, 45.2395481553265], [1.54575402E12, 49.618003901309486], [1.54575126E12, 46.36943907156637], [1.54575348E12, 48.72683682656735], [1.54575792E12, 52.21626786683529], [1.5457518E12, 46.099896495934885], [1.54575894E12, 46.452723514631316], [1.5457557E12, 53.343274826896], [1.54575228E12, 48.58778785691084], [1.54575672E12, 46.306788433483995], [1.54575774E12, 45.84807518343555], [1.5457545E12, 48.34943110777658], [1.54575366E12, 48.28638899025111], [1.54575588E12, 49.24268868428361], [1.5457581E12, 55.74353109363745], [1.54575162E12, 53.147771184101295], [1.54575264E12, 46.04216475766544], [1.54575246E12, 49.09110792589058], [1.54575468E12, 48.61792991207256], [1.5457569E12, 52.14636764207466], [1.54575912E12, 57.47909576755379], [1.54575414E12, 48.147452325910386], [1.54575858E12, 48.32199242767746], [1.54575636E12, 50.1413334774151], [1.54575312E12, 48.97746696922724], [1.54575294E12, 44.08661372227071], [1.54575516E12, 51.47963081543026], [1.54575738E12, 48.33915101783194], [1.54575174E12, 48.60155535704924], [1.54575654E12, 46.82564395174425], [1.54575876E12, 51.06119711496113], [1.5457533E12, 44.71984883018708], [1.54575552E12, 49.92609078038541], [1.54575534E12, 47.36821749282537], [1.5457521E12, 47.09389264753757], [1.54575432E12, 49.86133616394411], [1.54575156E12, 50.83644245499341], [1.54575756E12, 53.438077166350126], [1.54575702E12, 46.857904318802895], [1.54575924E12, 46.13776070997285], [1.54575378E12, 48.4541486084286], [1.545756E12, 45.09464517908428], [1.54575582E12, 49.17729390167562], [1.54575258E12, 48.04900671849602], [1.5457548E12, 48.30256469379882], [1.54575804E12, 51.24806589302355], [1.5457584E12, 46.48626582857001], [1.54575192E12, 49.32402145286716], [1.54575396E12, 45.70810607112309], [1.54575618E12, 48.07429532233985], [1.54575276E12, 47.15599145028162], [1.5457572E12, 51.50288947350994], [1.54575822E12, 52.55482396288239], [1.54575498E12, 49.017621006343646]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[1.54575222E12, 13.834415190821947], [1.54575444E12, 13.58735164390264], [1.54575666E12, 12.935704308153076], [1.54575888E12, 12.250002482646313], [1.54575324E12, 13.687442112164554], [1.54575768E12, 14.129953215101812], [1.5457587E12, 13.75277891692391], [1.54575546E12, 13.32696314314422], [1.54575462E12, 13.814287257019393], [1.54575906E12, 15.43174341044268], [1.54575684E12, 13.9043935369633], [1.5457536E12, 12.746322157405812], [1.54575342E12, 13.688034790529963], [1.54575564E12, 13.415571004247878], [1.54575786E12, 13.846294680839797], [1.54575186E12, 13.418491140341375], [1.5457524E12, 13.36246646589028], [1.5457551E12, 13.003340601308308], [1.54575408E12, 12.70049354476418], [1.54575732E12, 13.296934288357766], [1.5457539E12, 13.377216736231356], [1.54575612E12, 12.72426620464736], [1.54575834E12, 13.630519314117763], [1.54575138E12, 13.754830141798344], [1.54575288E12, 13.403387987112882], [1.54575204E12, 12.899104737759492], [1.54575648E12, 13.581022066388394], [1.5457575E12, 13.482719264570171], [1.54575426E12, 12.73079118392206], [1.5457512E12, 14.94361065884291], [1.54575306E12, 12.270036991368586], [1.5457563E12, 13.01319811484705], [1.54575852E12, 12.520244830778832], [1.54575528E12, 14.539427089207162], [1.54575252E12, 13.556481215487425], [1.54575696E12, 13.793047661162435], [1.54575798E12, 12.532834095592218], [1.54575474E12, 12.346798327273511], [1.54575678E12, 13.336737185134885], [1.545759E12, 13.97593222585487], [1.54575354E12, 13.324083148501662], [1.54575576E12, 14.484295122737686], [1.5457527E12, 12.914379020286948], [1.54575492E12, 12.879042717447266], [1.54575714E12, 14.767245080096881], [1.54575198E12, 13.225006217358954], [1.54575372E12, 13.706761407086303], [1.54575816E12, 13.16698361234933], [1.54575918E12, 12.928472332538965], [1.54575594E12, 12.498211309204768], [1.54575318E12, 13.497197244570618], [1.5457554E12, 13.545569410497542], [1.54575762E12, 13.38509601230003], [1.54575216E12, 12.978075605629037], [1.5457515E12, 13.738842432143066], [1.5457542E12, 12.689676117326837], [1.54575642E12, 13.623733735793797], [1.54575864E12, 13.56653752776477], [1.54575168E12, 12.710809522360385], [1.54575558E12, 12.885121371157911], [1.54575234E12, 14.520034256351682], [1.54575456E12, 12.774993509528107], [1.54575132E12, 13.204747714119966], [1.5457578E12, 12.866790149697948], [1.54575438E12, 13.322763379261776], [1.54575882E12, 13.398359103818384], [1.5457566E12, 13.317611047692195], [1.54575336E12, 12.947143695489629], [1.54575144E12, 12.83869612198338], [1.54575606E12, 13.444994756460925], [1.54575282E12, 13.046500772765459], [1.54575504E12, 13.54698327131469], [1.54575828E12, 15.434850177261827], [1.54575486E12, 13.868265599276873], [1.54575708E12, 13.661526420442582], [1.54575384E12, 13.20004255577859], [1.545753E12, 12.897828479936019], [1.54575744E12, 12.476700477326943], [1.54575846E12, 13.876386129094257], [1.54575522E12, 14.280091330425364], [1.54575624E12, 13.548700864719333], [1.54575726E12, 12.462211607169026], [1.54575402E12, 13.672774616645848], [1.54575126E12, 12.453801449405525], [1.54575348E12, 13.092211805373722], [1.54575792E12, 14.463012769804608], [1.5457518E12, 13.118315971350183], [1.54575894E12, 13.252467721993668], [1.5457557E12, 14.472559573097678], [1.54575228E12, 13.250421188116729], [1.54575672E12, 12.613955858403056], [1.54575774E12, 13.33019938727335], [1.5457545E12, 13.245977155244233], [1.54575366E12, 13.306525955742764], [1.54575588E12, 13.746396155899602], [1.5457581E12, 14.534100383525123], [1.54575162E12, 14.779786756840753], [1.54575264E12, 12.874403577037327], [1.54575246E12, 13.565738066927], [1.54575468E12, 13.704244564757547], [1.5457569E12, 14.519406998949178], [1.54575912E12, 14.874398034397895], [1.54575414E12, 13.563152499110831], [1.54575858E12, 13.895704809811528], [1.54575636E12, 13.727820117831437], [1.54575312E12, 13.623890002864515], [1.54575294E12, 12.242439578698086], [1.54575516E12, 13.667307097742945], [1.54575738E12, 13.670665488066765], [1.54575174E12, 13.398109895192734], [1.54575654E12, 13.259188271636514], [1.54575876E12, 13.81749505168238], [1.5457533E12, 12.753272429779301], [1.54575552E12, 13.441166689909013], [1.54575534E12, 13.3367403598973], [1.5457521E12, 13.030388570147403], [1.54575432E12, 13.983406756362058], [1.54575156E12, 13.305182883773519], [1.54575756E12, 14.445562776787236], [1.54575702E12, 12.852432661975307], [1.54575924E12, 13.062258025077218], [1.54575378E12, 13.223619087396882], [1.545756E12, 13.058926091196469], [1.54575582E12, 13.4001931813358], [1.54575258E12, 13.071089115061774], [1.5457548E12, 13.453464122153367], [1.54575804E12, 14.329375535025346], [1.5457584E12, 13.34776733553467], [1.54575192E12, 13.65813725281057], [1.54575396E12, 12.793300078344162], [1.54575618E12, 13.547038181969945], [1.54575276E12, 13.197069836917617], [1.5457572E12, 13.458928315846547], [1.54575822E12, 14.548194894536236], [1.54575498E12, 13.179483671342997]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54575924E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5457512E12, "maxY": 60.6940763583344, "series": [{"data": [[1.54575222E12, 51.133981994688654], [1.54575444E12, 49.291407249467184], [1.54575666E12, 46.40308885740391], [1.54575888E12, 46.443220423164966], [1.54575324E12, 47.67049226383027], [1.54575768E12, 50.03246852097538], [1.5457587E12, 49.93556709377326], [1.54575546E12, 49.10608256036519], [1.54575462E12, 50.01051620077978], [1.54575906E12, 60.6940763583344], [1.54575684E12, 51.232514386896405], [1.5457536E12, 45.159291340129066], [1.54575342E12, 50.279174439286685], [1.54575564E12, 49.38511247617924], [1.54575786E12, 49.7204428457584], [1.54575186E12, 50.809348294082525], [1.5457524E12, 47.28918671695938], [1.5457551E12, 46.032026333429364], [1.54575408E12, 48.129206074468456], [1.54575732E12, 48.068962290633145], [1.5457539E12, 46.63920550038223], [1.54575612E12, 47.41823277619212], [1.54575834E12, 52.087142570594054], [1.54575138E12, 49.513001553543866], [1.54575288E12, 47.12906636554924], [1.54575204E12, 45.519252492023625], [1.54575648E12, 48.374362258288095], [1.5457575E12, 47.652998744253715], [1.54575426E12, 46.32291739648286], [1.5457512E12, 44.972865406615995], [1.54575306E12, 45.50503528122289], [1.5457563E12, 47.24345158981677], [1.54575852E12, 48.27638552976937], [1.54575528E12, 51.981229496184135], [1.54575252E12, 49.240103828682734], [1.54575696E12, 49.85141255121849], [1.54575798E12, 46.90130950825569], [1.54575474E12, 45.166253803542276], [1.54575678E12, 49.3642984542219], [1.545759E12, 51.272199087625495], [1.54575354E12, 47.5579359261592], [1.54575576E12, 53.562882111153414], [1.5457527E12, 45.51873663789642], [1.54575492E12, 47.911868244982486], [1.54575714E12, 51.84890460641498], [1.54575198E12, 47.8909550497774], [1.54575372E12, 48.92821787436515], [1.54575816E12, 48.214336932461606], [1.54575918E12, 49.74656300972244], [1.54575594E12, 44.99226060511586], [1.54575318E12, 48.59102341489047], [1.5457554E12, 47.54726162128562], [1.54575762E12, 51.049593176711745], [1.54575216E12, 47.90185093475231], [1.5457515E12, 48.76572355379354], [1.5457542E12, 45.08026958983539], [1.54575642E12, 53.88139276849345], [1.54575864E12, 47.31559434059721], [1.54575168E12, 47.19408238408703], [1.54575558E12, 46.301639245525614], [1.54575234E12, 52.818313721009915], [1.54575456E12, 48.47858693506996], [1.54575132E12, 46.84584803408165], [1.5457578E12, 46.85220927409579], [1.54575438E12, 49.39163793470347], [1.54575882E12, 48.70972254359535], [1.5457566E12, 46.2964362960123], [1.54575336E12, 46.785813995832484], [1.54575144E12, 46.139829788084896], [1.54575606E12, 47.81176214061056], [1.54575282E12, 48.16770392498612], [1.54575504E12, 50.77375807578112], [1.54575828E12, 56.1789706185757], [1.54575486E12, 49.700810365794766], [1.54575708E12, 48.719701776649714], [1.54575384E12, 46.50520922980316], [1.545753E12, 46.14686658592513], [1.54575744E12, 46.26160027049046], [1.54575846E12, 49.20406047977785], [1.54575522E12, 52.77291266658348], [1.54575624E12, 47.040065799619654], [1.54575726E12, 45.2393817480588], [1.54575402E12, 49.61784313305152], [1.54575126E12, 46.36921972521912], [1.54575348E12, 48.7265855650239], [1.54575792E12, 52.21593993124647], [1.5457518E12, 46.09959502778588], [1.54575894E12, 46.452510740049966], [1.5457557E12, 53.34303328655908], [1.54575228E12, 48.58747397386434], [1.54575672E12, 46.306598589156856], [1.54575774E12, 45.847924414513926], [1.5457545E12, 48.34918104526065], [1.54575366E12, 48.2861804722936], [1.54575588E12, 49.24244301553068], [1.5457581E12, 55.743280914938985], [1.54575162E12, 53.14744916735722], [1.54575264E12, 46.041894663131686], [1.54575246E12, 49.09089557785166], [1.54575468E12, 48.61772911734909], [1.5457569E12, 52.146152977064176], [1.54575912E12, 57.478739480312484], [1.54575414E12, 48.14718035084768], [1.54575858E12, 48.32157057129904], [1.54575636E12, 50.14109574238154], [1.54575312E12, 48.97723368608505], [1.54575294E12, 44.08641327173478], [1.54575516E12, 51.47932168959299], [1.54575738E12, 48.33895113355396], [1.54575174E12, 48.60126110030978], [1.54575654E12, 46.82532808933792], [1.54575876E12, 51.06094423432101], [1.5457533E12, 44.71966376405051], [1.54575552E12, 49.925919172852055], [1.54575534E12, 47.367960336155804], [1.5457521E12, 47.09369905445099], [1.54575432E12, 49.86106537844948], [1.54575156E12, 50.83611651329294], [1.54575756E12, 53.437789661318895], [1.54575702E12, 46.85770203297302], [1.54575924E12, 46.124720122670766], [1.54575378E12, 48.45389796877445], [1.545756E12, 45.09445801647045], [1.54575582E12, 49.17707106399726], [1.54575258E12, 48.04869615627502], [1.5457548E12, 48.30232363144704], [1.54575804E12, 51.24785469743441], [1.5457584E12, 46.48595103425224], [1.54575192E12, 49.323690916651834], [1.54575396E12, 45.707848231817394], [1.54575618E12, 48.07409689513701], [1.54575276E12, 47.15573577688907], [1.5457572E12, 51.50265831562946], [1.54575822E12, 52.554642012372916], [1.54575498E12, 49.01737904625691]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[1.54575222E12, 1.5329571628517191], [1.54575444E12, 1.5488376552811707], [1.54575666E12, 0.0], [1.54575888E12, 0.06445942859412616], [1.54575324E12, 0.0], [1.54575768E12, 1.6074638233053962], [1.5457587E12, 1.5756404998812896], [1.54575546E12, 1.4595526413198614], [1.54575462E12, 1.5268034557235501], [1.54575906E12, 0.0], [1.54575684E12, 0.0], [1.5457536E12, 0.0], [1.54575342E12, 0.0], [1.54575564E12, 1.4254825350523215], [1.54575786E12, 1.5667345158476218], [1.54575186E12, 1.4758995542993867], [1.5457524E12, 1.4896442557740335], [1.5457551E12, 1.489888179872365], [1.54575408E12, 0.0], [1.54575732E12, 0.0], [1.5457539E12, 0.0], [1.54575612E12, 0.0], [1.54575834E12, 1.5321270598197285], [1.54575138E12, 1.5574583386882628], [1.54575288E12, 0.0], [1.54575204E12, 1.458405957851367], [1.54575648E12, 0.0], [1.5457575E12, 0.0], [1.54575426E12, 0.0], [1.5457512E12, 0.0], [1.54575306E12, 0.0], [1.5457563E12, 0.0], [1.54575852E12, 1.3743133422487495], [1.54575528E12, 1.641863087853836], [1.54575252E12, 1.5570451232617257], [1.54575696E12, 0.0], [1.54575798E12, 1.4021912851183564], [1.54575474E12, 1.3947966116564663], [1.54575678E12, 0.0], [1.545759E12, 0.0], [1.54575354E12, 0.0], [1.54575576E12, 0.0], [1.5457527E12, 0.0], [1.54575492E12, 1.4424704065877643], [1.54575714E12, 0.0], [1.54575198E12, 1.4826224819696567], [1.54575372E12, 0.0], [1.54575816E12, 1.5060739262815466], [1.54575918E12, 0.0], [1.54575594E12, 0.0], [1.54575318E12, 0.0], [1.5457554E12, 1.524721405194927], [1.54575762E12, 1.5215523351543532], [1.54575216E12, 1.4979881143989024], [1.5457515E12, 1.543766493911182], [1.5457542E12, 0.0], [1.54575642E12, 0.0], [1.54575864E12, 1.5013482101348261], [1.54575168E12, 1.4340240797654953], [1.54575558E12, 1.428135630638344], [1.54575234E12, 1.6296774193548422], [1.54575456E12, 1.44805026221507], [1.54575132E12, 1.3715991497238702], [1.5457578E12, 1.4327979028127764], [1.54575438E12, 0.21280107332240095], [1.54575882E12, 1.4944146418428461], [1.5457566E12, 0.0], [1.54575336E12, 0.0], [1.54575144E12, 1.4387081282266863], [1.54575606E12, 0.0], [1.54575282E12, 0.0], [1.54575504E12, 1.5068911707897126], [1.54575828E12, 1.73016123549123], [1.54575486E12, 1.5578294974014801], [1.54575708E12, 0.0], [1.54575384E12, 0.0], [1.545753E12, 0.0], [1.54575744E12, 0.0], [1.54575846E12, 1.5675063564301466], [1.54575522E12, 1.5790280806979164], [1.54575624E12, 0.0], [1.54575726E12, 0.0], [1.54575402E12, 0.0], [1.54575126E12, 0.0], [1.54575348E12, 0.0], [1.54575792E12, 1.600598937733071], [1.5457518E12, 1.4731533848332963], [1.54575894E12, 0.0], [1.5457557E12, 0.0], [1.54575228E12, 1.5096009962014423], [1.54575672E12, 0.0], [1.54575774E12, 1.4915373411681903], [1.5457545E12, 1.4370935467734056], [1.54575366E12, 0.0], [1.54575588E12, 0.0], [1.5457581E12, 1.6664641844731856], [1.54575162E12, 1.6663446165878755], [1.54575264E12, 0.0], [1.54575246E12, 1.5372112281297923], [1.54575468E12, 1.508184586752386], [1.5457569E12, 0.0], [1.54575912E12, 0.0], [1.54575414E12, 0.0], [1.54575858E12, 1.558553998333814], [1.54575636E12, 0.0], [1.54575312E12, 0.0], [1.54575294E12, 0.0], [1.54575516E12, 1.5371781281745582], [1.54575738E12, 0.0], [1.54575174E12, 1.5076161342205472], [1.54575654E12, 0.0], [1.54575876E12, 1.5489003738728844], [1.5457533E12, 0.0], [1.54575552E12, 1.5103034723935571], [1.54575534E12, 1.4859537275064327], [1.5457521E12, 1.4529547840088144], [1.54575432E12, 0.0], [1.54575156E12, 1.53678858918231], [1.54575756E12, 0.8019669868292333], [1.54575702E12, 0.0], [1.54575924E12, 0.0], [1.54575378E12, 0.0], [1.545756E12, 0.0], [1.54575582E12, 0.0], [1.54575258E12, 0.18070467887723762], [1.5457548E12, 1.5054233344861372], [1.54575804E12, 1.5731581229363367], [1.5457584E12, 1.5169418338836673], [1.54575192E12, 1.5176739125797263], [1.54575396E12, 0.0], [1.54575618E12, 0.0], [1.54575276E12, 0.0], [1.5457572E12, 0.0], [1.54575822E12, 1.6635624538063662], [1.54575498E12, 1.4862498289779689]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54575924E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5457512E12, "maxY": 0.18465091673870734, "series": [{"data": [[1.54575222E12, 0.16581635464071798], [1.54575444E12, 0.1644776119402951], [1.54575666E12, 0.1541112752338754], [1.54575888E12, 0.14909108969901552], [1.54575324E12, 0.16343242427710789], [1.54575768E12, 0.16717047604549407], [1.5457587E12, 0.1689353296127972], [1.54575546E12, 0.16186316090069855], [1.54575462E12, 0.1654088254029967], [1.54575906E12, 0.18465091673870734], [1.54575684E12, 0.17068393094289824], [1.5457536E12, 0.1586137135898483], [1.54575342E12, 0.16863693549086559], [1.54575564E12, 0.16185284943203138], [1.54575786E12, 0.16459172464298988], [1.54575186E12, 0.15731619805597377], [1.5457524E12, 0.15771298190077676], [1.5457551E12, 0.15557934546618624], [1.54575408E12, 0.15410768374852987], [1.54575732E12, 0.1606520902862242], [1.5457539E12, 0.16398268398268215], [1.54575612E12, 0.15813289849164527], [1.54575834E12, 0.16403307406003967], [1.54575138E12, 0.1641506401671399], [1.54575288E12, 0.16038597751886316], [1.54575204E12, 0.15953904995937251], [1.54575648E12, 0.1633038694912793], [1.5457575E12, 0.16316406695932922], [1.54575426E12, 0.15833091451391682], [1.5457512E12, 0.16192133546027235], [1.54575306E12, 0.15592244981845546], [1.5457563E12, 0.16065841938451988], [1.54575852E12, 0.15501466577471432], [1.54575528E12, 0.17165146612854099], [1.54575252E12, 0.16020042339975002], [1.54575696E12, 0.16764071598015773], [1.54575798E12, 0.1509904223993244], [1.54575474E12, 0.15431653272996765], [1.54575678E12, 0.16307117377271804], [1.545759E12, 0.16906542365767263], [1.54575354E12, 0.15973032408602306], [1.54575576E12, 0.17037983719618324], [1.5457527E12, 0.1559901813286886], [1.54575492E12, 0.15503860010293363], [1.54575714E12, 0.17337611714327866], [1.54575198E12, 0.15779713868371142], [1.54575372E12, 0.16813247509187798], [1.54575816E12, 0.15837550791357793], [1.54575918E12, 0.15658694685110353], [1.54575594E12, 0.15116188396755853], [1.54575318E12, 0.16698763483293766], [1.5457554E12, 0.16666321565379238], [1.54575762E12, 0.16419082520777398], [1.54575216E12, 0.1561223226445438], [1.5457515E12, 0.16836101894353123], [1.5457542E12, 0.15487700943368363], [1.54575642E12, 0.16305777655765608], [1.54575864E12, 0.16226376123102038], [1.54575168E12, 0.15897633562234323], [1.54575558E12, 0.1608628876017615], [1.54575234E12, 0.1714040900262757], [1.54575456E12, 0.15636782898632015], [1.54575132E12, 0.15881892405771428], [1.5457578E12, 0.16217528526341332], [1.54575438E12, 0.16249521133954803], [1.54575882E12, 0.1633500915038172], [1.5457566E12, 0.15970972893210053], [1.54575336E12, 0.15916769507778689], [1.54575144E12, 0.15892112447871576], [1.54575606E12, 0.162300511894009], [1.54575282E12, 0.15776699029126248], [1.54575504E12, 0.1622468133403184], [1.54575828E12, 0.18232017378851573], [1.54575486E12, 0.17013376954617315], [1.54575708E12, 0.16275380710659762], [1.54575384E12, 0.16360727773446718], [1.545753E12, 0.15776672305243722], [1.54575744E12, 0.1546868473915565], [1.54575846E12, 0.17093551316984687], [1.54575522E12, 0.1691680205410178], [1.54575624E12, 0.16352233588649742], [1.54575726E12, 0.1513718810873238], [1.54575402E12, 0.16455167091809397], [1.54575126E12, 0.15133900975094564], [1.54575348E12, 0.1589229255218952], [1.54575792E12, 0.17262981726071872], [1.5457518E12, 0.15993890245495704], [1.54575894E12, 0.16570073761854714], [1.5457557E12, 0.17328793908582596], [1.54575228E12, 0.15659625223641577], [1.54575672E12, 0.15610199636298225], [1.54575774E12, 0.16388581767011726], [1.5457545E12, 0.1558514628657166], [1.54575366E12, 0.16272741489860731], [1.54575588E12, 0.16591185832389788], [1.5457581E12, 0.17349297116988247], [1.54575162E12, 0.1767871929340349], [1.54575264E12, 0.15953583754314132], [1.54575246E12, 0.16596060943887148], [1.54575468E12, 0.16421838011498116], [1.5457569E12, 0.1745226528075923], [1.54575912E12, 0.17811904908163925], [1.54575414E12, 0.16299674675983478], [1.54575858E12, 0.16851053058985985], [1.54575636E12, 0.16600389020964004], [1.54575312E12, 0.1671367675439537], [1.54575294E12, 0.15250467717918262], [1.54575516E12, 0.16268851155909858], [1.54575738E12, 0.16590395034453617], [1.54575174E12, 0.16295517839314896], [1.54575654E12, 0.16445223345288507], [1.54575876E12, 0.1669122174333686], [1.5457533E12, 0.15490035649582026], [1.54575552E12, 0.15991677034621754], [1.54575534E12, 0.16082578149912086], [1.5457521E12, 0.15903162699706577], [1.54575432E12, 0.16907846280490463], [1.54575156E12, 0.15989613324496588], [1.54575756E12, 0.171042493243633], [1.54575702E12, 0.15789420451097233], [1.54575924E12, 0.15829183233142657], [1.54575378E12, 0.15914573651506542], [1.545756E12, 0.1574333110051619], [1.54575582E12, 0.1648786595783069], [1.54575258E12, 0.16003271255395718], [1.5457548E12, 0.1587133559023587], [1.54575804E12, 0.17684851718465022], [1.5457584E12, 0.1615605674421453], [1.54575192E12, 0.16229328158486755], [1.54575396E12, 0.1611694004244431], [1.54575618E12, 0.1629296210040405], [1.54575276E12, 0.15954019697078192], [1.5457572E12, 0.16654374938082825], [1.54575822E12, 0.1706240902474521], [1.54575498E12, 0.1611243780047754]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[1.54575222E12, 0.0], [1.54575444E12, 0.0], [1.54575666E12, 0.0], [1.54575888E12, 0.0], [1.54575324E12, 0.0], [1.54575768E12, 0.0], [1.5457587E12, 0.0], [1.54575546E12, 0.0], [1.54575462E12, 0.0], [1.54575906E12, 0.0], [1.54575684E12, 0.0], [1.5457536E12, 0.0], [1.54575342E12, 0.0], [1.54575564E12, 0.0], [1.54575786E12, 0.0], [1.54575186E12, 0.0], [1.5457524E12, 0.0], [1.5457551E12, 0.0], [1.54575408E12, 0.0], [1.54575732E12, 0.0], [1.5457539E12, 0.0], [1.54575612E12, 0.0], [1.54575834E12, 0.0], [1.54575138E12, 0.0], [1.54575288E12, 0.0], [1.54575204E12, 0.0], [1.54575648E12, 0.0], [1.5457575E12, 0.0], [1.54575426E12, 0.0], [1.5457512E12, 0.0], [1.54575306E12, 0.0], [1.5457563E12, 0.0], [1.54575852E12, 0.0], [1.54575528E12, 0.0], [1.54575252E12, 0.0], [1.54575696E12, 0.0], [1.54575798E12, 0.0], [1.54575474E12, 0.0], [1.54575678E12, 0.0], [1.545759E12, 0.0], [1.54575354E12, 0.0], [1.54575576E12, 0.0], [1.5457527E12, 0.0], [1.54575492E12, 0.0], [1.54575714E12, 0.0], [1.54575198E12, 0.0], [1.54575372E12, 0.0], [1.54575816E12, 0.0], [1.54575918E12, 0.0], [1.54575594E12, 0.0], [1.54575318E12, 0.0], [1.5457554E12, 0.0], [1.54575762E12, 0.0], [1.54575216E12, 0.0], [1.5457515E12, 0.0], [1.5457542E12, 0.0], [1.54575642E12, 0.0], [1.54575864E12, 0.0], [1.54575168E12, 0.0], [1.54575558E12, 0.0], [1.54575234E12, 0.0], [1.54575456E12, 0.0], [1.54575132E12, 0.0], [1.5457578E12, 0.0], [1.54575438E12, 0.0], [1.54575882E12, 0.0], [1.5457566E12, 0.0], [1.54575336E12, 0.0], [1.54575144E12, 0.0], [1.54575606E12, 0.0], [1.54575282E12, 0.0], [1.54575504E12, 0.0], [1.54575828E12, 0.0], [1.54575486E12, 0.0], [1.54575708E12, 0.0], [1.54575384E12, 0.0], [1.545753E12, 0.0], [1.54575744E12, 0.0], [1.54575846E12, 0.0], [1.54575522E12, 0.0], [1.54575624E12, 0.0], [1.54575726E12, 0.0], [1.54575402E12, 0.0], [1.54575126E12, 0.0], [1.54575348E12, 0.0], [1.54575792E12, 0.0], [1.5457518E12, 0.0], [1.54575894E12, 0.0], [1.5457557E12, 0.0], [1.54575228E12, 0.0], [1.54575672E12, 0.0], [1.54575774E12, 0.0], [1.5457545E12, 0.0], [1.54575366E12, 0.0], [1.54575588E12, 0.0], [1.5457581E12, 0.0], [1.54575162E12, 0.0], [1.54575264E12, 0.0], [1.54575246E12, 0.0], [1.54575468E12, 0.0], [1.5457569E12, 0.0], [1.54575912E12, 0.0], [1.54575414E12, 0.0], [1.54575858E12, 0.0], [1.54575636E12, 0.0], [1.54575312E12, 0.0], [1.54575294E12, 0.0], [1.54575516E12, 0.0], [1.54575738E12, 0.0], [1.54575174E12, 0.0], [1.54575654E12, 0.0], [1.54575876E12, 0.0], [1.5457533E12, 0.0], [1.54575552E12, 0.0], [1.54575534E12, 0.0], [1.5457521E12, 0.0], [1.54575432E12, 0.0], [1.54575156E12, 0.0], [1.54575756E12, 0.0], [1.54575702E12, 0.0], [1.54575924E12, 0.0], [1.54575378E12, 0.0], [1.545756E12, 0.0], [1.54575582E12, 0.0], [1.54575258E12, 0.0], [1.5457548E12, 0.0], [1.54575804E12, 0.0], [1.5457584E12, 0.0], [1.54575192E12, 0.0], [1.54575396E12, 0.0], [1.54575618E12, 0.0], [1.54575276E12, 0.0], [1.5457572E12, 0.0], [1.54575822E12, 0.0], [1.54575498E12, 0.0]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54575924E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5457512E12, "maxY": 898.0, "series": [{"data": [[1.54575222E12, 445.0], [1.54575444E12, 376.0], [1.54575666E12, 357.0], [1.54575888E12, 300.0], [1.54575324E12, 338.0], [1.54575768E12, 380.0], [1.5457587E12, 345.0], [1.54575546E12, 398.0], [1.54575462E12, 489.0], [1.54575906E12, 494.0], [1.54575684E12, 426.0], [1.5457536E12, 392.0], [1.54575342E12, 467.0], [1.54575564E12, 444.0], [1.54575786E12, 549.0], [1.54575186E12, 415.0], [1.5457524E12, 371.0], [1.5457551E12, 411.0], [1.54575408E12, 447.0], [1.54575732E12, 350.0], [1.5457539E12, 332.0], [1.54575612E12, 419.0], [1.54575834E12, 483.0], [1.54575138E12, 325.0], [1.54575288E12, 353.0], [1.54575204E12, 439.0], [1.54575648E12, 316.0], [1.5457575E12, 355.0], [1.54575426E12, 388.0], [1.5457512E12, 448.0], [1.54575306E12, 501.0], [1.5457563E12, 350.0], [1.54575852E12, 352.0], [1.54575528E12, 443.0], [1.54575252E12, 480.0], [1.54575696E12, 467.0], [1.54575798E12, 443.0], [1.54575474E12, 300.0], [1.54575678E12, 391.0], [1.545759E12, 483.0], [1.54575354E12, 483.0], [1.54575576E12, 340.0], [1.5457527E12, 409.0], [1.54575492E12, 416.0], [1.54575714E12, 351.0], [1.54575198E12, 367.0], [1.54575372E12, 413.0], [1.54575816E12, 423.0], [1.54575918E12, 408.0], [1.54575594E12, 442.0], [1.54575318E12, 348.0], [1.5457554E12, 438.0], [1.54575762E12, 406.0], [1.54575216E12, 370.0], [1.5457515E12, 386.0], [1.5457542E12, 381.0], [1.54575642E12, 458.0], [1.54575864E12, 350.0], [1.54575168E12, 434.0], [1.54575558E12, 330.0], [1.54575234E12, 623.0], [1.54575456E12, 373.0], [1.54575132E12, 383.0], [1.5457578E12, 354.0], [1.54575438E12, 528.0], [1.54575882E12, 380.0], [1.5457566E12, 377.0], [1.54575336E12, 396.0], [1.54575144E12, 370.0], [1.54575606E12, 392.0], [1.54575282E12, 396.0], [1.54575504E12, 402.0], [1.54575828E12, 371.0], [1.54575486E12, 448.0], [1.54575708E12, 473.0], [1.54575384E12, 344.0], [1.545753E12, 396.0], [1.54575744E12, 400.0], [1.54575846E12, 419.0], [1.54575522E12, 354.0], [1.54575624E12, 312.0], [1.54575726E12, 400.0], [1.54575402E12, 555.0], [1.54575126E12, 486.0], [1.54575348E12, 335.0], [1.54575792E12, 898.0], [1.5457518E12, 294.0], [1.54575894E12, 384.0], [1.5457557E12, 677.0], [1.54575228E12, 406.0], [1.54575672E12, 357.0], [1.54575774E12, 343.0], [1.5457545E12, 352.0], [1.54575366E12, 354.0], [1.54575588E12, 523.0], [1.5457581E12, 396.0], [1.54575162E12, 462.0], [1.54575264E12, 337.0], [1.54575246E12, 382.0], [1.54575468E12, 401.0], [1.5457569E12, 497.0], [1.54575912E12, 354.0], [1.54575414E12, 305.0], [1.54575858E12, 388.0], [1.54575636E12, 441.0], [1.54575312E12, 463.0], [1.54575294E12, 391.0], [1.54575516E12, 418.0], [1.54575738E12, 512.0], [1.54575174E12, 339.0], [1.54575654E12, 369.0], [1.54575876E12, 461.0], [1.5457533E12, 418.0], [1.54575552E12, 354.0], [1.54575534E12, 473.0], [1.5457521E12, 500.0], [1.54575432E12, 390.0], [1.54575156E12, 422.0], [1.54575756E12, 402.0], [1.54575702E12, 308.0], [1.54575924E12, 313.0], [1.54575378E12, 412.0], [1.545756E12, 330.0], [1.54575582E12, 435.0], [1.54575258E12, 439.0], [1.5457548E12, 472.0], [1.54575804E12, 416.0], [1.5457584E12, 354.0], [1.54575192E12, 418.0], [1.54575396E12, 351.0], [1.54575618E12, 389.0], [1.54575276E12, 352.0], [1.5457572E12, 464.0], [1.54575822E12, 363.0], [1.54575498E12, 443.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.54575222E12, 0.0], [1.54575444E12, 1.0], [1.54575666E12, 0.0], [1.54575888E12, 0.0], [1.54575324E12, 1.0], [1.54575768E12, 0.0], [1.5457587E12, 1.0], [1.54575546E12, 1.0], [1.54575462E12, 0.0], [1.54575906E12, 0.0], [1.54575684E12, 0.0], [1.5457536E12, 0.0], [1.54575342E12, 0.0], [1.54575564E12, 1.0], [1.54575786E12, 1.0], [1.54575186E12, 1.0], [1.5457524E12, 1.0], [1.5457551E12, 0.0], [1.54575408E12, 1.0], [1.54575732E12, 0.0], [1.5457539E12, 0.0], [1.54575612E12, 0.0], [1.54575834E12, 1.0], [1.54575138E12, 1.0], [1.54575288E12, 0.0], [1.54575204E12, 1.0], [1.54575648E12, 1.0], [1.5457575E12, 0.0], [1.54575426E12, 0.0], [1.5457512E12, 0.0], [1.54575306E12, 0.0], [1.5457563E12, 1.0], [1.54575852E12, 0.0], [1.54575528E12, 0.0], [1.54575252E12, 0.0], [1.54575696E12, 1.0], [1.54575798E12, 0.0], [1.54575474E12, 1.0], [1.54575678E12, 0.0], [1.545759E12, 0.0], [1.54575354E12, 1.0], [1.54575576E12, 1.0], [1.5457527E12, 1.0], [1.54575492E12, 1.0], [1.54575714E12, 0.0], [1.54575198E12, 0.0], [1.54575372E12, 0.0], [1.54575816E12, 1.0], [1.54575918E12, 0.0], [1.54575594E12, 0.0], [1.54575318E12, 1.0], [1.5457554E12, 1.0], [1.54575762E12, 1.0], [1.54575216E12, 0.0], [1.5457515E12, 0.0], [1.5457542E12, 0.0], [1.54575642E12, 0.0], [1.54575864E12, 0.0], [1.54575168E12, 1.0], [1.54575558E12, 1.0], [1.54575234E12, 1.0], [1.54575456E12, 0.0], [1.54575132E12, 0.0], [1.5457578E12, 1.0], [1.54575438E12, 0.0], [1.54575882E12, 1.0], [1.5457566E12, 1.0], [1.54575336E12, 0.0], [1.54575144E12, 0.0], [1.54575606E12, 0.0], [1.54575282E12, 0.0], [1.54575504E12, 0.0], [1.54575828E12, 1.0], [1.54575486E12, 0.0], [1.54575708E12, 1.0], [1.54575384E12, 0.0], [1.545753E12, 1.0], [1.54575744E12, 0.0], [1.54575846E12, 0.0], [1.54575522E12, 1.0], [1.54575624E12, 1.0], [1.54575726E12, 1.0], [1.54575402E12, 1.0], [1.54575126E12, 1.0], [1.54575348E12, 0.0], [1.54575792E12, 0.0], [1.5457518E12, 0.0], [1.54575894E12, 0.0], [1.5457557E12, 0.0], [1.54575228E12, 0.0], [1.54575672E12, 0.0], [1.54575774E12, 0.0], [1.5457545E12, 0.0], [1.54575366E12, 0.0], [1.54575588E12, 1.0], [1.5457581E12, 0.0], [1.54575162E12, 1.0], [1.54575264E12, 0.0], [1.54575246E12, 0.0], [1.54575468E12, 0.0], [1.5457569E12, 0.0], [1.54575912E12, 0.0], [1.54575414E12, 0.0], [1.54575858E12, 0.0], [1.54575636E12, 0.0], [1.54575312E12, 0.0], [1.54575294E12, 0.0], [1.54575516E12, 1.0], [1.54575738E12, 0.0], [1.54575174E12, 1.0], [1.54575654E12, 0.0], [1.54575876E12, 0.0], [1.5457533E12, 1.0], [1.54575552E12, 0.0], [1.54575534E12, 1.0], [1.5457521E12, 1.0], [1.54575432E12, 1.0], [1.54575156E12, 1.0], [1.54575756E12, 0.0], [1.54575702E12, 0.0], [1.54575924E12, 1.0], [1.54575378E12, 0.0], [1.545756E12, 0.0], [1.54575582E12, 0.0], [1.54575258E12, 1.0], [1.5457548E12, 1.0], [1.54575804E12, 1.0], [1.5457584E12, 1.0], [1.54575192E12, 1.0], [1.54575396E12, 0.0], [1.54575618E12, 0.0], [1.54575276E12, 0.0], [1.5457572E12, 1.0], [1.54575822E12, 1.0], [1.54575498E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.54575222E12, 78.0], [1.54575444E12, 74.0], [1.54575666E12, 69.0], [1.54575888E12, 68.0], [1.54575324E12, 82.0], [1.54575768E12, 80.0], [1.5457587E12, 95.0], [1.54575546E12, 82.0], [1.54575462E12, 82.90000000000146], [1.54575906E12, 81.0], [1.54575684E12, 78.0], [1.5457536E12, 75.0], [1.54575342E12, 87.0], [1.54575564E12, 88.0], [1.54575786E12, 78.0], [1.54575186E12, 81.0], [1.5457524E12, 70.0], [1.5457551E12, 76.0], [1.54575408E12, 83.0], [1.54575732E12, 72.0], [1.5457539E12, 74.0], [1.54575612E12, 77.0], [1.54575834E12, 80.0], [1.54575138E12, 69.0], [1.54575288E12, 71.0], [1.54575204E12, 68.0], [1.54575648E12, 68.0], [1.5457575E12, 73.0], [1.54575426E12, 61.0], [1.5457512E12, 74.0], [1.54575306E12, 75.0], [1.5457563E12, 70.0], [1.54575852E12, 72.0], [1.54575528E12, 85.0], [1.54575252E12, 72.0], [1.54575696E12, 75.0], [1.54575798E12, 74.0], [1.54575474E12, 65.0], [1.54575678E12, 76.0], [1.545759E12, 104.0], [1.54575354E12, 75.0], [1.54575576E12, 84.0], [1.5457527E12, 68.0], [1.54575492E12, 73.0], [1.54575714E12, 91.0], [1.54575198E12, 66.0], [1.54575372E12, 75.0], [1.54575816E12, 76.0], [1.54575918E12, 70.0], [1.54575594E12, 61.0], [1.54575318E12, 69.0], [1.5457554E12, 80.0], [1.54575762E12, 81.0], [1.54575216E12, 75.0], [1.5457515E12, 80.0], [1.5457542E12, 61.0], [1.54575642E12, 83.0], [1.54575864E12, 76.0], [1.54575168E12, 62.0], [1.54575558E12, 64.0], [1.54575234E12, 67.0], [1.54575456E12, 74.0], [1.54575132E12, 71.0], [1.5457578E12, 82.0], [1.54575438E12, 81.0], [1.54575882E12, 68.0], [1.5457566E12, 70.0], [1.54575336E12, 71.0], [1.54575144E12, 68.0], [1.54575606E12, 82.0], [1.54575282E12, 72.0], [1.54575504E12, 71.0], [1.54575828E12, 87.0], [1.54575486E12, 69.0], [1.54575708E12, 77.0], [1.54575384E12, 72.0], [1.545753E12, 82.0], [1.54575744E12, 75.0], [1.54575846E12, 77.0], [1.54575522E12, 89.0], [1.54575624E12, 76.0], [1.54575726E12, 73.0], [1.54575402E12, 74.90000000000146], [1.54575126E12, 74.0], [1.54575348E12, 77.0], [1.54575792E12, 82.0], [1.5457518E12, 69.0], [1.54575894E12, 63.0], [1.5457557E12, 83.0], [1.54575228E12, 76.0], [1.54575672E12, 68.0], [1.54575774E12, 77.0], [1.5457545E12, 72.0], [1.54575366E12, 63.0], [1.54575588E12, 84.0], [1.5457581E12, 75.0], [1.54575162E12, 72.0], [1.54575264E12, 66.0], [1.54575246E12, 71.0], [1.54575468E12, 73.0], [1.5457569E12, 86.0], [1.54575912E12, 94.0], [1.54575414E12, 77.0], [1.54575858E12, 70.0], [1.54575636E12, 84.0], [1.54575312E12, 78.0], [1.54575294E12, 69.0], [1.54575516E12, 76.0], [1.54575738E12, 71.0], [1.54575174E12, 68.0], [1.54575654E12, 66.0], [1.54575876E12, 66.0], [1.5457533E12, 69.0], [1.54575552E12, 64.0], [1.54575534E12, 74.0], [1.5457521E12, 69.0], [1.54575432E12, 82.0], [1.54575156E12, 80.0], [1.54575756E12, 87.0], [1.54575702E12, 75.0], [1.54575924E12, 76.0], [1.54575378E12, 77.0], [1.545756E12, 69.0], [1.54575582E12, 80.0], [1.54575258E12, 72.0], [1.5457548E12, 93.0], [1.54575804E12, 100.0], [1.5457584E12, 75.0], [1.54575192E12, 74.0], [1.54575396E12, 64.0], [1.54575618E12, 70.0], [1.54575276E12, 83.0], [1.5457572E12, 65.0], [1.54575822E12, 93.0], [1.54575498E12, 91.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.54575222E12, 137.0], [1.54575444E12, 143.0], [1.54575666E12, 157.9900000000016], [1.54575888E12, 134.0], [1.54575324E12, 136.0], [1.54575768E12, 168.0], [1.5457587E12, 174.0], [1.54575546E12, 159.0], [1.54575462E12, 150.9900000000016], [1.54575906E12, 146.0], [1.54575684E12, 158.0], [1.5457536E12, 145.0], [1.54575342E12, 199.0], [1.54575564E12, 163.0], [1.54575786E12, 138.0], [1.54575186E12, 153.0], [1.5457524E12, 161.0], [1.5457551E12, 128.0], [1.54575408E12, 154.0], [1.54575732E12, 128.0], [1.5457539E12, 162.0], [1.54575612E12, 132.0], [1.54575834E12, 159.0], [1.54575138E12, 177.9900000000016], [1.54575288E12, 118.0], [1.54575204E12, 135.0], [1.54575648E12, 138.9900000000016], [1.5457575E12, 125.0], [1.54575426E12, 140.0], [1.5457512E12, 138.0], [1.54575306E12, 136.0], [1.5457563E12, 154.0], [1.54575852E12, 148.0], [1.54575528E12, 212.0], [1.54575252E12, 127.0], [1.54575696E12, 129.0], [1.54575798E12, 151.0], [1.54575474E12, 127.0], [1.54575678E12, 166.0], [1.545759E12, 157.0], [1.54575354E12, 143.0], [1.54575576E12, 129.0], [1.5457527E12, 148.9900000000016], [1.54575492E12, 139.0], [1.54575714E12, 176.0], [1.54575198E12, 130.0], [1.54575372E12, 135.0], [1.54575816E12, 140.0], [1.54575918E12, 122.0], [1.54575594E12, 108.0], [1.54575318E12, 124.9900000000016], [1.5457554E12, 143.0], [1.54575762E12, 149.0], [1.54575216E12, 126.0], [1.5457515E12, 196.0], [1.5457542E12, 130.0], [1.54575642E12, 146.0], [1.54575864E12, 147.0], [1.54575168E12, 119.0], [1.54575558E12, 154.0], [1.54575234E12, 112.9900000000016], [1.54575456E12, 158.0], [1.54575132E12, 157.9900000000016], [1.5457578E12, 175.0], [1.54575438E12, 162.0], [1.54575882E12, 195.0], [1.5457566E12, 163.9900000000016], [1.54575336E12, 137.0], [1.54575144E12, 144.0], [1.54575606E12, 145.0], [1.54575282E12, 159.0], [1.54575504E12, 127.0], [1.54575828E12, 175.9900000000016], [1.54575486E12, 140.0], [1.54575708E12, 136.0], [1.54575384E12, 139.0], [1.545753E12, 148.0], [1.54575744E12, 132.9900000000016], [1.54575846E12, 155.0], [1.54575522E12, 173.9900000000016], [1.54575624E12, 130.0], [1.54575726E12, 131.0], [1.54575402E12, 136.0], [1.54575126E12, 149.0], [1.54575348E12, 135.0], [1.54575792E12, 175.0], [1.5457518E12, 148.0], [1.54575894E12, 159.9900000000016], [1.5457557E12, 146.0], [1.54575228E12, 153.0], [1.54575672E12, 137.0], [1.54575774E12, 129.0], [1.5457545E12, 143.0], [1.54575366E12, 133.0], [1.54575588E12, 142.0], [1.5457581E12, 171.0], [1.54575162E12, 128.0], [1.54575264E12, 146.9900000000016], [1.54575246E12, 154.0], [1.54575468E12, 141.0], [1.5457569E12, 147.0], [1.54575912E12, 177.0], [1.54575414E12, 155.9900000000016], [1.54575858E12, 132.0], [1.54575636E12, 159.0], [1.54575312E12, 136.0], [1.54575294E12, 150.0], [1.54575516E12, 140.0], [1.54575738E12, 129.0], [1.54575174E12, 176.0], [1.54575654E12, 125.9900000000016], [1.54575876E12, 164.0], [1.5457533E12, 134.0], [1.54575552E12, 137.0], [1.54575534E12, 127.0], [1.5457521E12, 144.9900000000016], [1.54575432E12, 161.0], [1.54575156E12, 155.0], [1.54575756E12, 168.9900000000016], [1.54575702E12, 137.9900000000016], [1.54575924E12, 150.9900000000016], [1.54575378E12, 130.0], [1.545756E12, 131.0], [1.54575582E12, 126.0], [1.54575258E12, 125.0], [1.5457548E12, 182.0], [1.54575804E12, 187.0], [1.5457584E12, 184.0], [1.54575192E12, 140.0], [1.54575396E12, 126.0], [1.54575618E12, 126.0], [1.54575276E12, 152.0], [1.5457572E12, 111.0], [1.54575822E12, 171.0], [1.54575498E12, 164.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.54575222E12, 99.0], [1.54575444E12, 95.0], [1.54575666E12, 100.0], [1.54575888E12, 89.0], [1.54575324E12, 101.0], [1.54575768E12, 102.0], [1.5457587E12, 121.95000000000073], [1.54575546E12, 105.0], [1.54575462E12, 103.0], [1.54575906E12, 102.0], [1.54575684E12, 99.0], [1.5457536E12, 100.0], [1.54575342E12, 112.95000000000073], [1.54575564E12, 114.0], [1.54575786E12, 101.0], [1.54575186E12, 109.95000000000073], [1.5457524E12, 95.0], [1.5457551E12, 95.0], [1.54575408E12, 106.0], [1.54575732E12, 88.0], [1.5457539E12, 93.0], [1.54575612E12, 96.0], [1.54575834E12, 102.0], [1.54575138E12, 99.0], [1.54575288E12, 85.0], [1.54575204E12, 87.0], [1.54575648E12, 84.0], [1.5457575E12, 91.0], [1.54575426E12, 81.0], [1.5457512E12, 100.95000000000073], [1.54575306E12, 96.0], [1.5457563E12, 97.0], [1.54575852E12, 102.0], [1.54575528E12, 115.0], [1.54575252E12, 94.0], [1.54575696E12, 90.0], [1.54575798E12, 100.0], [1.54575474E12, 91.0], [1.54575678E12, 95.0], [1.545759E12, 124.0], [1.54575354E12, 95.0], [1.54575576E12, 105.0], [1.5457527E12, 85.0], [1.54575492E12, 98.0], [1.54575714E12, 112.0], [1.54575198E12, 91.0], [1.54575372E12, 95.0], [1.54575816E12, 100.0], [1.54575918E12, 87.0], [1.54575594E12, 78.0], [1.54575318E12, 87.0], [1.5457554E12, 102.0], [1.54575762E12, 105.0], [1.54575216E12, 92.0], [1.5457515E12, 109.0], [1.5457542E12, 79.0], [1.54575642E12, 104.0], [1.54575864E12, 101.0], [1.54575168E12, 82.0], [1.54575558E12, 87.0], [1.54575234E12, 84.0], [1.54575456E12, 97.0], [1.54575132E12, 95.0], [1.5457578E12, 111.0], [1.54575438E12, 104.0], [1.54575882E12, 88.0], [1.5457566E12, 93.0], [1.54575336E12, 94.0], [1.54575144E12, 95.0], [1.54575606E12, 105.0], [1.54575282E12, 94.0], [1.54575504E12, 93.0], [1.54575828E12, 117.0], [1.54575486E12, 86.0], [1.54575708E12, 94.0], [1.54575384E12, 92.0], [1.545753E12, 103.0], [1.54575744E12, 96.0], [1.54575846E12, 97.0], [1.54575522E12, 119.0], [1.54575624E12, 94.0], [1.54575726E12, 92.0], [1.54575402E12, 99.0], [1.54575126E12, 96.0], [1.54575348E12, 99.0], [1.54575792E12, 110.0], [1.5457518E12, 91.0], [1.54575894E12, 93.0], [1.5457557E12, 107.0], [1.54575228E12, 98.0], [1.54575672E12, 90.0], [1.54575774E12, 97.0], [1.5457545E12, 87.0], [1.54575366E12, 83.0], [1.54575588E12, 102.0], [1.5457581E12, 99.0], [1.54575162E12, 95.0], [1.54575264E12, 91.0], [1.54575246E12, 96.0], [1.54575468E12, 97.0], [1.5457569E12, 107.0], [1.54575912E12, 121.0], [1.54575414E12, 102.0], [1.54575858E12, 92.0], [1.54575636E12, 107.0], [1.54575312E12, 98.0], [1.54575294E12, 97.0], [1.54575516E12, 97.0], [1.54575738E12, 91.0], [1.54575174E12, 88.0], [1.54575654E12, 89.0], [1.54575876E12, 93.0], [1.5457533E12, 93.0], [1.54575552E12, 89.0], [1.54575534E12, 99.0], [1.5457521E12, 89.0], [1.54575432E12, 103.0], [1.54575156E12, 105.0], [1.54575756E12, 110.0], [1.54575702E12, 95.0], [1.54575924E12, 108.0], [1.54575378E12, 95.0], [1.545756E12, 92.0], [1.54575582E12, 99.0], [1.54575258E12, 92.0], [1.5457548E12, 120.0], [1.54575804E12, 129.0], [1.5457584E12, 98.0], [1.54575192E12, 95.0], [1.54575396E12, 86.0], [1.54575618E12, 89.0], [1.54575276E12, 106.0], [1.5457572E12, 82.0], [1.54575822E12, 116.0], [1.54575498E12, 114.95000000000073]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54575924E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 1000.0, "maxY": 57.0, "series": [{"data": [[1000.0, 34.0], [2000.0, 28.0], [3000.0, 25.0], [4000.0, 21.0], [5000.0, 18.0], [6000.0, 15.0], [7000.0, 14.0], [8000.0, 15.0], [9000.0, 16.0], [10000.0, 18.0], [11000.0, 20.0], [12000.0, 21.0], [13000.0, 21.0], [14000.0, 21.0], [15000.0, 21.0], [16000.0, 21.0], [17000.0, 22.0], [18000.0, 22.0], [19000.0, 22.0], [20000.0, 22.0], [21000.0, 23.0], [22000.0, 23.0], [23000.0, 23.0], [24000.0, 23.0], [25000.0, 26.0], [26000.0, 26.0], [27000.0, 27.0], [28000.0, 27.0], [29000.0, 32.0], [30000.0, 33.0], [31000.0, 39.0], [32000.0, 40.0], [33000.0, 41.0], [34000.0, 46.0], [35000.0, 45.0], [36000.0, 47.0], [37000.0, 45.0], [38000.0, 40.0], [39000.0, 36.0], [40000.0, 31.0], [41000.0, 23.0], [42000.0, 32.0], [43000.0, 25.0], [44000.0, 27.0], [45000.0, 23.0], [47000.0, 29.0], [46000.0, 29.0], [48000.0, 35.0], [49000.0, 23.0], [51000.0, 29.0], [50000.0, 36.0], [53000.0, 37.0], [52000.0, 29.0], [55000.0, 31.0], [54000.0, 28.0], [56000.0, 31.0], [57000.0, 35.0], [59000.0, 31.0], [58000.0, 31.0], [60000.0, 24.0], [61000.0, 25.0], [63000.0, 25.0], [62000.0, 39.5], [64000.0, 30.0], [65000.0, 32.0], [67000.0, 22.0], [66000.0, 24.0], [69000.0, 24.0], [68000.0, 31.0], [73000.0, 27.0], [72000.0, 18.0], [71000.0, 28.0], [70000.0, 30.0], [75000.0, 25.0], [74000.0, 25.0], [76000.0, 38.0], [77000.0, 31.0], [79000.0, 26.0], [78000.0, 27.0], [80000.0, 20.0], [81000.0, 19.0], [84000.0, 21.0], [85000.0, 23.0], [87000.0, 23.0], [89000.0, 57.0], [93000.0, 19.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 7.0], [39000.0, 13.0], [10000.0, 12.0], [12000.0, 12.5], [3000.0, 6.0], [1000.0, 11.5], [4000.0, 10.5], [5000.0, 12.0], [23000.0, 16.0], [24000.0, 8.0], [6000.0, 9.0], [7000.0, 8.0], [8000.0, 19.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 93000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1000.0, "maxY": 57.0, "series": [{"data": [[1000.0, 0.0], [2000.0, 0.0], [3000.0, 0.0], [4000.0, 0.0], [5000.0, 0.0], [6000.0, 0.0], [7000.0, 0.0], [8000.0, 0.0], [9000.0, 0.0], [10000.0, 16.0], [11000.0, 19.0], [12000.0, 20.0], [13000.0, 20.0], [14000.0, 21.0], [15000.0, 21.0], [16000.0, 21.0], [17000.0, 21.0], [18000.0, 21.0], [19000.0, 22.0], [20000.0, 22.0], [21000.0, 22.0], [22000.0, 23.0], [23000.0, 23.0], [24000.0, 23.0], [25000.0, 24.0], [26000.0, 25.0], [27000.0, 26.0], [28000.0, 26.0], [29000.0, 29.0], [30000.0, 30.0], [31000.0, 36.0], [32000.0, 36.0], [33000.0, 38.0], [34000.0, 43.0], [35000.0, 44.0], [36000.0, 45.0], [37000.0, 43.0], [38000.0, 36.0], [39000.0, 31.0], [40000.0, 26.5], [41000.0, 22.0], [42000.0, 24.0], [43000.0, 22.0], [44000.0, 6.0], [45000.0, 20.0], [47000.0, 26.0], [46000.0, 21.0], [48000.0, 21.5], [49000.0, 22.0], [51000.0, 26.0], [50000.0, 31.0], [53000.0, 22.0], [52000.0, 24.0], [55000.0, 24.0], [54000.0, 26.5], [56000.0, 24.0], [57000.0, 31.0], [59000.0, 25.0], [58000.0, 29.0], [60000.0, 19.0], [61000.0, 23.0], [63000.0, 19.0], [62000.0, 32.5], [64000.0, 15.0], [65000.0, 24.0], [67000.0, 17.0], [66000.0, 22.0], [69000.0, 19.0], [68000.0, 22.0], [73000.0, 19.0], [72000.0, 18.0], [71000.0, 25.0], [70000.0, 28.5], [75000.0, 17.0], [74000.0, 21.0], [76000.0, 0.0], [77000.0, 0.0], [79000.0, 25.0], [78000.0, 23.5], [80000.0, 15.0], [81000.0, 19.0], [84000.0, 21.0], [85000.0, 19.5], [87000.0, 23.0], [89000.0, 57.0], [93000.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 0.0], [39000.0, 0.0], [10000.0, 0.0], [12000.0, 0.0], [3000.0, 0.0], [1000.0, 0.0], [4000.0, 0.0], [5000.0, 0.0], [23000.0, 0.0], [24000.0, 0.0], [6000.0, 0.0], [7000.0, 0.0], [8000.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 93000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2069.9, "minX": 1.5457512E12, "maxY": 3491.383333333333, "series": [{"data": [[1.54575222E12, 3024.766666666667], [1.54575444E12, 3127.75], [1.54575666E12, 3317.133333333333], [1.54575888E12, 3356.1833333333334], [1.54575324E12, 3203.3], [1.54575768E12, 3064.516666666667], [1.5457587E12, 3088.3333333333335], [1.54575546E12, 3151.7833333333333], [1.54575462E12, 3086.8166666666666], [1.54575906E12, 2583.5666666666666], [1.54575684E12, 3012.0], [1.5457536E12, 3394.2], [1.54575342E12, 3073.45], [1.54575564E12, 3131.15], [1.54575786E12, 3095.15], [1.54575186E12, 3066.0666666666666], [1.5457524E12, 3243.0833333333335], [1.5457551E12, 3332.3], [1.54575408E12, 3235.25], [1.54575732E12, 3206.233333333333], [1.5457539E12, 3273.516666666667], [1.54575612E12, 3270.6666666666665], [1.54575834E12, 2991.483333333333], [1.54575138E12, 3111.8166666666666], [1.54575288E12, 3248.016666666667], [1.54575204E12, 3365.0333333333333], [1.54575648E12, 3175.266666666667], [1.5457575E12, 3212.2833333333333], [1.54575426E12, 3329.516666666667], [1.5457512E12, 2069.9], [1.54575306E12, 3406.133333333333], [1.5457563E12, 3260.4666666666667], [1.54575852E12, 3239.616666666667], [1.54575528E12, 2956.1666666666665], [1.54575252E12, 3133.133333333333], [1.54575696E12, 3090.95], [1.54575798E12, 3316.45], [1.54575474E12, 3418.7833333333333], [1.54575678E12, 3139.983333333333], [1.545759E12, 3017.8], [1.54575354E12, 3229.9166666666665], [1.54575576E12, 2895.0833333333335], [1.5457527E12, 3368.0833333333335], [1.54575492E12, 3238.3333333333335], [1.54575714E12, 2950.4166666666665], [1.54575198E12, 3217.116666666667], [1.54575372E12, 3138.3], [1.54575816E12, 3207.616666666667], [1.54575918E12, 3147.3166666666666], [1.54575594E12, 3419.65], [1.54575318E12, 3168.55], [1.5457554E12, 3219.05], [1.54575762E12, 3056.7], [1.54575216E12, 3230.85], [1.5457515E12, 3144.733333333333], [1.5457542E12, 3402.5666666666666], [1.54575642E12, 2914.766666666667], [1.54575864E12, 3227.0666666666666], [1.54575168E12, 3286.266666666667], [1.54575558E12, 3321.133333333333], [1.54575234E12, 2918.4666666666667], [1.54575456E12, 3209.483333333333], [1.54575132E12, 3277.8333333333335], [1.5457578E12, 3294.1833333333334], [1.54575438E12, 3131.383333333333], [1.54575882E12, 3169.1833333333334], [1.5457566E12, 3298.9166666666665], [1.54575336E12, 3294.883333333333], [1.54575144E12, 3332.266666666667], [1.54575606E12, 3210.35], [1.54575282E12, 3213.5333333333333], [1.54575504E12, 3054.4], [1.54575828E12, 2746.0333333333333], [1.54575486E12, 3097.633333333333], [1.54575708E12, 3151.8], [1.54575384E12, 3290.9333333333334], [1.545753E12, 3330.633333333333], [1.54575744E12, 3352.0666666666666], [1.54575846E12, 3119.85], [1.54575522E12, 2934.2], [1.54575624E12, 3241.9666666666667], [1.54575726E12, 3405.35], [1.54575402E12, 3110.383333333333], [1.54575126E12, 3343.5833333333335], [1.54575348E12, 3183.116666666667], [1.54575792E12, 2948.733333333333], [1.5457518E12, 3317.733333333333], [1.54575894E12, 3289.4666666666667], [1.5457557E12, 2898.233333333333], [1.54575228E12, 3185.7], [1.54575672E12, 3336.15], [1.54575774E12, 3317.5], [1.5457545E12, 3198.7833333333333], [1.54575366E12, 3196.8166666666666], [1.54575588E12, 3121.2], [1.5457581E12, 2798.3166666666666], [1.54575162E12, 2898.1833333333334], [1.54575264E12, 3332.266666666667], [1.54575246E12, 3139.633333333333], [1.54575468E12, 3153.2833333333333], [1.5457569E12, 2950.133333333333], [1.54575912E12, 2713.266666666667], [1.54575414E12, 3186.516666666667], [1.54575858E12, 3160.766666666667], [1.54575636E12, 3084.116666666667], [1.54575312E12, 3142.6666666666665], [1.54575294E12, 3491.383333333333], [1.54575516E12, 3019.016666666667], [1.54575738E12, 3167.9666666666667], [1.54575174E12, 3171.366666666667], [1.54575654E12, 3270.45], [1.54575876E12, 3031.483333333333], [1.5457533E12, 3422.3333333333335], [1.54575552E12, 3107.5666666666666], [1.54575534E12, 3241.1666666666665], [1.5457521E12, 3271.1833333333334], [1.54575432E12, 3078.5833333333335], [1.54575156E12, 3068.35], [1.54575756E12, 2898.016666666667], [1.54575702E12, 3296.25], [1.54575924E12, 2453.4333333333334], [1.54575378E12, 3192.0666666666666], [1.545756E12, 3383.866666666667], [1.54575582E12, 3140.85], [1.54575258E12, 3219.65], [1.5457548E12, 3180.55], [1.54575804E12, 2998.55], [1.5457584E12, 3281.733333333333], [1.54575192E12, 3125.6833333333334], [1.54575396E12, 3361.25], [1.54575618E12, 3191.75], [1.54575276E12, 3258.7], [1.5457572E12, 3027.9166666666665], [1.54575822E12, 2931.35], [1.54575498E12, 3167.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54575924E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5457512E12, "maxY": 1901.1666666666667, "series": [{"data": [[1.54575222E12, 1682.6], [1.54575444E12, 1739.2833333333333], [1.54575666E12, 1658.65], [1.54575888E12, 1686.6333333333334], [1.54575324E12, 1601.7833333333333], [1.54575768E12, 1703.8], [1.5457587E12, 1718.35], [1.54575546E12, 1750.45], [1.54575462E12, 1715.1666666666667], [1.54575906E12, 1291.7166666666667], [1.54575684E12, 1506.0], [1.5457536E12, 1697.1], [1.54575342E12, 1536.7333333333333], [1.54575564E12, 1732.3833333333334], [1.54575786E12, 1720.5333333333333], [1.54575186E12, 1705.0], [1.5457524E12, 1802.9333333333334], [1.5457551E12, 1855.0], [1.54575408E12, 1617.7], [1.54575732E12, 1603.05], [1.5457539E12, 1636.25], [1.54575612E12, 1635.3333333333333], [1.54575834E12, 1666.75], [1.54575138E12, 1730.4666666666667], [1.54575288E12, 1623.5833333333333], [1.54575204E12, 1872.0833333333333], [1.54575648E12, 1587.6333333333334], [1.5457575E12, 1605.95], [1.54575426E12, 1665.1833333333334], [1.5457512E12, 1034.35], [1.54575306E12, 1702.9833333333333], [1.5457563E12, 1630.1666666666667], [1.54575852E12, 1800.65], [1.54575528E12, 1644.8], [1.54575252E12, 1744.55], [1.54575696E12, 1545.6666666666667], [1.54575798E12, 1845.3], [1.54575474E12, 1901.1666666666667], [1.54575678E12, 1569.8666666666666], [1.545759E12, 1508.8833333333334], [1.54575354E12, 1614.2833333333333], [1.54575576E12, 1447.55], [1.5457527E12, 1683.8666666666666], [1.54575492E12, 1803.7], [1.54575714E12, 1475.1166666666666], [1.54575198E12, 1789.9666666666667], [1.54575372E12, 1569.1], [1.54575816E12, 1785.8], [1.54575918E12, 1573.5666666666666], [1.54575594E12, 1709.8666666666666], [1.54575318E12, 1583.75], [1.5457554E12, 1789.8833333333334], [1.54575762E12, 1699.7666666666667], [1.54575216E12, 1798.5833333333333], [1.5457515E12, 1750.6666666666667], [1.5457542E12, 1701.35], [1.54575642E12, 1457.05], [1.54575864E12, 1792.3833333333334], [1.54575168E12, 1826.4], [1.54575558E12, 1847.5666666666666], [1.54575234E12, 1621.9], [1.54575456E12, 1787.5], [1.54575132E12, 1806.9666666666667], [1.5457578E12, 1832.1666666666667], [1.54575438E12, 1590.95], [1.54575882E12, 1762.05], [1.5457566E12, 1649.0333333333333], [1.54575336E12, 1647.6333333333334], [1.54575144E12, 1853.9166666666667], [1.54575606E12, 1605.15], [1.54575282E12, 1606.8], [1.54575504E12, 1699.55], [1.54575828E12, 1527.7666666666667], [1.54575486E12, 1723.0], [1.54575708E12, 1576.0], [1.54575384E12, 1646.1166666666666], [1.545753E12, 1665.1166666666666], [1.54575744E12, 1675.9666666666667], [1.54575846E12, 1737.7166666666667], [1.54575522E12, 1630.8333333333333], [1.54575624E12, 1621.0833333333333], [1.54575726E12, 1702.65], [1.54575402E12, 1555.0333333333333], [1.54575126E12, 1671.6333333333334], [1.54575348E12, 1591.9666666666667], [1.54575792E12, 1637.5], [1.5457518E12, 1844.2833333333333], [1.54575894E12, 1644.9333333333334], [1.5457557E12, 1449.0333333333333], [1.54575228E12, 1769.8333333333333], [1.54575672E12, 1668.0333333333333], [1.54575774E12, 1844.0333333333333], [1.5457545E12, 1777.4], [1.54575366E12, 1598.5833333333333], [1.54575588E12, 1560.3666666666666], [1.5457581E12, 1558.0], [1.54575162E12, 1613.7166666666667], [1.54575264E12, 1666.0833333333333], [1.54575246E12, 1747.55], [1.54575468E12, 1753.1666666666667], [1.5457569E12, 1475.1666666666667], [1.54575912E12, 1356.5833333333333], [1.54575414E12, 1593.2833333333333], [1.54575858E12, 1757.4833333333333], [1.54575636E12, 1542.3333333333333], [1.54575312E12, 1571.7666666666667], [1.54575294E12, 1746.0666666666666], [1.54575516E12, 1680.1333333333334], [1.54575738E12, 1584.25], [1.54575174E12, 1765.4666666666667], [1.54575654E12, 1635.7333333333333], [1.54575876E12, 1686.35], [1.5457533E12, 1711.1], [1.54575552E12, 1727.85], [1.54575534E12, 1801.2166666666667], [1.5457521E12, 1817.75], [1.54575432E12, 1538.7333333333333], [1.54575156E12, 1708.85], [1.54575756E12, 1529.8333333333333], [1.54575702E12, 1647.8333333333333], [1.54575924E12, 1226.9333333333334], [1.54575378E12, 1595.9166666666667], [1.545756E12, 1691.9333333333334], [1.54575582E12, 1570.65], [1.54575258E12, 1635.0166666666667], [1.5457548E12, 1768.35], [1.54575804E12, 1667.8166666666666], [1.5457584E12, 1826.25], [1.54575192E12, 1738.95], [1.54575396E12, 1680.6333333333334], [1.54575618E12, 1595.8833333333334], [1.54575276E12, 1629.6833333333334], [1.5457572E12, 1514.1166666666666], [1.54575822E12, 1630.8333333333333], [1.54575498E12, 1763.1833333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.54575924E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.impl.execchain.RequestAbortedException", "isController": false}, {"data": [[1.54575222E12, 1342.2333333333333], [1.54575444E12, 1388.4166666666667], [1.54575666E12, 1658.4833333333333], [1.54575888E12, 1669.5166666666667], [1.54575324E12, 1601.5166666666667], [1.54575768E12, 1360.8], [1.5457587E12, 1370.0], [1.54575546E12, 1401.2833333333333], [1.54575462E12, 1371.8166666666666], [1.54575906E12, 1291.8166666666666], [1.54575684E12, 1506.0], [1.5457536E12, 1697.1], [1.54575342E12, 1536.8166666666666], [1.54575564E12, 1398.65], [1.54575786E12, 1374.5833333333333], [1.54575186E12, 1361.0666666666666], [1.5457524E12, 1440.1666666666667], [1.5457551E12, 1477.1833333333334], [1.54575408E12, 1617.55], [1.54575732E12, 1603.2166666666667], [1.5457539E12, 1637.1666666666667], [1.54575612E12, 1635.3333333333333], [1.54575834E12, 1324.7666666666667], [1.54575138E12, 1381.3166666666666], [1.54575288E12, 1624.3666666666666], [1.54575204E12, 1492.8833333333334], [1.54575648E12, 1587.6333333333334], [1.5457575E12, 1606.3166666666666], [1.54575426E12, 1664.3833333333334], [1.5457512E12, 1033.8833333333334], [1.54575306E12, 1703.1], [1.5457563E12, 1630.2833333333333], [1.54575852E12, 1438.9333333333334], [1.54575528E12, 1311.4166666666667], [1.54575252E12, 1388.5833333333333], [1.54575696E12, 1545.2833333333333], [1.54575798E12, 1471.1666666666667], [1.54575474E12, 1517.55], [1.54575678E12, 1570.1166666666666], [1.545759E12, 1508.9333333333334], [1.54575354E12, 1615.5833333333333], [1.54575576E12, 1447.5333333333333], [1.5457527E12, 1684.1666666666667], [1.54575492E12, 1434.6333333333334], [1.54575714E12, 1475.3], [1.54575198E12, 1427.25], [1.54575372E12, 1569.2], [1.54575816E12, 1421.8333333333333], [1.54575918E12, 1573.75], [1.54575594E12, 1709.8166666666666], [1.54575318E12, 1584.75], [1.5457554E12, 1429.2166666666667], [1.54575762E12, 1356.7833333333333], [1.54575216E12, 1432.2166666666667], [1.5457515E12, 1394.1], [1.5457542E12, 1701.2333333333333], [1.54575642E12, 1457.7], [1.54575864E12, 1434.7], [1.54575168E12, 1459.8666666666666], [1.54575558E12, 1473.6333333333334], [1.54575234E12, 1296.5166666666667], [1.54575456E12, 1421.9666666666667], [1.54575132E12, 1470.9], [1.5457578E12, 1462.0833333333333], [1.54575438E12, 1540.4833333333333], [1.54575882E12, 1407.0833333333333], [1.5457566E12, 1649.8166666666666], [1.54575336E12, 1647.2333333333333], [1.54575144E12, 1478.4333333333334], [1.54575606E12, 1605.15], [1.54575282E12, 1606.7833333333333], [1.54575504E12, 1354.9666666666667], [1.54575828E12, 1218.2833333333333], [1.54575486E12, 1374.6333333333334], [1.54575708E12, 1575.8], [1.54575384E12, 1644.9], [1.545753E12, 1665.5], [1.54575744E12, 1676.0], [1.54575846E12, 1382.1333333333334], [1.54575522E12, 1303.35], [1.54575624E12, 1620.95], [1.54575726E12, 1702.6833333333334], [1.54575402E12, 1555.35], [1.54575126E12, 1671.95], [1.54575348E12, 1591.0833333333333], [1.54575792E12, 1311.2], [1.5457518E12, 1473.3833333333334], [1.54575894E12, 1644.5666666666666], [1.5457557E12, 1449.2], [1.54575228E12, 1415.8333333333333], [1.54575672E12, 1668.1166666666666], [1.54575774E12, 1473.3833333333334], [1.5457545E12, 1421.4], [1.54575366E12, 1598.2333333333333], [1.54575588E12, 1560.8333333333333], [1.5457581E12, 1240.3], [1.54575162E12, 1284.5333333333333], [1.54575264E12, 1666.1833333333334], [1.54575246E12, 1392.0666666666666], [1.54575468E12, 1400.0333333333333], [1.5457569E12, 1474.9833333333333], [1.54575912E12, 1356.6666666666667], [1.54575414E12, 1593.2333333333333], [1.54575858E12, 1403.2833333333333], [1.54575636E12, 1541.75], [1.54575312E12, 1570.95], [1.54575294E12, 1745.3833333333334], [1.54575516E12, 1338.9], [1.54575738E12, 1583.8], [1.54575174E12, 1405.9], [1.54575654E12, 1634.7833333333333], [1.54575876E12, 1345.1833333333334], [1.5457533E12, 1711.2666666666667], [1.54575552E12, 1379.7666666666667], [1.54575534E12, 1439.9], [1.5457521E12, 1453.4666666666667], [1.54575432E12, 1539.7833333333333], [1.54575156E12, 1359.3833333333334], [1.54575756E12, 1368.3333333333333], [1.54575702E12, 1648.4], [1.54575924E12, 1226.6], [1.54575378E12, 1596.1666666666667], [1.545756E12, 1691.95], [1.54575582E12, 1570.2], [1.54575258E12, 1584.6833333333334], [1.5457548E12, 1412.1833333333334], [1.54575804E12, 1330.7333333333333], [1.5457584E12, 1455.45], [1.54575192E12, 1386.7333333333333], [1.54575396E12, 1680.6166666666666], [1.54575618E12, 1595.8666666666666], [1.54575276E12, 1629.0333333333333], [1.5457572E12, 1513.8166666666666], [1.54575822E12, 1300.5166666666667], [1.54575498E12, 1404.7166666666667]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.54575924E12, 1.55]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54575924E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.5457512E12, "maxY": 1746.0666666666666, "series": [{"data": [[1.54575924E12, 1.2833333333333334]], "isOverall": false, "label": "SkinPrice Creation-failure", "isController": false}, {"data": [[1.54575222E12, 1512.5166666666667], [1.54575444E12, 1563.3333333333333], [1.54575666E12, 1658.65], [1.54575888E12, 1677.8333333333333], [1.54575324E12, 1601.7833333333333], [1.54575768E12, 1532.7666666666667], [1.5457587E12, 1543.9833333333333], [1.54575546E12, 1575.8166666666666], [1.54575462E12, 1543.65], [1.54575906E12, 1291.7166666666667], [1.54575684E12, 1506.0], [1.5457536E12, 1697.1], [1.54575342E12, 1536.7333333333333], [1.54575564E12, 1565.5166666666667], [1.54575786E12, 1547.5666666666666], [1.54575186E12, 1532.9], [1.5457524E12, 1621.6166666666666], [1.5457551E12, 1665.8166666666666], [1.54575408E12, 1617.7], [1.54575732E12, 1603.05], [1.5457539E12, 1636.25], [1.54575612E12, 1635.3333333333333], [1.54575834E12, 1495.6333333333334], [1.54575138E12, 1555.5833333333333], [1.54575288E12, 1623.5833333333333], [1.54575204E12, 1682.0333333333333], [1.54575648E12, 1587.6333333333334], [1.5457575E12, 1605.95], [1.54575426E12, 1665.1833333333334], [1.5457512E12, 1034.35], [1.54575306E12, 1702.9833333333333], [1.5457563E12, 1630.1666666666667], [1.54575852E12, 1619.4166666666667], [1.54575528E12, 1478.3833333333334], [1.54575252E12, 1566.6833333333334], [1.54575696E12, 1545.6666666666667], [1.54575798E12, 1658.3833333333334], [1.54575474E12, 1708.9333333333334], [1.54575678E12, 1569.8666666666666], [1.545759E12, 1508.8833333333334], [1.54575354E12, 1614.2833333333333], [1.54575576E12, 1447.55], [1.5457527E12, 1683.8666666666666], [1.54575492E12, 1619.1666666666667], [1.54575714E12, 1475.1166666666666], [1.54575198E12, 1608.8166666666666], [1.54575372E12, 1569.1], [1.54575816E12, 1603.7833333333333], [1.54575918E12, 1573.5666666666666], [1.54575594E12, 1709.8666666666666], [1.54575318E12, 1583.75], [1.5457554E12, 1609.8333333333333], [1.54575762E12, 1528.1], [1.54575216E12, 1615.4], [1.5457515E12, 1572.2166666666667], [1.5457542E12, 1701.35], [1.54575642E12, 1457.05], [1.54575864E12, 1613.8333333333333], [1.54575168E12, 1643.1166666666666], [1.54575558E12, 1660.3166666666666], [1.54575234E12, 1458.8333333333333], [1.54575456E12, 1604.55], [1.54575132E12, 1639.1833333333334], [1.5457578E12, 1647.6], [1.54575438E12, 1566.2], [1.54575882E12, 1584.6333333333334], [1.5457566E12, 1649.0333333333333], [1.54575336E12, 1647.6333333333334], [1.54575144E12, 1666.55], [1.54575606E12, 1605.15], [1.54575282E12, 1606.8], [1.54575504E12, 1527.2], [1.54575828E12, 1373.3166666666666], [1.54575486E12, 1548.6833333333334], [1.54575708E12, 1576.0], [1.54575384E12, 1646.1166666666666], [1.545753E12, 1665.1166666666666], [1.54575744E12, 1675.9666666666667], [1.54575846E12, 1559.75], [1.54575522E12, 1466.9833333333333], [1.54575624E12, 1621.0833333333333], [1.54575726E12, 1702.65], [1.54575402E12, 1555.0333333333333], [1.54575126E12, 1671.6333333333334], [1.54575348E12, 1591.9666666666667], [1.54575792E12, 1473.8666666666666], [1.5457518E12, 1658.55], [1.54575894E12, 1644.9333333333334], [1.5457557E12, 1449.0333333333333], [1.54575228E12, 1592.95], [1.54575672E12, 1668.0333333333333], [1.54575774E12, 1658.1666666666667], [1.5457545E12, 1599.6], [1.54575366E12, 1598.5833333333333], [1.54575588E12, 1560.3666666666666], [1.5457581E12, 1399.0], [1.54575162E12, 1449.2], [1.54575264E12, 1666.0833333333333], [1.54575246E12, 1569.75], [1.54575468E12, 1577.0666666666666], [1.5457569E12, 1475.1666666666667], [1.54575912E12, 1356.5833333333333], [1.54575414E12, 1593.2833333333333], [1.54575858E12, 1580.3166666666666], [1.54575636E12, 1542.3333333333333], [1.54575312E12, 1571.7666666666667], [1.54575294E12, 1746.0666666666666], [1.54575516E12, 1509.6333333333334], [1.54575738E12, 1584.25], [1.54575174E12, 1585.9166666666667], [1.54575654E12, 1635.7333333333333], [1.54575876E12, 1515.8666666666666], [1.5457533E12, 1711.1], [1.54575552E12, 1553.9333333333334], [1.54575534E12, 1620.2833333333333], [1.5457521E12, 1635.7333333333333], [1.54575432E12, 1538.7333333333333], [1.54575156E12, 1534.0166666666667], [1.54575756E12, 1449.25], [1.54575702E12, 1647.8333333333333], [1.54575924E12, 1226.9333333333334], [1.54575378E12, 1595.9166666666667], [1.545756E12, 1691.9333333333334], [1.54575582E12, 1570.65], [1.54575258E12, 1609.9833333333333], [1.5457548E12, 1590.1833333333334], [1.54575804E12, 1499.4], [1.5457584E12, 1641.2833333333333], [1.54575192E12, 1563.1166666666666], [1.54575396E12, 1680.6333333333334], [1.54575618E12, 1595.8833333333334], [1.54575276E12, 1629.6833333333334], [1.5457572E12, 1514.1166666666666], [1.54575822E12, 1465.6], [1.54575498E12, 1584.2833333333333]], "isOverall": false, "label": "SkinPrice Creation-success", "isController": false}, {"data": [[1.54575222E12, 1512.3166666666666], [1.54575444E12, 1564.3666666666666], [1.54575666E12, 1658.4833333333333], [1.54575888E12, 1678.3166666666666], [1.54575324E12, 1601.5166666666667], [1.54575768E12, 1531.8333333333333], [1.5457587E12, 1544.3666666666666], [1.54575546E12, 1575.9166666666667], [1.54575462E12, 1543.3333333333333], [1.54575906E12, 1291.8166666666666], [1.54575684E12, 1506.0], [1.5457536E12, 1697.1], [1.54575342E12, 1536.8166666666666], [1.54575564E12, 1565.5166666666667], [1.54575786E12, 1547.55], [1.54575186E12, 1533.1666666666667], [1.5457524E12, 1621.4833333333333], [1.5457551E12, 1666.3666666666666], [1.54575408E12, 1617.55], [1.54575732E12, 1603.2166666666667], [1.5457539E12, 1637.1666666666667], [1.54575612E12, 1635.3333333333333], [1.54575834E12, 1495.8833333333334], [1.54575138E12, 1556.2], [1.54575288E12, 1624.3666666666666], [1.54575204E12, 1682.9333333333334], [1.54575648E12, 1587.6333333333334], [1.5457575E12, 1606.3166666666666], [1.54575426E12, 1664.3833333333334], [1.5457512E12, 1033.8833333333334], [1.54575306E12, 1703.1], [1.5457563E12, 1630.2833333333333], [1.54575852E12, 1620.1666666666667], [1.54575528E12, 1477.8333333333333], [1.54575252E12, 1566.45], [1.54575696E12, 1545.2833333333333], [1.54575798E12, 1658.0833333333333], [1.54575474E12, 1709.7833333333333], [1.54575678E12, 1570.1166666666666], [1.545759E12, 1508.9333333333334], [1.54575354E12, 1615.5833333333333], [1.54575576E12, 1447.5333333333333], [1.5457527E12, 1684.1666666666667], [1.54575492E12, 1619.1666666666667], [1.54575714E12, 1475.3], [1.54575198E12, 1608.4], [1.54575372E12, 1569.2], [1.54575816E12, 1603.85], [1.54575918E12, 1573.75], [1.54575594E12, 1709.8166666666666], [1.54575318E12, 1584.75], [1.5457554E12, 1609.2666666666667], [1.54575762E12, 1528.45], [1.54575216E12, 1615.4], [1.5457515E12, 1572.55], [1.5457542E12, 1701.2333333333333], [1.54575642E12, 1457.7], [1.54575864E12, 1613.25], [1.54575168E12, 1643.15], [1.54575558E12, 1660.8833333333334], [1.54575234E12, 1459.5833333333333], [1.54575456E12, 1604.9166666666667], [1.54575132E12, 1638.6833333333334], [1.5457578E12, 1646.65], [1.54575438E12, 1565.2333333333333], [1.54575882E12, 1584.5], [1.5457566E12, 1649.8166666666666], [1.54575336E12, 1647.2333333333333], [1.54575144E12, 1665.8], [1.54575606E12, 1605.15], [1.54575282E12, 1606.7833333333333], [1.54575504E12, 1527.3166666666666], [1.54575828E12, 1372.7333333333333], [1.54575486E12, 1548.95], [1.54575708E12, 1575.8], [1.54575384E12, 1644.9], [1.545753E12, 1665.5], [1.54575744E12, 1676.0], [1.54575846E12, 1560.1], [1.54575522E12, 1467.2], [1.54575624E12, 1620.95], [1.54575726E12, 1702.6833333333334], [1.54575402E12, 1555.35], [1.54575126E12, 1671.95], [1.54575348E12, 1591.0833333333333], [1.54575792E12, 1474.8333333333333], [1.5457518E12, 1659.1166666666666], [1.54575894E12, 1644.5666666666666], [1.5457557E12, 1449.2], [1.54575228E12, 1592.7166666666667], [1.54575672E12, 1668.1166666666666], [1.54575774E12, 1659.25], [1.5457545E12, 1599.2], [1.54575366E12, 1598.2333333333333], [1.54575588E12, 1560.8333333333333], [1.5457581E12, 1399.3], [1.54575162E12, 1449.05], [1.54575264E12, 1666.1833333333334], [1.54575246E12, 1569.8666666666666], [1.54575468E12, 1576.1333333333334], [1.5457569E12, 1474.9833333333333], [1.54575912E12, 1356.6666666666667], [1.54575414E12, 1593.2333333333333], [1.54575858E12, 1580.45], [1.54575636E12, 1541.75], [1.54575312E12, 1570.95], [1.54575294E12, 1745.3833333333334], [1.54575516E12, 1509.4], [1.54575738E12, 1583.8], [1.54575174E12, 1585.45], [1.54575654E12, 1634.7833333333333], [1.54575876E12, 1515.6666666666667], [1.5457533E12, 1711.2666666666667], [1.54575552E12, 1553.6833333333334], [1.54575534E12, 1620.8333333333333], [1.5457521E12, 1635.4833333333333], [1.54575432E12, 1539.7833333333333], [1.54575156E12, 1534.2166666666667], [1.54575756E12, 1448.9166666666667], [1.54575702E12, 1648.4], [1.54575924E12, 1226.6], [1.54575378E12, 1596.1666666666667], [1.545756E12, 1691.95], [1.54575582E12, 1570.2], [1.54575258E12, 1609.7166666666667], [1.5457548E12, 1590.35], [1.54575804E12, 1499.15], [1.5457584E12, 1640.4166666666667], [1.54575192E12, 1562.5666666666666], [1.54575396E12, 1680.6166666666666], [1.54575618E12, 1595.8666666666666], [1.54575276E12, 1629.0333333333333], [1.5457572E12, 1513.8166666666666], [1.54575822E12, 1465.75], [1.54575498E12, 1583.6166666666666]], "isOverall": false, "label": "SkinPrice Find By ID-success", "isController": false}, {"data": [[1.54575924E12, 0.2833333333333333]], "isOverall": false, "label": "SkinPrice Find By ID-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54575924E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.5666666666666667, "minX": 1.5457512E12, "maxY": 3491.45, "series": [{"data": [[1.54575222E12, 3024.8333333333335], [1.54575444E12, 3127.7], [1.54575666E12, 3317.133333333333], [1.54575888E12, 3356.15], [1.54575324E12, 3203.3], [1.54575768E12, 3064.6], [1.5457587E12, 3088.35], [1.54575546E12, 3151.733333333333], [1.54575462E12, 3086.983333333333], [1.54575906E12, 2583.5333333333333], [1.54575684E12, 3012.0], [1.5457536E12, 3394.2], [1.54575342E12, 3073.55], [1.54575564E12, 3131.0333333333333], [1.54575786E12, 3095.116666666667], [1.54575186E12, 3066.0666666666666], [1.5457524E12, 3243.1], [1.5457551E12, 3332.1833333333334], [1.54575408E12, 3235.25], [1.54575732E12, 3206.266666666667], [1.5457539E12, 3273.4166666666665], [1.54575612E12, 3270.6666666666665], [1.54575834E12, 2991.516666666667], [1.54575138E12, 3111.7833333333333], [1.54575288E12, 3247.95], [1.54575204E12, 3364.9666666666667], [1.54575648E12, 3175.266666666667], [1.5457575E12, 3212.266666666667], [1.54575426E12, 3329.5666666666666], [1.5457512E12, 2068.233333333333], [1.54575306E12, 3406.0833333333335], [1.5457563E12, 3260.45], [1.54575852E12, 3239.5833333333335], [1.54575528E12, 2956.2166666666667], [1.54575252E12, 3133.133333333333], [1.54575696E12, 3090.95], [1.54575798E12, 3316.4666666666667], [1.54575474E12, 3418.7166666666667], [1.54575678E12, 3139.983333333333], [1.545759E12, 3017.8166666666666], [1.54575354E12, 3229.866666666667], [1.54575576E12, 2895.0833333333335], [1.5457527E12, 3368.0333333333333], [1.54575492E12, 3238.3333333333335], [1.54575714E12, 2950.4166666666665], [1.54575198E12, 3217.2166666666667], [1.54575372E12, 3138.3], [1.54575816E12, 3207.633333333333], [1.54575918E12, 3147.3166666666666], [1.54575594E12, 3419.6833333333334], [1.54575318E12, 3168.5], [1.5457554E12, 3219.1], [1.54575762E12, 3056.55], [1.54575216E12, 3230.8], [1.5457515E12, 3144.766666666667], [1.5457542E12, 3402.5833333333335], [1.54575642E12, 2914.75], [1.54575864E12, 3227.0833333333335], [1.54575168E12, 3286.266666666667], [1.54575558E12, 3321.2], [1.54575234E12, 2918.4166666666665], [1.54575456E12, 3209.4666666666667], [1.54575132E12, 3277.866666666667], [1.5457578E12, 3294.25], [1.54575438E12, 3131.4333333333334], [1.54575882E12, 3169.133333333333], [1.5457566E12, 3298.85], [1.54575336E12, 3294.866666666667], [1.54575144E12, 3332.35], [1.54575606E12, 3210.3], [1.54575282E12, 3213.5833333333335], [1.54575504E12, 3054.516666666667], [1.54575828E12, 2746.05], [1.54575486E12, 3097.633333333333], [1.54575708E12, 3151.8], [1.54575384E12, 3291.016666666667], [1.545753E12, 3330.616666666667], [1.54575744E12, 3351.9666666666667], [1.54575846E12, 3119.85], [1.54575522E12, 2934.1833333333334], [1.54575624E12, 3242.0333333333333], [1.54575726E12, 3405.3333333333335], [1.54575402E12, 3110.383333333333], [1.54575126E12, 3343.5833333333335], [1.54575348E12, 3183.05], [1.54575792E12, 2948.7], [1.5457518E12, 3317.6666666666665], [1.54575894E12, 3289.5], [1.5457557E12, 2898.233333333333], [1.54575228E12, 3185.6666666666665], [1.54575672E12, 3336.15], [1.54575774E12, 3317.4166666666665], [1.5457545E12, 3198.8], [1.54575366E12, 3196.8166666666666], [1.54575588E12, 3121.2], [1.5457581E12, 2798.3], [1.54575162E12, 2898.25], [1.54575264E12, 3332.266666666667], [1.54575246E12, 3139.616666666667], [1.54575468E12, 3153.2], [1.5457569E12, 2950.15], [1.54575912E12, 2713.25], [1.54575414E12, 3186.516666666667], [1.54575858E12, 3160.766666666667], [1.54575636E12, 3084.0833333333335], [1.54575312E12, 3142.7166666666667], [1.54575294E12, 3491.45], [1.54575516E12, 3019.0333333333333], [1.54575738E12, 3168.05], [1.54575174E12, 3171.366666666667], [1.54575654E12, 3270.516666666667], [1.54575876E12, 3031.5333333333333], [1.5457533E12, 3422.366666666667], [1.54575552E12, 3107.616666666667], [1.54575534E12, 3241.116666666667], [1.5457521E12, 3271.2166666666667], [1.54575432E12, 3078.516666666667], [1.54575156E12, 3068.233333333333], [1.54575756E12, 2898.1666666666665], [1.54575702E12, 3296.233333333333], [1.54575924E12, 2453.5333333333333], [1.54575378E12, 3192.0833333333335], [1.545756E12, 3383.883333333333], [1.54575582E12, 3140.85], [1.54575258E12, 3219.7], [1.5457548E12, 3180.5333333333333], [1.54575804E12, 2998.55], [1.5457584E12, 3281.7], [1.54575192E12, 3125.6833333333334], [1.54575396E12, 3361.25], [1.54575618E12, 3191.75], [1.54575276E12, 3258.7166666666667], [1.5457572E12, 3027.9333333333334], [1.54575822E12, 2931.35], [1.54575498E12, 3167.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.54575924E12, 1.5666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54575924E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}


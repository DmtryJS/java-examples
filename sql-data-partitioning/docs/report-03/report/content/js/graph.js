/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 6110.0, "series": [{"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 6.0], [6.5, 6.0], [6.6, 6.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 7.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 8.0], [15.9, 8.0], [16.0, 8.0], [16.1, 8.0], [16.2, 8.0], [16.3, 8.0], [16.4, 8.0], [16.5, 8.0], [16.6, 8.0], [16.7, 8.0], [16.8, 8.0], [16.9, 8.0], [17.0, 8.0], [17.1, 8.0], [17.2, 8.0], [17.3, 8.0], [17.4, 8.0], [17.5, 8.0], [17.6, 8.0], [17.7, 8.0], [17.8, 8.0], [17.9, 8.0], [18.0, 8.0], [18.1, 8.0], [18.2, 8.0], [18.3, 8.0], [18.4, 8.0], [18.5, 8.0], [18.6, 8.0], [18.7, 8.0], [18.8, 8.0], [18.9, 8.0], [19.0, 8.0], [19.1, 8.0], [19.2, 9.0], [19.3, 9.0], [19.4, 9.0], [19.5, 9.0], [19.6, 9.0], [19.7, 9.0], [19.8, 9.0], [19.9, 9.0], [20.0, 9.0], [20.1, 9.0], [20.2, 9.0], [20.3, 9.0], [20.4, 9.0], [20.5, 9.0], [20.6, 9.0], [20.7, 9.0], [20.8, 9.0], [20.9, 9.0], [21.0, 9.0], [21.1, 9.0], [21.2, 9.0], [21.3, 9.0], [21.4, 9.0], [21.5, 9.0], [21.6, 9.0], [21.7, 9.0], [21.8, 9.0], [21.9, 9.0], [22.0, 9.0], [22.1, 9.0], [22.2, 9.0], [22.3, 9.0], [22.4, 9.0], [22.5, 9.0], [22.6, 9.0], [22.7, 9.0], [22.8, 9.0], [22.9, 9.0], [23.0, 9.0], [23.1, 9.0], [23.2, 9.0], [23.3, 9.0], [23.4, 9.0], [23.5, 9.0], [23.6, 9.0], [23.7, 9.0], [23.8, 9.0], [23.9, 9.0], [24.0, 9.0], [24.1, 9.0], [24.2, 9.0], [24.3, 9.0], [24.4, 9.0], [24.5, 9.0], [24.6, 9.0], [24.7, 9.0], [24.8, 9.0], [24.9, 9.0], [25.0, 9.0], [25.1, 9.0], [25.2, 9.0], [25.3, 9.0], [25.4, 9.0], [25.5, 9.0], [25.6, 9.0], [25.7, 9.0], [25.8, 9.0], [25.9, 9.0], [26.0, 9.0], [26.1, 9.0], [26.2, 9.0], [26.3, 9.0], [26.4, 9.0], [26.5, 9.0], [26.6, 9.0], [26.7, 10.0], [26.8, 10.0], [26.9, 10.0], [27.0, 10.0], [27.1, 10.0], [27.2, 10.0], [27.3, 10.0], [27.4, 10.0], [27.5, 10.0], [27.6, 10.0], [27.7, 10.0], [27.8, 10.0], [27.9, 10.0], [28.0, 10.0], [28.1, 10.0], [28.2, 10.0], [28.3, 10.0], [28.4, 10.0], [28.5, 10.0], [28.6, 10.0], [28.7, 10.0], [28.8, 10.0], [28.9, 10.0], [29.0, 10.0], [29.1, 10.0], [29.2, 10.0], [29.3, 10.0], [29.4, 10.0], [29.5, 10.0], [29.6, 10.0], [29.7, 10.0], [29.8, 10.0], [29.9, 10.0], [30.0, 10.0], [30.1, 10.0], [30.2, 10.0], [30.3, 10.0], [30.4, 10.0], [30.5, 10.0], [30.6, 10.0], [30.7, 10.0], [30.8, 10.0], [30.9, 10.0], [31.0, 10.0], [31.1, 10.0], [31.2, 10.0], [31.3, 10.0], [31.4, 10.0], [31.5, 10.0], [31.6, 10.0], [31.7, 10.0], [31.8, 10.0], [31.9, 10.0], [32.0, 10.0], [32.1, 10.0], [32.2, 10.0], [32.3, 10.0], [32.4, 10.0], [32.5, 10.0], [32.6, 10.0], [32.7, 10.0], [32.8, 10.0], [32.9, 10.0], [33.0, 10.0], [33.1, 10.0], [33.2, 10.0], [33.3, 10.0], [33.4, 10.0], [33.5, 10.0], [33.6, 10.0], [33.7, 10.0], [33.8, 10.0], [33.9, 10.0], [34.0, 10.0], [34.1, 11.0], [34.2, 11.0], [34.3, 11.0], [34.4, 11.0], [34.5, 11.0], [34.6, 11.0], [34.7, 11.0], [34.8, 11.0], [34.9, 11.0], [35.0, 11.0], [35.1, 11.0], [35.2, 11.0], [35.3, 11.0], [35.4, 11.0], [35.5, 11.0], [35.6, 11.0], [35.7, 11.0], [35.8, 11.0], [35.9, 11.0], [36.0, 11.0], [36.1, 11.0], [36.2, 11.0], [36.3, 11.0], [36.4, 11.0], [36.5, 11.0], [36.6, 11.0], [36.7, 11.0], [36.8, 11.0], [36.9, 11.0], [37.0, 11.0], [37.1, 11.0], [37.2, 11.0], [37.3, 11.0], [37.4, 11.0], [37.5, 11.0], [37.6, 11.0], [37.7, 11.0], [37.8, 11.0], [37.9, 11.0], [38.0, 11.0], [38.1, 11.0], [38.2, 11.0], [38.3, 11.0], [38.4, 11.0], [38.5, 11.0], [38.6, 11.0], [38.7, 11.0], [38.8, 11.0], [38.9, 11.0], [39.0, 11.0], [39.1, 11.0], [39.2, 11.0], [39.3, 11.0], [39.4, 11.0], [39.5, 11.0], [39.6, 11.0], [39.7, 11.0], [39.8, 11.0], [39.9, 11.0], [40.0, 11.0], [40.1, 11.0], [40.2, 11.0], [40.3, 11.0], [40.4, 11.0], [40.5, 11.0], [40.6, 12.0], [40.7, 12.0], [40.8, 12.0], [40.9, 12.0], [41.0, 12.0], [41.1, 12.0], [41.2, 12.0], [41.3, 12.0], [41.4, 12.0], [41.5, 12.0], [41.6, 12.0], [41.7, 12.0], [41.8, 12.0], [41.9, 12.0], [42.0, 12.0], [42.1, 12.0], [42.2, 12.0], [42.3, 12.0], [42.4, 12.0], [42.5, 12.0], [42.6, 12.0], [42.7, 12.0], [42.8, 12.0], [42.9, 12.0], [43.0, 12.0], [43.1, 12.0], [43.2, 12.0], [43.3, 12.0], [43.4, 12.0], [43.5, 12.0], [43.6, 12.0], [43.7, 12.0], [43.8, 12.0], [43.9, 12.0], [44.0, 12.0], [44.1, 12.0], [44.2, 12.0], [44.3, 12.0], [44.4, 12.0], [44.5, 12.0], [44.6, 12.0], [44.7, 12.0], [44.8, 12.0], [44.9, 12.0], [45.0, 12.0], [45.1, 12.0], [45.2, 12.0], [45.3, 12.0], [45.4, 12.0], [45.5, 12.0], [45.6, 12.0], [45.7, 12.0], [45.8, 12.0], [45.9, 12.0], [46.0, 12.0], [46.1, 12.0], [46.2, 12.0], [46.3, 13.0], [46.4, 13.0], [46.5, 13.0], [46.6, 13.0], [46.7, 13.0], [46.8, 13.0], [46.9, 13.0], [47.0, 13.0], [47.1, 13.0], [47.2, 13.0], [47.3, 13.0], [47.4, 13.0], [47.5, 13.0], [47.6, 13.0], [47.7, 13.0], [47.8, 13.0], [47.9, 13.0], [48.0, 13.0], [48.1, 13.0], [48.2, 13.0], [48.3, 13.0], [48.4, 13.0], [48.5, 13.0], [48.6, 13.0], [48.7, 13.0], [48.8, 13.0], [48.9, 13.0], [49.0, 13.0], [49.1, 13.0], [49.2, 13.0], [49.3, 13.0], [49.4, 13.0], [49.5, 13.0], [49.6, 13.0], [49.7, 13.0], [49.8, 13.0], [49.9, 13.0], [50.0, 13.0], [50.1, 13.0], [50.2, 13.0], [50.3, 13.0], [50.4, 13.0], [50.5, 13.0], [50.6, 13.0], [50.7, 13.0], [50.8, 13.0], [50.9, 13.0], [51.0, 13.0], [51.1, 13.0], [51.2, 14.0], [51.3, 14.0], [51.4, 14.0], [51.5, 14.0], [51.6, 14.0], [51.7, 14.0], [51.8, 14.0], [51.9, 14.0], [52.0, 14.0], [52.1, 14.0], [52.2, 14.0], [52.3, 14.0], [52.4, 14.0], [52.5, 14.0], [52.6, 14.0], [52.7, 14.0], [52.8, 14.0], [52.9, 14.0], [53.0, 14.0], [53.1, 14.0], [53.2, 14.0], [53.3, 14.0], [53.4, 14.0], [53.5, 14.0], [53.6, 14.0], [53.7, 14.0], [53.8, 14.0], [53.9, 14.0], [54.0, 14.0], [54.1, 14.0], [54.2, 14.0], [54.3, 14.0], [54.4, 14.0], [54.5, 14.0], [54.6, 14.0], [54.7, 14.0], [54.8, 14.0], [54.9, 14.0], [55.0, 14.0], [55.1, 14.0], [55.2, 14.0], [55.3, 14.0], [55.4, 15.0], [55.5, 15.0], [55.6, 15.0], [55.7, 15.0], [55.8, 15.0], [55.9, 15.0], [56.0, 15.0], [56.1, 15.0], [56.2, 15.0], [56.3, 15.0], [56.4, 15.0], [56.5, 15.0], [56.6, 15.0], [56.7, 15.0], [56.8, 15.0], [56.9, 15.0], [57.0, 15.0], [57.1, 15.0], [57.2, 15.0], [57.3, 15.0], [57.4, 15.0], [57.5, 15.0], [57.6, 15.0], [57.7, 15.0], [57.8, 15.0], [57.9, 15.0], [58.0, 15.0], [58.1, 15.0], [58.2, 15.0], [58.3, 15.0], [58.4, 15.0], [58.5, 15.0], [58.6, 15.0], [58.7, 15.0], [58.8, 15.0], [58.9, 16.0], [59.0, 16.0], [59.1, 16.0], [59.2, 16.0], [59.3, 16.0], [59.4, 16.0], [59.5, 16.0], [59.6, 16.0], [59.7, 16.0], [59.8, 16.0], [59.9, 16.0], [60.0, 16.0], [60.1, 16.0], [60.2, 16.0], [60.3, 16.0], [60.4, 16.0], [60.5, 16.0], [60.6, 16.0], [60.7, 16.0], [60.8, 16.0], [60.9, 16.0], [61.0, 16.0], [61.1, 16.0], [61.2, 16.0], [61.3, 16.0], [61.4, 16.0], [61.5, 16.0], [61.6, 16.0], [61.7, 16.0], [61.8, 16.0], [61.9, 16.0], [62.0, 17.0], [62.1, 17.0], [62.2, 17.0], [62.3, 17.0], [62.4, 17.0], [62.5, 17.0], [62.6, 17.0], [62.7, 17.0], [62.8, 17.0], [62.9, 17.0], [63.0, 17.0], [63.1, 17.0], [63.2, 17.0], [63.3, 17.0], [63.4, 17.0], [63.5, 17.0], [63.6, 17.0], [63.7, 17.0], [63.8, 17.0], [63.9, 17.0], [64.0, 17.0], [64.1, 17.0], [64.2, 17.0], [64.3, 17.0], [64.4, 17.0], [64.5, 17.0], [64.6, 18.0], [64.7, 18.0], [64.8, 18.0], [64.9, 18.0], [65.0, 18.0], [65.1, 18.0], [65.2, 18.0], [65.3, 18.0], [65.4, 18.0], [65.5, 18.0], [65.6, 18.0], [65.7, 18.0], [65.8, 18.0], [65.9, 18.0], [66.0, 18.0], [66.1, 18.0], [66.2, 18.0], [66.3, 18.0], [66.4, 18.0], [66.5, 18.0], [66.6, 18.0], [66.7, 18.0], [66.8, 18.0], [66.9, 19.0], [67.0, 19.0], [67.1, 19.0], [67.2, 19.0], [67.3, 19.0], [67.4, 19.0], [67.5, 19.0], [67.6, 19.0], [67.7, 19.0], [67.8, 19.0], [67.9, 19.0], [68.0, 19.0], [68.1, 19.0], [68.2, 19.0], [68.3, 19.0], [68.4, 19.0], [68.5, 19.0], [68.6, 19.0], [68.7, 19.0], [68.8, 20.0], [68.9, 20.0], [69.0, 20.0], [69.1, 20.0], [69.2, 20.0], [69.3, 20.0], [69.4, 20.0], [69.5, 20.0], [69.6, 20.0], [69.7, 20.0], [69.8, 20.0], [69.9, 20.0], [70.0, 20.0], [70.1, 20.0], [70.2, 20.0], [70.3, 20.0], [70.4, 20.0], [70.5, 21.0], [70.6, 21.0], [70.7, 21.0], [70.8, 21.0], [70.9, 21.0], [71.0, 21.0], [71.1, 21.0], [71.2, 21.0], [71.3, 21.0], [71.4, 21.0], [71.5, 21.0], [71.6, 21.0], [71.7, 21.0], [71.8, 21.0], [71.9, 21.0], [72.0, 22.0], [72.1, 22.0], [72.2, 22.0], [72.3, 22.0], [72.4, 22.0], [72.5, 22.0], [72.6, 22.0], [72.7, 22.0], [72.8, 22.0], [72.9, 22.0], [73.0, 22.0], [73.1, 22.0], [73.2, 23.0], [73.3, 23.0], [73.4, 23.0], [73.5, 23.0], [73.6, 23.0], [73.7, 23.0], [73.8, 23.0], [73.9, 23.0], [74.0, 23.0], [74.1, 23.0], [74.2, 23.0], [74.3, 23.0], [74.4, 24.0], [74.5, 24.0], [74.6, 24.0], [74.7, 24.0], [74.8, 24.0], [74.9, 24.0], [75.0, 24.0], [75.1, 24.0], [75.2, 24.0], [75.3, 24.0], [75.4, 25.0], [75.5, 25.0], [75.6, 25.0], [75.7, 25.0], [75.8, 25.0], [75.9, 25.0], [76.0, 25.0], [76.1, 25.0], [76.2, 25.0], [76.3, 26.0], [76.4, 26.0], [76.5, 26.0], [76.6, 26.0], [76.7, 26.0], [76.8, 26.0], [76.9, 26.0], [77.0, 27.0], [77.1, 27.0], [77.2, 27.0], [77.3, 27.0], [77.4, 27.0], [77.5, 27.0], [77.6, 27.0], [77.7, 27.0], [77.8, 28.0], [77.9, 28.0], [78.0, 28.0], [78.1, 28.0], [78.2, 28.0], [78.3, 28.0], [78.4, 29.0], [78.5, 29.0], [78.6, 29.0], [78.7, 29.0], [78.8, 29.0], [78.9, 29.0], [79.0, 30.0], [79.1, 30.0], [79.2, 30.0], [79.3, 30.0], [79.4, 30.0], [79.5, 31.0], [79.6, 31.0], [79.7, 31.0], [79.8, 31.0], [79.9, 31.0], [80.0, 32.0], [80.1, 32.0], [80.2, 32.0], [80.3, 32.0], [80.4, 33.0], [80.5, 33.0], [80.6, 33.0], [80.7, 33.0], [80.8, 33.0], [80.9, 34.0], [81.0, 34.0], [81.1, 34.0], [81.2, 35.0], [81.3, 35.0], [81.4, 35.0], [81.5, 35.0], [81.6, 36.0], [81.7, 36.0], [81.8, 36.0], [81.9, 36.0], [82.0, 37.0], [82.1, 37.0], [82.2, 37.0], [82.3, 38.0], [82.4, 38.0], [82.5, 38.0], [82.6, 39.0], [82.7, 39.0], [82.8, 39.0], [82.9, 39.0], [83.0, 40.0], [83.1, 40.0], [83.2, 40.0], [83.3, 41.0], [83.4, 41.0], [83.5, 41.0], [83.6, 42.0], [83.7, 42.0], [83.8, 42.0], [83.9, 43.0], [84.0, 43.0], [84.1, 43.0], [84.2, 44.0], [84.3, 44.0], [84.4, 44.0], [84.5, 45.0], [84.6, 45.0], [84.7, 45.0], [84.8, 46.0], [84.9, 46.0], [85.0, 46.0], [85.1, 47.0], [85.2, 47.0], [85.3, 48.0], [85.4, 48.0], [85.5, 48.0], [85.6, 49.0], [85.7, 49.0], [85.8, 49.0], [85.9, 50.0], [86.0, 50.0], [86.1, 50.0], [86.2, 51.0], [86.3, 51.0], [86.4, 51.0], [86.5, 52.0], [86.6, 52.0], [86.7, 52.0], [86.8, 53.0], [86.9, 53.0], [87.0, 54.0], [87.1, 54.0], [87.2, 54.0], [87.3, 55.0], [87.4, 55.0], [87.5, 55.0], [87.6, 56.0], [87.7, 56.0], [87.8, 57.0], [87.9, 57.0], [88.0, 57.0], [88.1, 58.0], [88.2, 58.0], [88.3, 58.0], [88.4, 59.0], [88.5, 59.0], [88.6, 60.0], [88.7, 60.0], [88.8, 60.0], [88.9, 61.0], [89.0, 61.0], [89.1, 62.0], [89.2, 62.0], [89.3, 63.0], [89.4, 63.0], [89.5, 63.0], [89.6, 64.0], [89.7, 64.0], [89.8, 65.0], [89.9, 65.0], [90.0, 66.0], [90.1, 66.0], [90.2, 67.0], [90.3, 67.0], [90.4, 68.0], [90.5, 68.0], [90.6, 69.0], [90.7, 69.0], [90.8, 70.0], [90.9, 70.0], [91.0, 71.0], [91.1, 71.0], [91.2, 72.0], [91.3, 72.0], [91.4, 73.0], [91.5, 73.0], [91.6, 74.0], [91.7, 75.0], [91.8, 75.0], [91.9, 76.0], [92.0, 76.0], [92.1, 77.0], [92.2, 78.0], [92.3, 78.0], [92.4, 79.0], [92.5, 80.0], [92.6, 81.0], [92.7, 81.0], [92.8, 82.0], [92.9, 83.0], [93.0, 84.0], [93.1, 85.0], [93.2, 85.0], [93.3, 86.0], [93.4, 87.0], [93.5, 88.0], [93.6, 89.0], [93.7, 90.0], [93.8, 92.0], [93.9, 93.0], [94.0, 94.0], [94.1, 95.0], [94.2, 97.0], [94.3, 98.0], [94.4, 100.0], [94.5, 101.0], [94.6, 103.0], [94.7, 105.0], [94.8, 107.0], [94.9, 110.0], [95.0, 112.0], [95.1, 115.0], [95.2, 118.0], [95.3, 121.0], [95.4, 124.0], [95.5, 128.0], [95.6, 132.0], [95.7, 136.0], [95.8, 141.0], [95.9, 146.0], [96.0, 151.0], [96.1, 157.0], [96.2, 163.0], [96.3, 170.0], [96.4, 177.0], [96.5, 184.0], [96.6, 191.0], [96.7, 198.0], [96.8, 205.0], [96.9, 213.0], [97.0, 221.0], [97.1, 229.0], [97.2, 238.0], [97.3, 248.0], [97.4, 257.0], [97.5, 265.0], [97.6, 274.0], [97.7, 283.0], [97.8, 291.0], [97.9, 300.0], [98.0, 308.0], [98.1, 317.0], [98.2, 326.0], [98.3, 335.0], [98.4, 344.0], [98.5, 355.0], [98.6, 368.0], [98.7, 381.0], [98.8, 395.0], [98.9, 410.0], [99.0, 429.0], [99.1, 454.0], [99.2, 484.0], [99.3, 522.0], [99.4, 567.0], [99.5, 621.0], [99.6, 691.0], [99.7, 802.0], [99.8, 955.0], [99.9, 1229.0], [100.0, 6110.0]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 6.0], [40.1, 6.0], [40.2, 6.0], [40.3, 6.0], [40.4, 6.0], [40.5, 6.0], [40.6, 6.0], [40.7, 6.0], [40.8, 6.0], [40.9, 6.0], [41.0, 6.0], [41.1, 6.0], [41.2, 6.0], [41.3, 6.0], [41.4, 6.0], [41.5, 6.0], [41.6, 6.0], [41.7, 6.0], [41.8, 6.0], [41.9, 6.0], [42.0, 6.0], [42.1, 6.0], [42.2, 6.0], [42.3, 6.0], [42.4, 6.0], [42.5, 6.0], [42.6, 6.0], [42.7, 6.0], [42.8, 6.0], [42.9, 6.0], [43.0, 6.0], [43.1, 6.0], [43.2, 6.0], [43.3, 6.0], [43.4, 6.0], [43.5, 6.0], [43.6, 6.0], [43.7, 6.0], [43.8, 6.0], [43.9, 6.0], [44.0, 6.0], [44.1, 6.0], [44.2, 6.0], [44.3, 6.0], [44.4, 6.0], [44.5, 6.0], [44.6, 6.0], [44.7, 6.0], [44.8, 6.0], [44.9, 6.0], [45.0, 6.0], [45.1, 6.0], [45.2, 6.0], [45.3, 6.0], [45.4, 6.0], [45.5, 6.0], [45.6, 6.0], [45.7, 6.0], [45.8, 6.0], [45.9, 6.0], [46.0, 6.0], [46.1, 6.0], [46.2, 6.0], [46.3, 6.0], [46.4, 6.0], [46.5, 6.0], [46.6, 6.0], [46.7, 6.0], [46.8, 6.0], [46.9, 6.0], [47.0, 6.0], [47.1, 6.0], [47.2, 6.0], [47.3, 6.0], [47.4, 6.0], [47.5, 6.0], [47.6, 6.0], [47.7, 6.0], [47.8, 6.0], [47.9, 6.0], [48.0, 6.0], [48.1, 6.0], [48.2, 6.0], [48.3, 6.0], [48.4, 6.0], [48.5, 6.0], [48.6, 6.0], [48.7, 6.0], [48.8, 6.0], [48.9, 6.0], [49.0, 6.0], [49.1, 6.0], [49.2, 6.0], [49.3, 6.0], [49.4, 6.0], [49.5, 6.0], [49.6, 6.0], [49.7, 6.0], [49.8, 6.0], [49.9, 7.0], [50.0, 7.0], [50.1, 7.0], [50.2, 7.0], [50.3, 7.0], [50.4, 7.0], [50.5, 7.0], [50.6, 7.0], [50.7, 7.0], [50.8, 7.0], [50.9, 7.0], [51.0, 7.0], [51.1, 7.0], [51.2, 7.0], [51.3, 7.0], [51.4, 7.0], [51.5, 7.0], [51.6, 7.0], [51.7, 7.0], [51.8, 7.0], [51.9, 7.0], [52.0, 7.0], [52.1, 7.0], [52.2, 7.0], [52.3, 7.0], [52.4, 7.0], [52.5, 7.0], [52.6, 7.0], [52.7, 7.0], [52.8, 7.0], [52.9, 7.0], [53.0, 7.0], [53.1, 7.0], [53.2, 7.0], [53.3, 7.0], [53.4, 7.0], [53.5, 7.0], [53.6, 7.0], [53.7, 7.0], [53.8, 7.0], [53.9, 7.0], [54.0, 7.0], [54.1, 7.0], [54.2, 7.0], [54.3, 7.0], [54.4, 7.0], [54.5, 7.0], [54.6, 7.0], [54.7, 7.0], [54.8, 7.0], [54.9, 7.0], [55.0, 7.0], [55.1, 7.0], [55.2, 7.0], [55.3, 7.0], [55.4, 7.0], [55.5, 7.0], [55.6, 7.0], [55.7, 7.0], [55.8, 7.0], [55.9, 7.0], [56.0, 7.0], [56.1, 7.0], [56.2, 7.0], [56.3, 7.0], [56.4, 7.0], [56.5, 7.0], [56.6, 7.0], [56.7, 7.0], [56.8, 7.0], [56.9, 7.0], [57.0, 7.0], [57.1, 7.0], [57.2, 7.0], [57.3, 7.0], [57.4, 7.0], [57.5, 7.0], [57.6, 7.0], [57.7, 7.0], [57.8, 7.0], [57.9, 7.0], [58.0, 7.0], [58.1, 7.0], [58.2, 7.0], [58.3, 7.0], [58.4, 7.0], [58.5, 7.0], [58.6, 7.0], [58.7, 7.0], [58.8, 7.0], [58.9, 7.0], [59.0, 7.0], [59.1, 7.0], [59.2, 8.0], [59.3, 8.0], [59.4, 8.0], [59.5, 8.0], [59.6, 8.0], [59.7, 8.0], [59.8, 8.0], [59.9, 8.0], [60.0, 8.0], [60.1, 8.0], [60.2, 8.0], [60.3, 8.0], [60.4, 8.0], [60.5, 8.0], [60.6, 8.0], [60.7, 8.0], [60.8, 8.0], [60.9, 8.0], [61.0, 8.0], [61.1, 8.0], [61.2, 8.0], [61.3, 8.0], [61.4, 8.0], [61.5, 8.0], [61.6, 8.0], [61.7, 8.0], [61.8, 8.0], [61.9, 8.0], [62.0, 8.0], [62.1, 8.0], [62.2, 8.0], [62.3, 8.0], [62.4, 8.0], [62.5, 8.0], [62.6, 8.0], [62.7, 8.0], [62.8, 8.0], [62.9, 8.0], [63.0, 8.0], [63.1, 8.0], [63.2, 8.0], [63.3, 8.0], [63.4, 8.0], [63.5, 8.0], [63.6, 8.0], [63.7, 8.0], [63.8, 8.0], [63.9, 8.0], [64.0, 8.0], [64.1, 8.0], [64.2, 8.0], [64.3, 8.0], [64.4, 8.0], [64.5, 8.0], [64.6, 8.0], [64.7, 8.0], [64.8, 8.0], [64.9, 8.0], [65.0, 8.0], [65.1, 8.0], [65.2, 8.0], [65.3, 8.0], [65.4, 8.0], [65.5, 8.0], [65.6, 8.0], [65.7, 8.0], [65.8, 8.0], [65.9, 8.0], [66.0, 8.0], [66.1, 8.0], [66.2, 8.0], [66.3, 8.0], [66.4, 8.0], [66.5, 8.0], [66.6, 8.0], [66.7, 8.0], [66.8, 9.0], [66.9, 9.0], [67.0, 9.0], [67.1, 9.0], [67.2, 9.0], [67.3, 9.0], [67.4, 9.0], [67.5, 9.0], [67.6, 9.0], [67.7, 9.0], [67.8, 9.0], [67.9, 9.0], [68.0, 9.0], [68.1, 9.0], [68.2, 9.0], [68.3, 9.0], [68.4, 9.0], [68.5, 9.0], [68.6, 9.0], [68.7, 9.0], [68.8, 9.0], [68.9, 9.0], [69.0, 9.0], [69.1, 9.0], [69.2, 9.0], [69.3, 9.0], [69.4, 9.0], [69.5, 9.0], [69.6, 9.0], [69.7, 9.0], [69.8, 9.0], [69.9, 9.0], [70.0, 9.0], [70.1, 9.0], [70.2, 9.0], [70.3, 9.0], [70.4, 9.0], [70.5, 9.0], [70.6, 9.0], [70.7, 9.0], [70.8, 9.0], [70.9, 9.0], [71.0, 9.0], [71.1, 9.0], [71.2, 9.0], [71.3, 9.0], [71.4, 9.0], [71.5, 9.0], [71.6, 9.0], [71.7, 9.0], [71.8, 9.0], [71.9, 9.0], [72.0, 9.0], [72.1, 9.0], [72.2, 9.0], [72.3, 9.0], [72.4, 9.0], [72.5, 9.0], [72.6, 10.0], [72.7, 10.0], [72.8, 10.0], [72.9, 10.0], [73.0, 10.0], [73.1, 10.0], [73.2, 10.0], [73.3, 10.0], [73.4, 10.0], [73.5, 10.0], [73.6, 10.0], [73.7, 10.0], [73.8, 10.0], [73.9, 10.0], [74.0, 10.0], [74.1, 10.0], [74.2, 10.0], [74.3, 10.0], [74.4, 10.0], [74.5, 10.0], [74.6, 10.0], [74.7, 10.0], [74.8, 10.0], [74.9, 10.0], [75.0, 10.0], [75.1, 10.0], [75.2, 10.0], [75.3, 10.0], [75.4, 10.0], [75.5, 10.0], [75.6, 10.0], [75.7, 10.0], [75.8, 10.0], [75.9, 10.0], [76.0, 10.0], [76.1, 10.0], [76.2, 10.0], [76.3, 10.0], [76.4, 10.0], [76.5, 10.0], [76.6, 10.0], [76.7, 10.0], [76.8, 10.0], [76.9, 10.0], [77.0, 10.0], [77.1, 11.0], [77.2, 11.0], [77.3, 11.0], [77.4, 11.0], [77.5, 11.0], [77.6, 11.0], [77.7, 11.0], [77.8, 11.0], [77.9, 11.0], [78.0, 11.0], [78.1, 11.0], [78.2, 11.0], [78.3, 11.0], [78.4, 11.0], [78.5, 11.0], [78.6, 11.0], [78.7, 11.0], [78.8, 11.0], [78.9, 11.0], [79.0, 11.0], [79.1, 11.0], [79.2, 11.0], [79.3, 11.0], [79.4, 11.0], [79.5, 11.0], [79.6, 11.0], [79.7, 11.0], [79.8, 11.0], [79.9, 11.0], [80.0, 11.0], [80.1, 11.0], [80.2, 11.0], [80.3, 11.0], [80.4, 11.0], [80.5, 11.0], [80.6, 12.0], [80.7, 12.0], [80.8, 12.0], [80.9, 12.0], [81.0, 12.0], [81.1, 12.0], [81.2, 12.0], [81.3, 12.0], [81.4, 12.0], [81.5, 12.0], [81.6, 12.0], [81.7, 12.0], [81.8, 12.0], [81.9, 12.0], [82.0, 12.0], [82.1, 12.0], [82.2, 12.0], [82.3, 12.0], [82.4, 12.0], [82.5, 12.0], [82.6, 12.0], [82.7, 12.0], [82.8, 12.0], [82.9, 12.0], [83.0, 12.0], [83.1, 12.0], [83.2, 12.0], [83.3, 13.0], [83.4, 13.0], [83.5, 13.0], [83.6, 13.0], [83.7, 13.0], [83.8, 13.0], [83.9, 13.0], [84.0, 13.0], [84.1, 13.0], [84.2, 13.0], [84.3, 13.0], [84.4, 13.0], [84.5, 13.0], [84.6, 13.0], [84.7, 13.0], [84.8, 13.0], [84.9, 13.0], [85.0, 13.0], [85.1, 13.0], [85.2, 13.0], [85.3, 13.0], [85.4, 13.0], [85.5, 14.0], [85.6, 14.0], [85.7, 14.0], [85.8, 14.0], [85.9, 14.0], [86.0, 14.0], [86.1, 14.0], [86.2, 14.0], [86.3, 14.0], [86.4, 14.0], [86.5, 14.0], [86.6, 14.0], [86.7, 14.0], [86.8, 14.0], [86.9, 14.0], [87.0, 14.0], [87.1, 14.0], [87.2, 15.0], [87.3, 15.0], [87.4, 15.0], [87.5, 15.0], [87.6, 15.0], [87.7, 15.0], [87.8, 15.0], [87.9, 15.0], [88.0, 15.0], [88.1, 15.0], [88.2, 15.0], [88.3, 15.0], [88.4, 15.0], [88.5, 15.0], [88.6, 16.0], [88.7, 16.0], [88.8, 16.0], [88.9, 16.0], [89.0, 16.0], [89.1, 16.0], [89.2, 16.0], [89.3, 16.0], [89.4, 16.0], [89.5, 16.0], [89.6, 16.0], [89.7, 17.0], [89.8, 17.0], [89.9, 17.0], [90.0, 17.0], [90.1, 17.0], [90.2, 17.0], [90.3, 17.0], [90.4, 17.0], [90.5, 17.0], [90.6, 17.0], [90.7, 18.0], [90.8, 18.0], [90.9, 18.0], [91.0, 18.0], [91.1, 18.0], [91.2, 18.0], [91.3, 18.0], [91.4, 18.0], [91.5, 19.0], [91.6, 19.0], [91.7, 19.0], [91.8, 19.0], [91.9, 19.0], [92.0, 19.0], [92.1, 19.0], [92.2, 20.0], [92.3, 20.0], [92.4, 20.0], [92.5, 20.0], [92.6, 20.0], [92.7, 20.0], [92.8, 20.0], [92.9, 21.0], [93.0, 21.0], [93.1, 21.0], [93.2, 21.0], [93.3, 21.0], [93.4, 22.0], [93.5, 22.0], [93.6, 22.0], [93.7, 22.0], [93.8, 22.0], [93.9, 23.0], [94.0, 23.0], [94.1, 23.0], [94.2, 23.0], [94.3, 24.0], [94.4, 24.0], [94.5, 24.0], [94.6, 24.0], [94.7, 25.0], [94.8, 25.0], [94.9, 25.0], [95.0, 25.0], [95.1, 26.0], [95.2, 26.0], [95.3, 26.0], [95.4, 27.0], [95.5, 27.0], [95.6, 27.0], [95.7, 28.0], [95.8, 28.0], [95.9, 29.0], [96.0, 29.0], [96.1, 29.0], [96.2, 30.0], [96.3, 30.0], [96.4, 31.0], [96.5, 31.0], [96.6, 32.0], [96.7, 32.0], [96.8, 33.0], [96.9, 33.0], [97.0, 34.0], [97.1, 34.0], [97.2, 35.0], [97.3, 36.0], [97.4, 36.0], [97.5, 37.0], [97.6, 38.0], [97.7, 39.0], [97.8, 39.0], [97.9, 40.0], [98.0, 41.0], [98.1, 42.0], [98.2, 43.0], [98.3, 44.0], [98.4, 45.0], [98.5, 47.0], [98.6, 48.0], [98.7, 49.0], [98.8, 51.0], [98.9, 52.0], [99.0, 54.0], [99.1, 56.0], [99.2, 58.0], [99.3, 61.0], [99.4, 64.0], [99.5, 68.0], [99.6, 72.0], [99.7, 79.0], [99.8, 91.0], [99.9, 126.0], [100.0, 5889.0]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1.4528619E7, "series": [{"data": [[0.0, 1.3733768E7], [600.0, 20932.0], [700.0, 13019.0], [800.0, 9476.0], [900.0, 8112.0], [1000.0, 6856.0], [1100.0, 4021.0], [1200.0, 2875.0], [1300.0, 1577.0], [1400.0, 1865.0], [1500.0, 1595.0], [100.0, 341218.0], [1600.0, 1633.0], [1700.0, 1106.0], [1800.0, 821.0], [1900.0, 683.0], [2000.0, 437.0], [2100.0, 380.0], [2300.0, 301.0], [2200.0, 385.0], [2400.0, 512.0], [2500.0, 354.0], [2600.0, 110.0], [2700.0, 259.0], [2800.0, 117.0], [2900.0, 50.0], [3000.0, 23.0], [3100.0, 25.0], [200.0, 170655.0], [3300.0, 59.0], [3200.0, 1.0], [3400.0, 38.0], [3500.0, 75.0], [3600.0, 29.0], [3700.0, 18.0], [3800.0, 11.0], [4000.0, 8.0], [4100.0, 8.0], [4200.0, 3.0], [4400.0, 10.0], [300.0, 135578.0], [6000.0, 98.0], [6100.0, 1.0], [400.0, 60659.0], [500.0, 31885.0]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[0.0, 1.4528619E7], [600.0, 273.0], [700.0, 157.0], [800.0, 120.0], [900.0, 76.0], [1000.0, 73.0], [1100.0, 35.0], [1200.0, 30.0], [1300.0, 19.0], [1400.0, 32.0], [1500.0, 33.0], [100.0, 14986.0], [1600.0, 52.0], [1700.0, 13.0], [1800.0, 3.0], [1900.0, 9.0], [2000.0, 8.0], [2100.0, 2.0], [2200.0, 11.0], [2600.0, 1.0], [2700.0, 9.0], [200.0, 3867.0], [300.0, 1976.0], [5800.0, 1.0], [400.0, 743.0], [500.0, 429.0]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 19.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2.8992438E7, "series": [{"data": [[0.0, 2.8992438E7]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 101499.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 9267.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 19.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 97.21650271936748, "minX": 1.54570188E12, "maxY": 100.0, "series": [{"data": [[1.54570662E12, 100.0], [1.54570338E12, 100.0], [1.5457056E12, 100.0], [1.54570542E12, 100.0], [1.54570218E12, 100.0], [1.5457044E12, 100.0], [1.54570764E12, 100.0], [1.54570422E12, 100.0], [1.54570644E12, 100.0], [1.5457032E12, 100.0], [1.54570302E12, 100.0], [1.54570524E12, 100.0], [1.54570746E12, 100.0], [1.545702E12, 100.0], [1.54570404E12, 100.0], [1.54570626E12, 100.0], [1.54570848E12, 100.0], [1.54570284E12, 100.0], [1.54570728E12, 100.0], [1.5457083E12, 100.0], [1.54570506E12, 100.0], [1.54570608E12, 100.0], [1.5457071E12, 100.0], [1.54570386E12, 100.0], [1.54570266E12, 100.0], [1.5457059E12, 100.0], [1.54570812E12, 100.0], [1.54570488E12, 100.0], [1.54570308E12, 100.0], [1.54570752E12, 100.0], [1.54570854E12, 99.77597026501603], [1.5457053E12, 100.0], [1.54570188E12, 97.21650271936748], [1.54570632E12, 100.0], [1.54570734E12, 100.0], [1.5457041E12, 100.0], [1.54570614E12, 100.0], [1.54570836E12, 100.0], [1.5457029E12, 100.0], [1.54570512E12, 100.0], [1.54570494E12, 100.0], [1.54570392E12, 100.0], [1.54570716E12, 100.0], [1.54570374E12, 100.0], [1.54570818E12, 100.0], [1.54570272E12, 100.0], [1.54570596E12, 100.0], [1.54570254E12, 100.0], [1.54570476E12, 100.0], [1.54570698E12, 100.0], [1.545708E12, 100.0], [1.54570356E12, 100.0], [1.54570578E12, 100.0], [1.54570236E12, 100.0], [1.5457068E12, 100.0], [1.54570782E12, 100.0], [1.54570458E12, 100.0], [1.54570278E12, 100.0], [1.545705E12, 100.0], [1.54570722E12, 100.0], [1.5457038E12, 100.0], [1.54570602E12, 100.0], [1.54570824E12, 100.0], [1.5457026E12, 100.0], [1.54570704E12, 100.0], [1.54570482E12, 100.0], [1.54570806E12, 100.0], [1.54570686E12, 100.0], [1.54570362E12, 100.0], [1.54570584E12, 100.0], [1.54570566E12, 100.0], [1.54570242E12, 100.0], [1.54570464E12, 100.0], [1.54570788E12, 100.0], [1.54570446E12, 100.0], [1.54570668E12, 100.0], [1.54570344E12, 100.0], [1.54570326E12, 100.0], [1.54570548E12, 100.0], [1.5457077E12, 100.0], [1.54570224E12, 100.0], [1.54570206E12, 100.0], [1.54570428E12, 100.0], [1.5457065E12, 100.0], [1.5457047E12, 100.0], [1.54570692E12, 100.0], [1.54570368E12, 100.0], [1.5457035E12, 100.0], [1.54570572E12, 100.0], [1.54570794E12, 100.0], [1.54570248E12, 100.0], [1.5457023E12, 100.0], [1.54570452E12, 100.0], [1.54570674E12, 100.0], [1.54570332E12, 100.0], [1.54570776E12, 100.0], [1.54570554E12, 100.0], [1.54570212E12, 100.0], [1.54570656E12, 100.0], [1.54570758E12, 100.0], [1.54570434E12, 100.0], [1.54570638E12, 100.0], [1.54570314E12, 100.0], [1.54570536E12, 100.0], [1.54570518E12, 100.0], [1.54570194E12, 100.0], [1.54570416E12, 100.0], [1.5457074E12, 100.0], [1.54570398E12, 100.0], [1.54570842E12, 100.0], [1.5457062E12, 100.0], [1.54570296E12, 100.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54570854E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.224137931034482, "minX": 2.0, "maxY": 69.0, "series": [{"data": [[2.0, 4.0], [4.0, 69.0], [5.0, 3.9230769230769225], [6.0, 4.6], [7.0, 3.7380952380952377], [8.0, 3.241379310344828], [9.0, 3.1904761904761902], [10.0, 3.426470588235294], [11.0, 4.517857142857142], [12.0, 3.9178082191780823], [13.0, 4.146666666666667], [14.0, 5.714285714285715], [15.0, 4.589041095890411], [16.0, 5.604651162790697], [17.0, 4.255555555555555], [18.0, 3.9909909909909898], [19.0, 4.965909090909089], [20.0, 4.388888888888888], [21.0, 4.827868852459017], [22.0, 5.135922330097091], [23.0, 4.945454545454546], [24.0, 5.235294117647058], [25.0, 7.522727272727273], [26.0, 5.282258064516128], [27.0, 5.557377049180326], [28.0, 6.051612903225807], [29.0, 6.264957264957267], [30.0, 5.2205882352941195], [31.0, 5.594202898550723], [32.0, 5.9452054794520555], [33.0, 5.24550898203593], [34.0, 6.347457627118643], [35.0, 6.747311827956982], [36.0, 5.791666666666663], [37.0, 6.109756097560979], [38.0, 4.452173913043479], [39.0, 4.4206008583691], [40.0, 4.8269230769230775], [41.0, 4.348178137651824], [42.0, 5.71794871794872], [43.0, 5.047210300429184], [44.0, 4.980237154150193], [45.0, 5.130252100840341], [46.0, 6.094059405940593], [47.0, 5.486607142857145], [48.0, 6.573991031390137], [49.0, 6.103004291845496], [50.0, 6.782051282051288], [51.0, 5.73109243697479], [52.0, 7.147540983606556], [53.0, 6.266159695817487], [54.0, 7.640211640211633], [55.0, 6.401746724890831], [56.0, 6.716599190283398], [57.0, 5.737024221453291], [58.0, 6.804347826086954], [59.0, 7.648854961832059], [60.0, 6.629629629629632], [61.0, 7.021367521367522], [62.0, 7.057268722466959], [63.0, 8.288], [64.0, 8.456621004566207], [65.0, 6.790000000000001], [66.0, 9.00398406374502], [67.0, 7.042471042471043], [68.0, 7.496453900709223], [69.0, 7.04435483870968], [70.0, 7.753906250000001], [71.0, 7.203773584905657], [72.0, 7.794326241134749], [73.0, 11.838541666666671], [74.0, 8.022988505747124], [75.0, 9.456431535269708], [76.0, 8.427184466019414], [77.0, 9.109803921568625], [78.0, 8.672000000000004], [79.0, 8.192592592592591], [80.0, 8.729729729729714], [81.0, 8.365461847389561], [82.0, 8.189189189189193], [83.0, 9.190839694656487], [84.0, 8.929687500000007], [85.0, 8.410169491525425], [86.0, 8.790163934426227], [87.0, 9.683937823834194], [88.0, 9.344129554655867], [89.0, 10.490421455938698], [90.0, 10.02991452991453], [91.0, 9.378676470588236], [92.0, 10.036290322580648], [93.0, 8.854014598540155], [94.0, 8.37770897832817], [95.0, 8.995967741935477], [96.0, 10.187725631768958], [97.0, 13.337278106508883], [98.0, 11.250883392226143], [99.0, 7.92079207920792], [100.0, 36.166065988004306]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[99.95045653254505, 36.12912003219749]], "isOverall": false, "label": "SkinPrice Creation-Aggregated", "isController": false}, {"data": [[5.0, 17.117647058823533], [6.0, 3.8888888888888906], [7.0, 2.6744186046511627], [8.0, 2.224137931034482], [9.0, 2.2419354838709684], [10.0, 2.3857142857142852], [11.0, 2.9090909090909083], [12.0, 2.9436619718309864], [13.0, 2.9125000000000014], [14.0, 3.500000000000001], [15.0, 3.5733333333333333], [16.0, 2.794520547945206], [17.0, 2.9009900990099013], [18.0, 2.780952380952381], [19.0, 3.7888888888888883], [20.0, 3.0275229357798175], [21.0, 2.833333333333333], [22.0, 3.4326923076923084], [23.0, 3.559633027522936], [24.0, 3.3613445378151265], [25.0, 4.30952380952381], [26.0, 4.3082706766917305], [27.0, 3.4341085271317824], [28.0, 3.6160000000000005], [29.0, 4.17094017094017], [30.0, 3.683453237410072], [31.0, 3.6043165467625893], [32.0, 3.6827586206896545], [33.0, 2.994047619047617], [34.0, 3.871212121212122], [35.0, 3.5786516853932593], [36.0, 3.0191082802547773], [37.0, 3.1707317073170715], [38.0, 2.6523605150214604], [39.0, 2.6768558951965056], [40.0, 2.9398148148148135], [41.0, 2.504132231404958], [42.0, 3.353535353535355], [43.0, 3.0632911392405053], [44.0, 3.0850202429149807], [45.0, 2.999999999999999], [46.0, 4.342857142857144], [47.0, 2.6602870813397126], [48.0, 3.9618644067796605], [49.0, 3.939914163090128], [50.0, 3.897435897435897], [51.0, 3.341880341880342], [52.0, 4.108108108108107], [53.0, 3.6249999999999996], [54.0, 4.764705882352942], [55.0, 4.369477911646584], [56.0, 4.563876651982375], [57.0, 4.127147766323027], [58.0, 4.399141630901287], [59.0, 5.007905138339921], [60.0, 4.228136882129277], [61.0, 4.023437499999997], [62.0, 4.136363636363636], [63.0, 4.639004149377596], [64.0, 5.347826086956521], [65.0, 4.533018867924531], [66.0, 5.766519823788548], [67.0, 4.9925925925925965], [68.0, 3.9034749034749026], [69.0, 5.348837209302326], [70.0, 5.513725490196079], [71.0, 5.110294117647064], [72.0, 5.1038461538461535], [73.0, 5.492385786802031], [74.0, 5.231046931407944], [75.0, 4.891472868217056], [76.0, 6.52601156069364], [77.0, 7.526515151515145], [78.0, 4.9778597785977885], [79.0, 5.297297297297302], [80.0, 6.202127659574464], [81.0, 6.105990783410136], [82.0, 5.682432432432433], [83.0, 5.359259259259256], [84.0, 5.8566037735849035], [85.0, 6.366548042704624], [86.0, 6.270967741935483], [87.0, 8.423280423280417], [88.0, 7.2267657992565075], [89.0, 6.774809160305344], [90.0, 7.771300448430494], [91.0, 6.9732824427480935], [92.0, 7.372469635627532], [93.0, 6.859778597785979], [94.0, 7.1600000000000055], [95.0, 6.574999999999998], [96.0, 6.757281553398058], [97.0, 7.382716049382718], [98.0, 8.698113207547173], [99.0, 7.326599326599323], [100.0, 9.15889199316959]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}, {"data": [[99.9505920217427, 9.153430930542902]], "isOverall": false, "label": "SkinPrice Find By ID-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 84251.8, "minX": 1.54570188E12, "maxY": 2258548.0833333335, "series": [{"data": [[1.54570662E12, 112387.93333333333], [1.54570338E12, 551794.3666666667], [1.5457056E12, 119006.56666666667], [1.54570542E12, 276022.1666666667], [1.54570218E12, 560833.55], [1.5457044E12, 84251.8], [1.54570764E12, 183756.3], [1.54570422E12, 307843.8], [1.54570644E12, 155960.18333333332], [1.5457032E12, 554773.0833333334], [1.54570302E12, 514224.3], [1.54570524E12, 187506.18333333332], [1.54570746E12, 268943.3], [1.545702E12, 571389.0833333334], [1.54570404E12, 182848.25], [1.54570626E12, 271404.1666666667], [1.54570848E12, 227877.43333333332], [1.54570284E12, 567887.2833333333], [1.54570728E12, 132161.01666666666], [1.5457083E12, 202623.96666666667], [1.54570506E12, 157704.9], [1.54570608E12, 179100.53333333333], [1.5457071E12, 171488.2], [1.54570386E12, 180911.55], [1.54570266E12, 488404.7166666667], [1.5457059E12, 108247.5], [1.54570812E12, 181878.13333333333], [1.54570488E12, 277677.0333333333], [1.54570308E12, 565148.2666666667], [1.54570752E12, 124877.88333333333], [1.54570854E12, 105665.8], [1.5457053E12, 190464.16666666666], [1.54570188E12, 544570.3833333333], [1.54570632E12, 158437.31666666668], [1.54570734E12, 221957.58333333334], [1.5457041E12, 139993.0], [1.54570614E12, 199298.98333333334], [1.54570836E12, 125335.61666666667], [1.5457029E12, 566264.25], [1.54570512E12, 194562.66666666666], [1.54570494E12, 131801.45], [1.54570392E12, 232021.48333333334], [1.54570716E12, 207843.86666666667], [1.54570374E12, 156252.45], [1.54570818E12, 136677.5], [1.54570272E12, 540929.0166666667], [1.54570596E12, 280680.63333333336], [1.54570254E12, 557449.5666666667], [1.54570476E12, 135999.63333333333], [1.54570698E12, 155411.3], [1.545708E12, 220649.8], [1.54570356E12, 288504.25], [1.54570578E12, 171933.0], [1.54570236E12, 345122.63333333336], [1.5457068E12, 269669.68333333335], [1.54570782E12, 170201.0], [1.54570458E12, 308312.4], [1.54570278E12, 563164.3], [1.545705E12, 184873.95], [1.54570722E12, 193683.2], [1.5457038E12, 293160.13333333336], [1.54570602E12, 155909.96666666667], [1.54570824E12, 166785.75], [1.5457026E12, 561074.2], [1.54570704E12, 221428.73333333334], [1.54570482E12, 185092.71666666667], [1.54570806E12, 158988.96666666667], [1.54570686E12, 221900.43333333332], [1.54570362E12, 430517.15], [1.54570584E12, 185170.73333333334], [1.54570566E12, 157175.18333333332], [1.54570242E12, 517733.1], [1.54570464E12, 136329.61666666667], [1.54570788E12, 161258.31666666668], [1.54570446E12, 227756.71666666667], [1.54570668E12, 204954.13333333333], [1.54570344E12, 398860.55], [1.54570326E12, 481603.05], [1.54570548E12, 151491.36666666667], [1.5457077E12, 201910.78333333333], [1.54570224E12, 481122.76666666666], [1.54570206E12, 566384.0833333334], [1.54570428E12, 170658.33333333334], [1.5457065E12, 209278.65], [1.5457047E12, 184929.58333333334], [1.54570692E12, 181517.58333333334], [1.54570368E12, 276879.63333333336], [1.5457035E12, 290518.36666666664], [1.54570572E12, 290176.3333333333], [1.54570794E12, 189816.0], [1.54570248E12, 553989.45], [1.5457023E12, 569664.4666666667], [1.54570452E12, 133890.06666666668], [1.54570674E12, 155565.0], [1.54570332E12, 563853.75], [1.54570776E12, 175347.36666666667], [1.54570554E12, 217133.33333333334], [1.54570212E12, 570277.7166666667], [1.54570656E12, 271948.4166666667], [1.54570758E12, 195916.23333333334], [1.54570434E12, 222762.23333333334], [1.54570638E12, 203052.73333333334], [1.54570314E12, 482196.2], [1.54570536E12, 103797.48333333334], [1.54570518E12, 303796.23333333334], [1.54570194E12, 568866.2333333333], [1.54570416E12, 174671.56666666668], [1.5457074E12, 159348.8], [1.54570398E12, 167386.21666666667], [1.54570842E12, 205706.65], [1.5457062E12, 175215.55], [1.54570296E12, 405620.93333333335]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.54570662E12, 445102.3], [1.54570338E12, 2185428.2333333334], [1.5457056E12, 471337.98333333334], [1.54570542E12, 1093215.1833333333], [1.54570218E12, 2216802.283333333], [1.5457044E12, 333688.5333333333], [1.54570764E12, 727785.1666666666], [1.54570422E12, 1219264.1833333333], [1.54570644E12, 617693.55], [1.5457032E12, 2197242.066666667], [1.54570302E12, 2032810.55], [1.54570524E12, 742638.3166666667], [1.54570746E12, 1065173.6833333333], [1.545702E12, 2258548.0833333335], [1.54570404E12, 724187.5833333334], [1.54570626E12, 1074937.9333333333], [1.54570848E12, 902519.2166666667], [1.54570284E12, 2244697.85], [1.54570728E12, 523437.36666666664], [1.5457083E12, 802498.4833333333], [1.54570506E12, 624601.4833333333], [1.54570608E12, 709346.45], [1.5457071E12, 679200.7], [1.54570386E12, 716520.8], [1.54570266E12, 1930511.8833333333], [1.5457059E12, 428722.73333333334], [1.54570812E12, 720344.4166666666], [1.54570488E12, 1099770.0333333334], [1.54570308E12, 2238313.283333333], [1.54570752E12, 494591.13333333336], [1.54570854E12, 416094.95], [1.5457053E12, 754358.8666666667], [1.54570188E12, 2125466.7333333334], [1.54570632E12, 627503.85], [1.54570734E12, 879084.4333333333], [1.5457041E12, 554455.5833333334], [1.54570614E12, 789340.85], [1.54570836E12, 496400.51666666666], [1.5457029E12, 2238304.7], [1.54570512E12, 770594.4833333333], [1.54570494E12, 522011.45], [1.54570392E12, 918946.7166666667], [1.54570716E12, 823182.2333333333], [1.54570374E12, 618842.9166666666], [1.54570818E12, 541328.8666666667], [1.54570272E12, 2138162.3], [1.54570596E12, 1111666.9333333333], [1.54570254E12, 2203447.933333333], [1.54570476E12, 538648.7666666667], [1.54570698E12, 615502.0166666667], [1.545708E12, 873904.3333333334], [1.54570356E12, 1142656.95], [1.54570578E12, 680975.6], [1.54570236E12, 1364150.5833333333], [1.5457068E12, 1068052.75], [1.54570782E12, 674104.7166666667], [1.54570458E12, 1221098.2166666666], [1.54570278E12, 2226040.8666666667], [1.545705E12, 732213.8666666667], [1.54570722E12, 767101.95], [1.5457038E12, 1161090.9666666666], [1.54570602E12, 617494.4], [1.54570824E12, 660586.4666666667], [1.5457026E12, 2217768.566666667], [1.54570704E12, 876991.8], [1.54570482E12, 733073.9666666667], [1.54570806E12, 629695.9], [1.54570686E12, 878859.4666666667], [1.54570362E12, 1705096.4333333333], [1.54570584E12, 733367.1333333333], [1.54570566E12, 622523.7833333333], [1.54570242E12, 2046473.3333333333], [1.54570464E12, 539958.15], [1.54570788E12, 638669.2833333333], [1.54570446E12, 902054.9833333333], [1.54570668E12, 811745.85], [1.54570344E12, 1579716.6166666667], [1.54570326E12, 1907432.0833333333], [1.54570548E12, 599998.8833333333], [1.5457077E12, 799696.1], [1.54570224E12, 1901754.2333333334], [1.54570206E12, 2238750.1666666665], [1.54570428E12, 675893.6833333333], [1.5457065E12, 828863.2666666667], [1.5457047E12, 732417.2666666667], [1.54570692E12, 718938.15], [1.54570368E12, 1096608.05], [1.5457035E12, 1150631.65], [1.54570572E12, 1149263.6833333333], [1.54570794E12, 751782.9666666667], [1.54570248E12, 2189767.8], [1.5457023E12, 2251737.15], [1.54570452E12, 530284.9], [1.54570674E12, 616129.55], [1.54570332E12, 2233201.216666667], [1.54570776E12, 694480.5166666667], [1.54570554E12, 859975.9], [1.54570212E12, 2254164.1], [1.54570656E12, 1077091.0333333334], [1.54570758E12, 775945.7333333333], [1.54570434E12, 882269.4333333333], [1.54570638E12, 804207.3333333334], [1.54570314E12, 1909778.0], [1.54570536E12, 411088.35], [1.54570518E12, 1203207.2], [1.54570194E12, 2244481.066666667], [1.54570416E12, 691800.4333333333], [1.5457074E12, 631122.7333333333], [1.54570398E12, 662947.1666666666], [1.54570842E12, 814730.8833333333], [1.5457062E12, 693959.2166666667], [1.54570296E12, 1603285.9833333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54570854E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7.811693101197662, "minX": 1.54570188E12, "maxY": 140.90073861923472, "series": [{"data": [[1.54570662E12, 101.26040096472752], [1.54570338E12, 13.379870802421163], [1.5457056E12, 95.2555136596472], [1.54570542E12, 36.39749095147565], [1.54570218E12, 13.184694936685164], [1.5457044E12, 140.90073861923472], [1.54570764E12, 58.957714193563355], [1.54570422E12, 32.42968417000157], [1.54570644E12, 71.17619674534185], [1.5457032E12, 13.4018442708951], [1.54570302E12, 14.948580859716401], [1.54570524E12, 57.94406754788921], [1.54570746E12, 37.67860628384391], [1.545702E12, 12.41377879689282], [1.54570404E12, 58.96600104184761], [1.54570626E12, 37.27037943887358], [1.54570848E12, 45.67377006539791], [1.54570284E12, 12.741936686260251], [1.54570728E12, 84.50697503083119], [1.5457083E12, 53.063619266533955], [1.54570506E12, 69.27499932887717], [1.54570608E12, 60.18938946273687], [1.5457071E12, 63.536877962085555], [1.54570386E12, 59.69791630105377], [1.54570266E12, 15.602369115677398], [1.5457059E12, 103.171516289256], [1.54570812E12, 59.79539582411959], [1.54570488E12, 35.78482460018633], [1.54570308E12, 12.89323784767761], [1.54570752E12, 89.52434869569666], [1.54570854E12, 52.08423595731818], [1.5457053E12, 56.48673215396934], [1.54570188E12, 12.163086286443317], [1.54570632E12, 70.00818960334544], [1.54570734E12, 47.44707755981702], [1.5457041E12, 79.85655750098205], [1.54570614E12, 55.039561583312626], [1.54570836E12, 89.96321505176546], [1.5457029E12, 12.687784767308314], [1.54570512E12, 56.34814532796679], [1.54570494E12, 85.42551995503099], [1.54570392E12, 44.38063656847836], [1.54570716E12, 51.714588340733755], [1.54570374E12, 71.78459266485088], [1.54570818E12, 83.28825606243699], [1.54570272E12, 14.446245162905745], [1.54570596E12, 36.464821126930005], [1.54570254E12, 13.229045951959906], [1.54570476E12, 83.12003983691702], [1.54570698E12, 70.68221204937417], [1.545708E12, 47.936600667663896], [1.54570356E12, 34.97221794279262], [1.54570578E12, 62.99870772411697], [1.54570236E12, 23.676055992442528], [1.5457068E12, 37.465734715823274], [1.54570782E12, 64.14112512123971], [1.54570458E12, 31.408661503817616], [1.54570278E12, 12.795218443682893], [1.545705E12, 58.97995305970575], [1.54570722E12, 55.44047384870997], [1.5457038E12, 34.599299638989066], [1.54570602E12, 70.7687158877999], [1.54570824E12, 66.38360422772845], [1.5457026E12, 12.886484528848728], [1.54570704E12, 47.68180514663702], [1.54570482E12, 59.32538112284045], [1.54570806E12, 70.02488085412287], [1.54570686E12, 47.27663735047741], [1.54570362E12, 20.778248150059856], [1.54570584E12, 58.62998239154735], [1.54570566E12, 69.65239050529898], [1.54570242E12, 17.035226064916657], [1.54570464E12, 83.37031805411134], [1.54570788E12, 68.59934883354516], [1.54570446E12, 46.15037405325016], [1.54570668E12, 52.50654755757562], [1.54570344E12, 23.410514416723583], [1.54570326E12, 16.37952085228721], [1.54570548E12, 72.56865813446589], [1.5457077E12, 52.85089990461103], [1.54570224E12, 16.436053212736667], [1.54570206E12, 12.802308937133741], [1.54570428E12, 63.963278167878954], [1.5457065E12, 50.99191827239154], [1.5457047E12, 58.35632433917581], [1.54570692E12, 60.31917324349192], [1.54570368E12, 35.64857653966114], [1.5457035E12, 34.85426198455546], [1.54570572E12, 34.383577233399656], [1.54570794E12, 56.84224318658276], [1.54570248E12, 13.554489567453292], [1.5457023E12, 12.869583794669015], [1.54570452E12, 84.66292525610166], [1.54570674E12, 71.66057093096005], [1.54570332E12, 12.99654642987188], [1.54570776E12, 62.01711733462036], [1.54570554E12, 48.30176061143741], [1.54570212E12, 12.86575711576374], [1.54570656E12, 37.00853716429112], [1.54570758E12, 54.92805592169216], [1.54570434E12, 45.55115828281509], [1.54570638E12, 52.564109246325685], [1.54570314E12, 16.163751854681024], [1.54570536E12, 110.9829678735337], [1.54570518E12, 32.675011845369724], [1.54570194E12, 12.384314279973363], [1.54570416E12, 62.96951116066062], [1.5457074E12, 70.923201572627], [1.54570398E12, 65.3684350300357], [1.54570842E12, 51.5335246972641], [1.5457062E12, 62.163894224380684], [1.54570296E12, 20.835302652317843]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[1.54570662E12, 9.96339168078305], [1.54570338E12, 9.078954030748626], [1.5457056E12, 10.97447663767498], [1.54570542E12, 9.039471161588867], [1.54570218E12, 8.908556052864043], [1.5457044E12, 12.573711184805537], [1.54570764E12, 9.251768147994625], [1.54570422E12, 8.277778159836622], [1.54570644E12, 9.430325977797661], [1.5457032E12, 8.918815485229855], [1.54570302E12, 9.213067445010095], [1.54570524E12, 9.24946658990074], [1.54570746E12, 8.527249832762656], [1.545702E12, 9.252934878844986], [1.54570404E12, 9.573120333391188], [1.54570626E12, 8.822069331336424], [1.54570848E12, 9.14172540934116], [1.54570284E12, 9.053878579388247], [1.54570728E12, 11.020739910313898], [1.5457083E12, 8.779482412900041], [1.54570506E12, 9.592347541335576], [1.54570608E12, 8.967251669325625], [1.5457071E12, 9.440575237625012], [1.54570386E12, 9.663339807642824], [1.54570266E12, 9.41758170331148], [1.5457059E12, 12.959780228374921], [1.54570812E12, 8.561065015768191], [1.54570488E12, 9.28813288003292], [1.54570308E12, 9.003149612197358], [1.54570752E12, 11.525933082477382], [1.54570854E12, 8.952204326002391], [1.5457053E12, 9.463516021829232], [1.54570188E12, 9.076756926581204], [1.54570632E12, 9.366954337777512], [1.54570734E12, 8.554800072475311], [1.5457041E12, 10.272849604620575], [1.54570614E12, 8.831122486910175], [1.54570836E12, 10.824620060790329], [1.5457029E12, 9.170711465996844], [1.54570512E12, 8.980925956150392], [1.54570494E12, 9.951375395436381], [1.54570392E12, 9.429775665295221], [1.54570716E12, 8.879472923158376], [1.54570374E12, 8.641836527392186], [1.54570818E12, 10.231491233504768], [1.54570272E12, 8.821715649826167], [1.54570596E12, 8.20389740650516], [1.54570254E12, 8.998898854048717], [1.54570476E12, 10.228634141785337], [1.54570698E12, 10.12784524068837], [1.545708E12, 9.004710103219386], [1.54570356E12, 8.366606010800684], [1.54570578E12, 9.966537760480943], [1.54570236E12, 9.16337192190718], [1.5457068E12, 8.784573361694704], [1.54570782E12, 9.688167763280603], [1.54570458E12, 8.572200406414831], [1.54570278E12, 9.165955671486394], [1.545705E12, 9.026941308479659], [1.54570722E12, 9.238664058316163], [1.5457038E12, 8.097623139016159], [1.54570602E12, 9.812065595134666], [1.54570824E12, 9.04892477213292], [1.5457026E12, 9.180299915118429], [1.54570704E12, 9.07762015829921], [1.54570482E12, 8.541153063324792], [1.54570806E12, 9.022488216653773], [1.54570686E12, 9.10380976000613], [1.54570362E12, 8.102912401797331], [1.54570584E12, 9.310860995258109], [1.54570566E12, 10.444357630703324], [1.54570242E12, 9.156675621195156], [1.54570464E12, 10.18050227530402], [1.54570788E12, 9.301125925148247], [1.54570446E12, 8.931559430095684], [1.54570668E12, 8.90528468299149], [1.54570344E12, 7.811693101197662], [1.54570326E12, 9.398358011506218], [1.54570548E12, 10.341740138886921], [1.5457077E12, 9.483308869784143], [1.54570224E12, 9.365807836822361], [1.54570206E12, 9.05156538441388], [1.54570428E12, 9.658735570902405], [1.5457065E12, 8.987965332065803], [1.5457047E12, 9.030392841204211], [1.54570692E12, 9.205825741049656], [1.54570368E12, 9.51293851434518], [1.5457035E12, 8.158558177830427], [1.54570572E12, 8.657520658746066], [1.54570794E12, 9.160039251544243], [1.54570248E12, 8.792755755086432], [1.5457023E12, 8.837734797391299], [1.54570452E12, 9.629098555032083], [1.54570674E12, 9.671741703743164], [1.54570332E12, 8.98648562408274], [1.54570776E12, 9.70441678838282], [1.54570554E12, 9.286365984657202], [1.54570212E12, 8.86585153097769], [1.54570656E12, 8.957378401943023], [1.54570758E12, 9.461581676750177], [1.54570434E12, 9.094534501434866], [1.54570638E12, 9.270371412786426], [1.54570314E12, 9.58630316172054], [1.54570536E12, 10.207375244618273], [1.54570518E12, 8.321006834379476], [1.54570194E12, 9.343182342478908], [1.54570416E12, 8.756513414604608], [1.5457074E12, 8.710159944736684], [1.54570398E12, 9.72774286545194], [1.54570842E12, 9.438101413031045], [1.5457062E12, 9.60644607931953], [1.54570296E12, 9.819906400162994]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54570854E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.54570188E12, "maxY": 140.90056275751152, "series": [{"data": [[1.54570662E12, 101.26021254145337], [1.54570338E12, 13.379671328724905], [1.5457056E12, 95.25540694365401], [1.54570542E12, 36.39725323599784], [1.54570218E12, 13.184536413217888], [1.5457044E12, 140.90056275751152], [1.54570764E12, 58.95749533485377], [1.54570422E12, 32.42942292620647], [1.54570644E12, 71.17592529757479], [1.5457032E12, 13.401680217009115], [1.54570302E12, 14.948412110436422], [1.54570524E12, 57.943920802807995], [1.54570746E12, 37.678393779120725], [1.545702E12, 12.413645439357762], [1.54570404E12, 58.965676911500616], [1.54570626E12, 37.27026247251328], [1.54570848E12, 45.67353782699162], [1.54570284E12, 12.741768952934299], [1.54570728E12, 84.5066707240892], [1.5457083E12, 53.06346254309937], [1.54570506E12, 69.27478456954105], [1.54570608E12, 60.189105821731616], [1.5457071E12, 63.53665580568634], [1.54570386E12, 59.69776420624028], [1.54570266E12, 15.602195744607167], [1.5457059E12, 103.17122296530937], [1.54570812E12, 59.79518633178982], [1.54570488E12, 35.78464165383559], [1.54570308E12, 12.893061808484175], [1.54570752E12, 89.52411139549484], [1.54570854E12, 52.08031004630596], [1.5457053E12, 56.48655436038734], [1.54570188E12, 12.162878178070168], [1.54570632E12, 70.00798920522062], [1.54570734E12, 47.446801003233105], [1.5457041E12, 79.85625510296785], [1.54570614E12, 55.039349172127054], [1.54570836E12, 89.96299549055006], [1.5457029E12, 12.687624045480513], [1.54570512E12, 56.34789513760494], [1.54570494E12, 85.42526298883826], [1.54570392E12, 44.380435873342975], [1.54570716E12, 51.71432354259089], [1.54570374E12, 71.78437588911902], [1.54570818E12, 83.28800830003951], [1.54570272E12, 14.446041701717913], [1.54570596E12, 36.464655224421186], [1.54570254E12, 13.228878881539469], [1.54570476E12, 83.11985310136647], [1.54570698E12, 70.68204855718096], [1.545708E12, 47.93640881009884], [1.54570356E12, 34.97203453866518], [1.54570578E12, 62.99844926894125], [1.54570236E12, 23.675896504766314], [1.5457068E12, 37.46546784612593], [1.54570782E12, 64.14093859583754], [1.54570458E12, 31.40849673202639], [1.54570278E12, 12.795007968007734], [1.545705E12, 58.97978132692191], [1.54570722E12, 55.44017878609052], [1.5457038E12, 34.59918411552343], [1.54570602E12, 70.7685529638577], [1.54570824E12, 66.38321089160394], [1.5457026E12, 12.886326082528015], [1.54570704E12, 47.681527931786086], [1.54570482E12, 59.32506089959858], [1.54570806E12, 70.02473441784912], [1.54570686E12, 47.27644657267654], [1.54570362E12, 20.778100646557153], [1.54570584E12, 58.62982231471084], [1.54570566E12, 69.65220201149732], [1.54570242E12, 17.035070721935757], [1.54570464E12, 83.37008521801292], [1.54570788E12, 68.5990600097148], [1.54570446E12, 46.150151015287285], [1.54570668E12, 52.50632035526239], [1.54570344E12, 23.410275597446088], [1.54570326E12, 16.379314285212132], [1.54570548E12, 72.56847649918956], [1.5457077E12, 52.850753152548975], [1.54570224E12, 16.435877244692577], [1.54570206E12, 12.802166917692137], [1.54570428E12, 63.96315410763468], [1.5457065E12, 50.99175643554365], [1.5457047E12, 58.35609538310072], [1.54570692E12, 60.31902169478189], [1.54570368E12, 35.64840070943679], [1.5457035E12, 34.85409441935046], [1.54570572E12, 34.38338026524969], [1.54570794E12, 56.8420536152371], [1.54570248E12, 13.554317633888264], [1.5457023E12, 12.869416599169046], [1.54570452E12, 84.66273555077694], [1.54570674E12, 71.66027158679734], [1.54570332E12, 12.996369997485269], [1.54570776E12, 62.01690004828709], [1.54570554E12, 48.30152664314006], [1.54570212E12, 12.865582677954423], [1.54570656E12, 37.008319260372076], [1.54570758E12, 54.92782903692809], [1.54570434E12, 45.55093023697826], [1.54570638E12, 52.56399457938069], [1.54570314E12, 16.1636069920369], [1.54570536E12, 110.98280469148247], [1.54570518E12, 32.67476100225793], [1.54570194E12, 12.384072423107792], [1.54570416E12, 62.969293037008], [1.5457074E12, 70.92306874933706], [1.54570398E12, 65.36825798292739], [1.54570842E12, 51.53333950636265], [1.5457062E12, 62.1636284564926], [1.54570296E12, 20.835135642933988]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[1.54570662E12, 0.0], [1.54570338E12, 0.0], [1.5457056E12, 0.0], [1.54570542E12, 0.0], [1.54570218E12, 0.0], [1.5457044E12, 0.0], [1.54570764E12, 0.0], [1.54570422E12, 0.0], [1.54570644E12, 0.0], [1.5457032E12, 0.0], [1.54570302E12, 0.0], [1.54570524E12, 0.0], [1.54570746E12, 0.0], [1.545702E12, 0.0], [1.54570404E12, 0.0], [1.54570626E12, 0.0], [1.54570848E12, 0.0], [1.54570284E12, 0.0], [1.54570728E12, 0.0], [1.5457083E12, 0.0], [1.54570506E12, 0.0], [1.54570608E12, 0.0], [1.5457071E12, 0.0], [1.54570386E12, 0.0], [1.54570266E12, 0.0], [1.5457059E12, 0.0], [1.54570812E12, 0.0], [1.54570488E12, 0.0], [1.54570308E12, 0.0], [1.54570752E12, 0.0], [1.54570854E12, 0.0], [1.5457053E12, 0.0], [1.54570188E12, 0.023296090482455702], [1.54570632E12, 0.0], [1.54570734E12, 0.0], [1.5457041E12, 0.0], [1.54570614E12, 0.0], [1.54570836E12, 0.0], [1.5457029E12, 0.0], [1.54570512E12, 0.0], [1.54570494E12, 0.0], [1.54570392E12, 0.0], [1.54570716E12, 0.0], [1.54570374E12, 0.0], [1.54570818E12, 0.0], [1.54570272E12, 0.0], [1.54570596E12, 0.0], [1.54570254E12, 0.0], [1.54570476E12, 0.0], [1.54570698E12, 0.0], [1.545708E12, 0.0], [1.54570356E12, 0.0], [1.54570578E12, 0.0], [1.54570236E12, 0.0], [1.5457068E12, 0.0], [1.54570782E12, 0.0], [1.54570458E12, 0.0], [1.54570278E12, 0.0], [1.545705E12, 0.0], [1.54570722E12, 0.0], [1.5457038E12, 0.0], [1.54570602E12, 0.0], [1.54570824E12, 0.0], [1.5457026E12, 0.0], [1.54570704E12, 0.0], [1.54570482E12, 0.0], [1.54570806E12, 0.0], [1.54570686E12, 0.0], [1.54570362E12, 0.0], [1.54570584E12, 0.0], [1.54570566E12, 0.0], [1.54570242E12, 0.0], [1.54570464E12, 0.0], [1.54570788E12, 0.0], [1.54570446E12, 0.0], [1.54570668E12, 0.0], [1.54570344E12, 0.0], [1.54570326E12, 0.0], [1.54570548E12, 0.0], [1.5457077E12, 0.0], [1.54570224E12, 0.0], [1.54570206E12, 0.0], [1.54570428E12, 0.0], [1.5457065E12, 0.0], [1.5457047E12, 0.0], [1.54570692E12, 0.0], [1.54570368E12, 0.0], [1.5457035E12, 0.0], [1.54570572E12, 0.0], [1.54570794E12, 0.0], [1.54570248E12, 0.0], [1.5457023E12, 0.0], [1.54570452E12, 0.0], [1.54570674E12, 0.0], [1.54570332E12, 0.0], [1.54570776E12, 0.0], [1.54570554E12, 0.0], [1.54570212E12, 0.0], [1.54570656E12, 0.0], [1.54570758E12, 0.0], [1.54570434E12, 0.0], [1.54570638E12, 0.0], [1.54570314E12, 0.0], [1.54570536E12, 0.0], [1.54570518E12, 0.0], [1.54570194E12, 0.0], [1.54570416E12, 0.0], [1.5457074E12, 0.0], [1.54570398E12, 0.0], [1.54570842E12, 0.0], [1.5457062E12, 0.0], [1.54570296E12, 0.0]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54570854E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.54570188E12, "maxY": 0.15958195156265775, "series": [{"data": [[1.54570662E12, 0.12313460958697658], [1.54570338E12, 0.0989005930506434], [1.5457056E12, 0.12736553784860652], [1.54570542E12, 0.11592080240476106], [1.54570218E12, 0.09571797920323201], [1.5457044E12, 0.15958195156265775], [1.54570764E12, 0.1210979795885456], [1.54570422E12, 0.11419791279957117], [1.54570644E12, 0.12573460551853488], [1.5457032E12, 0.09788294182954355], [1.54570302E12, 0.09946329497374358], [1.54570524E12, 0.11890866811906796], [1.54570746E12, 0.11316269991185043], [1.545702E12, 0.09681757059614389], [1.54570404E12, 0.13027724720726888], [1.54570626E12, 0.11662325915066701], [1.54570848E12, 0.12204592746730178], [1.54570284E12, 0.09638702414987055], [1.54570728E12, 0.13597706488140096], [1.5457083E12, 0.10951833664193908], [1.54570506E12, 0.13100319454511208], [1.54570608E12, 0.126492069870234], [1.5457071E12, 0.1220502567140599], [1.54570386E12, 0.11824786774770837], [1.54570266E12, 0.10151743029399593], [1.5457059E12, 0.14975165239156984], [1.54570812E12, 0.11189218128069624], [1.54570488E12, 0.12847407497751084], [1.54570308E12, 0.09547691639261977], [1.54570752E12, 0.13273556282522778], [1.54570854E12, 0.11765653311858214], [1.5457053E12, 0.11535469819539519], [1.54570188E12, 0.09538431334053185], [1.54570632E12, 0.1274665669129316], [1.54570734E12, 0.11628727553618609], [1.5457041E12, 0.13515679337143494], [1.54570614E12, 0.11953439468122425], [1.54570836E12, 0.13095982029758998], [1.5457029E12, 0.0964330967358518], [1.54570512E12, 0.11482649842271273], [1.54570494E12, 0.1334939372038879], [1.54570392E12, 0.12739579817367588], [1.54570716E12, 0.1155945736749932], [1.54570374E12, 0.10781882968201746], [1.54570818E12, 0.12078416798290571], [1.54570272E12, 0.09688665255480947], [1.54570596E12, 0.11202944015444101], [1.54570254E12, 0.09698817597071537], [1.54570476E12, 0.13152407332482582], [1.54570698E12, 0.12139295348646915], [1.545708E12, 0.12181036798280932], [1.54570356E12, 0.11222865359361975], [1.54570578E12, 0.1250430758627484], [1.54570236E12, 0.10024413882788914], [1.5457068E12, 0.1180505953548975], [1.54570782E12, 0.13094083414161287], [1.54570458E12, 0.11599247542154088], [1.54570278E12, 0.09885215587227113], [1.545705E12, 0.11894212605186379], [1.54570722E12, 0.12218870893711968], [1.5457038E12, 0.11351624548736516], [1.54570602E12, 0.12052298585277148], [1.54570824E12, 0.11636405161584994], [1.5457026E12, 0.09834234968348435], [1.54570704E12, 0.12363782357664667], [1.54570482E12, 0.11483434165532487], [1.54570806E12, 0.11981149657871525], [1.54570686E12, 0.11705171986187661], [1.54570362E12, 0.10275585711827369], [1.54570584E12, 0.12311052162180702], [1.54570566E12, 0.1347730669287626], [1.54570242E12, 0.09785790205216198], [1.54570464E12, 0.12070223367430943], [1.54570788E12, 0.125310157408989], [1.54570446E12, 0.11601691371218856], [1.54570668E12, 0.11905401218630533], [1.54570344E12, 0.10190153215834252], [1.54570326E12, 0.10063772090590466], [1.54570548E12, 0.13094506231487166], [1.5457077E12, 0.12099707544104206], [1.54570224E12, 0.09892043604881144], [1.54570206E12, 0.0959341328778742], [1.54570428E12, 0.1159218916705945], [1.5457065E12, 0.11489404743842528], [1.5457047E12, 0.10869689650040541], [1.54570692E12, 0.12824518249961878], [1.54570368E12, 0.11644547734083759], [1.5457035E12, 0.1080941279323914], [1.54570572E12, 0.11434365835509581], [1.54570794E12, 0.11455684910120842], [1.54570248E12, 0.09618727768035037], [1.5457023E12, 0.09533858946445554], [1.54570452E12, 0.12590110029088222], [1.54570674E12, 0.12946635099463769], [1.54570332E12, 0.09593417195025188], [1.54570776E12, 0.11976098503138641], [1.54570554E12, 0.1195870459552731], [1.54570212E12, 0.09444508363736107], [1.54570656E12, 0.11959034063051982], [1.54570758E12, 0.1276388858877677], [1.54570434E12, 0.12672697212139816], [1.54570638E12, 0.11886792452830187], [1.54570314E12, 0.0987655946831017], [1.54570536E12, 0.13670576236614104], [1.54570518E12, 0.11233590679784701], [1.54570194E12, 0.09693623164678483], [1.54570416E12, 0.11558129953224686], [1.5457074E12, 0.1193417277653812], [1.54570398E12, 0.12419854568447605], [1.54570842E12, 0.12794633579225745], [1.5457062E12, 0.1257565324538846], [1.54570296E12, 0.10302913269939358]], "isOverall": false, "label": "SkinPrice Creation", "isController": false}, {"data": [[1.54570662E12, 0.0019009975531714641], [1.54570338E12, 0.0], [1.5457056E12, 2.3122209771801603E-4], [1.54570542E12, 0.0], [1.54570218E12, 0.0], [1.5457044E12, 7.285699929655401E-4], [1.54570764E12, 1.7278319165111647E-4], [1.54570422E12, 0.0], [1.54570644E12, 0.0], [1.5457032E12, 0.0], [1.54570302E12, 0.0], [1.54570524E12, 2.3707115521387172E-4], [1.54570746E12, 1.5739975603037845E-4], [1.545702E12, 0.0], [1.54570404E12, 0.0], [1.54570626E12, 0.0], [1.54570848E12, 0.0], [1.54570284E12, 0.0], [1.54570728E12, 3.203074951953882E-5], [1.5457083E12, 3.2375302865736384E-4], [1.54570506E12, 0.0], [1.54570608E12, 0.0], [1.5457071E12, 0.0], [1.54570386E12, 4.5632181218261856E-4], [1.54570266E12, 0.0], [1.5457059E12, 1.1731581417175012E-4], [1.54570812E12, 8.72772974293932E-4], [1.54570488E12, 0.0], [1.54570308E12, 0.0], [1.54570752E12, 0.0014068273500796597], [1.54570854E12, 0.0], [1.5457053E12, 1.6672038768047646E-4], [1.54570188E12, 0.0], [1.54570632E12, 0.0], [1.54570734E12, 2.097975453687198E-4], [1.5457041E12, 6.047868882202635E-5], [1.54570614E12, 6.690952345550576E-4], [1.54570836E12, 5.0658561296858996E-5], [1.5457029E12, 0.0], [1.54570512E12, 2.5025841901964006E-4], [1.54570494E12, 1.6058323832158413E-5], [1.54570392E12, 0.0], [1.54570716E12, 0.0], [1.54570374E12, 1.625245479786002E-4], [1.54570818E12, 0.0011616380645561018], [1.54570272E12, 0.0], [1.54570596E12, 0.0], [1.54570254E12, 0.0], [1.54570476E12, 3.1134219620785205E-5], [1.54570698E12, 1.2252232629056885E-4], [1.545708E12, 0.0], [1.54570356E12, 0.0], [1.54570578E12, 0.0], [1.54570236E12, 1.8394976944962506E-5], [1.5457068E12, 0.0], [1.54570782E12, 1.368176221097293E-4], [1.54570458E12, 0.0], [1.54570278E12, 0.0], [1.545705E12, 1.6029677803476185E-4], [1.54570722E12, 0.0], [1.5457038E12, 4.332067406968906E-5], [1.54570602E12, 1.357515204170289E-5], [1.54570824E12, 3.9353086043617745E-4], [1.5457026E12, 0.0], [1.54570704E12, 1.9118265590945594E-5], [1.54570482E12, 6.860749651245252E-5], [1.54570806E12, 5.3258061939125985E-5], [1.54570686E12, 0.0], [1.54570362E12, 0.0], [1.54570584E12, 2.0567902645260837E-4], [1.54570566E12, 0.0], [1.54570242E12, 6.133238472578498E-5], [1.54570464E12, 6.678366751052367E-4], [1.54570788E12, 4.724161461340537E-4], [1.54570446E12, 0.0], [1.54570668E12, 0.0], [1.54570344E12, 1.6980361151056395E-4], [1.54570326E12, 0.0], [1.54570548E12, 0.0], [1.5457077E12, 0.0], [1.54570224E12, 0.0], [1.54570206E12, 0.0], [1.54570428E12, 7.439276902285125E-5], [1.5457065E12, 0.0], [1.5457047E12, 0.0], [1.54570692E12, 0.0], [1.54570368E12, 0.0], [1.5457035E12, 0.0], [1.54570572E12, 0.0], [1.54570794E12, 0.0], [1.54570248E12, 0.0], [1.5457023E12, 0.0], [1.54570452E12, 0.0], [1.54570674E12, 0.0], [1.54570332E12, 0.0], [1.54570776E12, 1.6899436283089665E-4], [1.54570554E12, 0.0], [1.54570212E12, 0.0], [1.54570656E12, 0.0], [1.54570758E12, 0.0], [1.54570434E12, 0.0], [1.54570638E12, 1.4593822643358312E-4], [1.54570314E12, 1.2729403605493954E-4], [1.54570536E12, 0.0], [1.54570518E12, 0.0], [1.54570194E12, 0.0], [1.54570416E12, 4.968372070478148E-4], [1.5457074E12, 5.313778627982342E-4], [1.54570398E12, 0.001997799891258999], [1.54570842E12, 0.0], [1.5457062E12, 0.0], [1.54570296E12, 3.1304293383837756E-5]], "isOverall": false, "label": "SkinPrice Find By ID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54570854E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.54570188E12, "maxY": 6110.0, "series": [{"data": [[1.54570662E12, 3864.0], [1.54570338E12, 366.0], [1.5457056E12, 2902.0], [1.54570542E12, 1327.0], [1.54570218E12, 553.0], [1.5457044E12, 2430.0], [1.54570764E12, 2968.0], [1.54570422E12, 840.0], [1.54570644E12, 1916.0], [1.5457032E12, 368.0], [1.54570302E12, 516.0], [1.54570524E12, 2791.0], [1.54570746E12, 2724.0], [1.545702E12, 405.0], [1.54570404E12, 1545.0], [1.54570626E12, 968.0], [1.54570848E12, 1467.0], [1.54570284E12, 363.0], [1.54570728E12, 2319.0], [1.5457083E12, 3195.0], [1.54570506E12, 2031.0], [1.54570608E12, 1695.0], [1.5457071E12, 1466.0], [1.54570386E12, 3004.0], [1.54570266E12, 1290.0], [1.5457059E12, 2126.0], [1.54570812E12, 3746.0], [1.54570488E12, 1025.0], [1.54570308E12, 382.0], [1.54570752E12, 2876.0], [1.54570854E12, 992.0], [1.5457053E12, 2504.0], [1.54570188E12, 372.0], [1.54570632E12, 1439.0], [1.54570734E12, 2697.0], [1.5457041E12, 2169.0], [1.54570614E12, 2726.0], [1.54570836E12, 2067.0], [1.5457029E12, 407.0], [1.54570512E12, 2645.0], [1.54570494E12, 2163.0], [1.54570392E12, 998.0], [1.54570716E12, 1881.0], [1.54570374E12, 3005.0], [1.54570818E12, 4468.0], [1.54570272E12, 1826.0], [1.54570596E12, 1234.0], [1.54570254E12, 411.0], [1.54570476E12, 2083.0], [1.54570698E12, 2601.0], [1.545708E12, 1567.0], [1.54570356E12, 1620.0], [1.54570578E12, 1699.0], [1.54570236E12, 2046.0], [1.5457068E12, 1253.0], [1.54570782E12, 2406.0], [1.54570458E12, 1213.0], [1.54570278E12, 356.0], [1.545705E12, 2292.0], [1.54570722E12, 1835.0], [1.5457038E12, 2025.0], [1.54570602E12, 2441.0], [1.54570824E12, 3715.0], [1.5457026E12, 217.0], [1.54570704E12, 2221.0], [1.54570482E12, 2335.0], [1.54570806E12, 2154.0], [1.54570686E12, 1074.0], [1.54570362E12, 658.0], [1.54570584E12, 2992.0], [1.54570566E12, 1661.0], [1.54570242E12, 6110.0], [1.54570464E12, 3463.0], [1.54570788E12, 2770.0], [1.54570446E12, 1505.0], [1.54570668E12, 1490.0], [1.54570344E12, 2433.0], [1.54570326E12, 718.0], [1.54570548E12, 1994.0], [1.5457077E12, 1382.0], [1.54570224E12, 636.0], [1.54570206E12, 182.0], [1.54570428E12, 2135.0], [1.5457065E12, 1904.0], [1.5457047E12, 1912.0], [1.54570692E12, 1951.0], [1.54570368E12, 1652.0], [1.5457035E12, 1101.0], [1.54570572E12, 568.0], [1.54570794E12, 1715.0], [1.54570248E12, 418.0], [1.5457023E12, 448.0], [1.54570452E12, 1901.0], [1.54570674E12, 1755.0], [1.54570332E12, 431.0], [1.54570776E12, 2346.0], [1.54570554E12, 1464.0], [1.54570212E12, 380.0], [1.54570656E12, 503.0], [1.54570758E12, 1531.0], [1.54570434E12, 1152.0], [1.54570638E12, 2487.0], [1.54570314E12, 2483.0], [1.54570536E12, 1832.0], [1.54570518E12, 497.0], [1.54570194E12, 157.0], [1.54570416E12, 3195.0], [1.5457074E12, 2560.0], [1.54570398E12, 2488.0], [1.54570842E12, 1482.0], [1.5457062E12, 1983.0], [1.54570296E12, 2358.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.54570662E12, 0.0], [1.54570338E12, 0.0], [1.5457056E12, 0.0], [1.54570542E12, 0.0], [1.54570218E12, 0.0], [1.5457044E12, 0.0], [1.54570764E12, 0.0], [1.54570422E12, 0.0], [1.54570644E12, 0.0], [1.5457032E12, 0.0], [1.54570302E12, 0.0], [1.54570524E12, 0.0], [1.54570746E12, 0.0], [1.545702E12, 0.0], [1.54570404E12, 0.0], [1.54570626E12, 0.0], [1.54570848E12, 0.0], [1.54570284E12, 0.0], [1.54570728E12, 0.0], [1.5457083E12, 0.0], [1.54570506E12, 0.0], [1.54570608E12, 0.0], [1.5457071E12, 0.0], [1.54570386E12, 0.0], [1.54570266E12, 0.0], [1.5457059E12, 0.0], [1.54570812E12, 0.0], [1.54570488E12, 0.0], [1.54570308E12, 0.0], [1.54570752E12, 0.0], [1.54570854E12, 0.0], [1.5457053E12, 0.0], [1.54570188E12, 0.0], [1.54570632E12, 0.0], [1.54570734E12, 0.0], [1.5457041E12, 0.0], [1.54570614E12, 0.0], [1.54570836E12, 0.0], [1.5457029E12, 0.0], [1.54570512E12, 0.0], [1.54570494E12, 0.0], [1.54570392E12, 0.0], [1.54570716E12, 0.0], [1.54570374E12, 0.0], [1.54570818E12, 0.0], [1.54570272E12, 0.0], [1.54570596E12, 0.0], [1.54570254E12, 0.0], [1.54570476E12, 0.0], [1.54570698E12, 0.0], [1.545708E12, 0.0], [1.54570356E12, 0.0], [1.54570578E12, 0.0], [1.54570236E12, 0.0], [1.5457068E12, 0.0], [1.54570782E12, 0.0], [1.54570458E12, 0.0], [1.54570278E12, 0.0], [1.545705E12, 0.0], [1.54570722E12, 0.0], [1.5457038E12, 0.0], [1.54570602E12, 0.0], [1.54570824E12, 0.0], [1.5457026E12, 0.0], [1.54570704E12, 0.0], [1.54570482E12, 0.0], [1.54570806E12, 0.0], [1.54570686E12, 0.0], [1.54570362E12, 0.0], [1.54570584E12, 0.0], [1.54570566E12, 0.0], [1.54570242E12, 0.0], [1.54570464E12, 0.0], [1.54570788E12, 0.0], [1.54570446E12, 0.0], [1.54570668E12, 0.0], [1.54570344E12, 0.0], [1.54570326E12, 0.0], [1.54570548E12, 0.0], [1.5457077E12, 0.0], [1.54570224E12, 0.0], [1.54570206E12, 0.0], [1.54570428E12, 0.0], [1.5457065E12, 0.0], [1.5457047E12, 0.0], [1.54570692E12, 0.0], [1.54570368E12, 0.0], [1.5457035E12, 0.0], [1.54570572E12, 0.0], [1.54570794E12, 0.0], [1.54570248E12, 0.0], [1.5457023E12, 0.0], [1.54570452E12, 0.0], [1.54570674E12, 0.0], [1.54570332E12, 0.0], [1.54570776E12, 0.0], [1.54570554E12, 0.0], [1.54570212E12, 0.0], [1.54570656E12, 0.0], [1.54570758E12, 0.0], [1.54570434E12, 0.0], [1.54570638E12, 0.0], [1.54570314E12, 0.0], [1.54570536E12, 0.0], [1.54570518E12, 0.0], [1.54570194E12, 0.0], [1.54570416E12, 0.0], [1.5457074E12, 0.0], [1.54570398E12, 0.0], [1.54570842E12, 0.0], [1.5457062E12, 0.0], [1.54570296E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.54570662E12, 215.90000000000146], [1.54570338E12, 24.0], [1.5457056E12, 525.0], [1.54570542E12, 21.0], [1.54570218E12, 16.0], [1.5457044E12, 338.0], [1.54570764E12, 75.0], [1.54570422E12, 30.0], [1.54570644E12, 66.0], [1.5457032E12, 20.0], [1.54570302E12, 18.0], [1.54570524E12, 61.0], [1.54570746E12, 40.0], [1.545702E12, 18.0], [1.54570404E12, 396.0], [1.54570626E12, 54.0], [1.54570848E12, 288.0], [1.54570284E12, 21.0], [1.54570728E12, 60.0], [1.5457083E12, 401.90000000000146], [1.54570506E12, 49.0], [1.54570608E12, 321.90000000000146], [1.5457071E12, 329.0], [1.54570386E12, 81.0], [1.54570266E12, 150.0], [1.5457059E12, 258.0], [1.54570812E12, 58.0], [1.54570488E12, 61.0], [1.54570308E12, 18.0], [1.54570752E12, 344.90000000000146], [1.54570854E12, 45.0], [1.5457053E12, 49.0], [1.54570188E12, 17.0], [1.54570632E12, 20.0], [1.54570734E12, 305.0], [1.5457041E12, 36.0], [1.54570614E12, 302.0], [1.54570836E12, 405.0], [1.5457029E12, 20.0], [1.54570512E12, 51.0], [1.54570494E12, 77.0], [1.54570392E12, 119.0], [1.54570716E12, 65.0], [1.54570374E12, 588.9000000000015], [1.54570818E12, 52.0], [1.54570272E12, 17.0], [1.54570596E12, 55.0], [1.54570254E12, 20.0], [1.54570476E12, 52.0], [1.54570698E12, 47.0], [1.545708E12, 192.0], [1.54570356E12, 54.0], [1.54570578E12, 78.0], [1.54570236E12, 18.0], [1.5457068E12, 119.0], [1.54570782E12, 64.0], [1.54570458E12, 63.0], [1.54570278E12, 20.0], [1.545705E12, 509.90000000000146], [1.54570722E12, 306.0], [1.5457038E12, 44.0], [1.54570602E12, 433.0], [1.54570824E12, 66.0], [1.5457026E12, 20.0], [1.54570704E12, 49.0], [1.54570482E12, 28.0], [1.54570806E12, 126.0], [1.54570686E12, 39.0], [1.54570362E12, 20.0], [1.54570584E12, 64.0], [1.54570566E12, 22.0], [1.54570242E12, 19.0], [1.54570464E12, 57.0], [1.54570788E12, 60.0], [1.54570446E12, 75.0], [1.54570668E12, 273.0], [1.54570344E12, 27.0], [1.54570326E12, 19.0], [1.54570548E12, 448.0], [1.5457077E12, 69.0], [1.54570224E12, 19.0], [1.54570206E12, 18.0], [1.54570428E12, 446.0], [1.5457065E12, 21.0], [1.5457047E12, 520.0], [1.54570692E12, 60.0], [1.54570368E12, 50.0], [1.5457035E12, 40.0], [1.54570572E12, 63.0], [1.54570794E12, 452.0], [1.54570248E12, 19.0], [1.5457023E12, 19.0], [1.54570452E12, 63.0], [1.54570674E12, 55.0], [1.54570332E12, 16.0], [1.54570776E12, 57.0], [1.54570554E12, 349.0], [1.54570212E12, 17.0], [1.54570656E12, 60.0], [1.54570758E12, 229.0], [1.54570434E12, 74.0], [1.54570638E12, 30.0], [1.54570314E12, 18.0], [1.54570536E12, 302.0], [1.54570518E12, 57.0], [1.54570194E12, 22.0], [1.54570416E12, 502.0], [1.5457074E12, 59.0], [1.54570398E12, 42.0], [1.54570842E12, 79.0], [1.5457062E12, 271.0], [1.54570296E12, 160.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.54570662E12, 2517.9900000000016], [1.54570338E12, 72.0], [1.5457056E12, 1157.0], [1.54570542E12, 64.9900000000016], [1.54570218E12, 46.0], [1.5457044E12, 1360.0], [1.54570764E12, 1189.9900000000016], [1.54570422E12, 147.0], [1.54570644E12, 121.0], [1.5457032E12, 44.0], [1.54570302E12, 38.0], [1.54570524E12, 236.71000000004642], [1.54570746E12, 1531.0], [1.545702E12, 46.0], [1.54570404E12, 845.0], [1.54570626E12, 93.0], [1.54570848E12, 801.0], [1.54570284E12, 42.0], [1.54570728E12, 111.0], [1.5457083E12, 1074.0], [1.54570506E12, 590.0], [1.54570608E12, 987.0], [1.5457071E12, 974.9900000000016], [1.54570386E12, 281.32000000010885], [1.54570266E12, 419.0], [1.5457059E12, 816.0], [1.54570812E12, 112.0], [1.54570488E12, 96.0], [1.54570308E12, 57.0], [1.54570752E12, 1918.0], [1.54570854E12, 93.0], [1.5457053E12, 273.30000000011205], [1.54570188E12, 38.0], [1.54570632E12, 64.0], [1.54570734E12, 1781.0], [1.5457041E12, 147.9900000000016], [1.54570614E12, 814.9900000000016], [1.54570836E12, 1135.0], [1.5457029E12, 73.0], [1.54570512E12, 122.0], [1.54570494E12, 325.0], [1.54570392E12, 285.0], [1.54570716E12, 135.0], [1.54570374E12, 1472.9900000000016], [1.54570818E12, 85.0], [1.54570272E12, 38.0], [1.54570596E12, 93.0], [1.54570254E12, 38.0], [1.54570476E12, 323.0], [1.54570698E12, 1066.0], [1.545708E12, 935.0], [1.54570356E12, 122.0], [1.54570578E12, 201.0], [1.54570236E12, 110.0], [1.5457068E12, 824.0], [1.54570782E12, 277.9500000001681], [1.54570458E12, 522.8800000000192], [1.54570278E12, 50.0], [1.545705E12, 1559.7500000003602], [1.54570722E12, 1357.9900000000016], [1.5457038E12, 112.9900000000016], [1.54570602E12, 1554.9600000000064], [1.54570824E12, 128.0], [1.5457026E12, 40.0], [1.54570704E12, 111.9900000000016], [1.54570482E12, 84.0], [1.54570806E12, 1422.0], [1.54570686E12, 86.0], [1.54570362E12, 70.0], [1.54570584E12, 366.0], [1.54570566E12, 74.0], [1.54570242E12, 43.0], [1.54570464E12, 119.0], [1.54570788E12, 271.8400000000256], [1.54570446E12, 362.0], [1.54570668E12, 842.9700000000048], [1.54570344E12, 91.9900000000016], [1.54570326E12, 55.0], [1.54570548E12, 1202.0], [1.5457077E12, 193.9700000000048], [1.54570224E12, 43.0], [1.54570206E12, 58.0], [1.54570428E12, 1145.9900000000016], [1.5457065E12, 71.0], [1.5457047E12, 1141.0], [1.54570692E12, 114.0], [1.54570368E12, 197.9900000000016], [1.5457035E12, 104.0], [1.54570572E12, 161.9900000000016], [1.54570794E12, 1117.0], [1.54570248E12, 43.0], [1.5457023E12, 45.0], [1.54570452E12, 333.0], [1.54570674E12, 116.0], [1.54570332E12, 31.0], [1.54570776E12, 107.9900000000016], [1.54570554E12, 791.9800000000032], [1.54570212E12, 49.0], [1.54570656E12, 119.0], [1.54570758E12, 892.0], [1.54570434E12, 307.0], [1.54570638E12, 267.9900000000016], [1.54570314E12, 44.0], [1.54570536E12, 937.9800000000032], [1.54570518E12, 171.0], [1.54570194E12, 54.0], [1.54570416E12, 1399.0], [1.5457074E12, 99.0], [1.54570398E12, 97.9900000000016], [1.54570842E12, 344.0], [1.5457062E12, 676.0], [1.54570296E12, 395.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.54570662E12, 423.0], [1.54570338E12, 45.0], [1.5457056E12, 682.0], [1.54570542E12, 29.0], [1.54570218E12, 21.0], [1.5457044E12, 549.9500000000007], [1.54570764E12, 394.0], [1.54570422E12, 57.0], [1.54570644E12, 82.0], [1.5457032E12, 26.0], [1.54570302E12, 22.0], [1.54570524E12, 89.0], [1.54570746E12, 88.0], [1.545702E12, 24.0], [1.54570404E12, 539.0], [1.54570626E12, 69.0], [1.54570848E12, 446.0], [1.54570284E12, 27.0], [1.54570728E12, 74.0], [1.5457083E12, 577.0], [1.54570506E12, 68.0], [1.54570608E12, 485.90000000000146], [1.5457071E12, 439.0], [1.54570386E12, 102.0], [1.54570266E12, 237.0], [1.5457059E12, 371.9500000000007], [1.54570812E12, 75.0], [1.54570488E12, 75.0], [1.54570308E12, 24.0], [1.54570752E12, 537.0], [1.54570854E12, 61.0], [1.5457053E12, 70.0], [1.54570188E12, 22.0], [1.54570632E12, 30.0], [1.54570734E12, 545.450000000008], [1.5457041E12, 56.0], [1.54570614E12, 393.0], [1.54570836E12, 550.0], [1.5457029E12, 28.0], [1.54570512E12, 71.0], [1.54570494E12, 101.0], [1.54570392E12, 164.95000000000073], [1.54570716E12, 80.0], [1.54570374E12, 720.0], [1.54570818E12, 69.0], [1.54570272E12, 21.0], [1.54570596E12, 71.0], [1.54570254E12, 26.0], [1.54570476E12, 77.0], [1.54570698E12, 411.0], [1.545708E12, 354.0], [1.54570356E12, 71.0], [1.54570578E12, 111.0], [1.54570236E12, 24.0], [1.5457068E12, 258.0], [1.54570782E12, 85.0], [1.54570458E12, 102.0], [1.54570278E12, 27.0], [1.545705E12, 671.9500000000007], [1.54570722E12, 601.0], [1.5457038E12, 64.0], [1.54570602E12, 798.0], [1.54570824E12, 84.0], [1.5457026E12, 25.0], [1.54570704E12, 68.0], [1.54570482E12, 46.0], [1.54570806E12, 470.9500000000007], [1.54570686E12, 55.0], [1.54570362E12, 31.0], [1.54570584E12, 99.0], [1.54570566E12, 33.0], [1.54570242E12, 25.0], [1.54570464E12, 72.0], [1.54570788E12, 76.0], [1.54570446E12, 103.0], [1.54570668E12, 374.9500000000007], [1.54570344E12, 51.0], [1.54570326E12, 24.0], [1.54570548E12, 644.9500000000007], [1.5457077E12, 96.0], [1.54570224E12, 25.0], [1.54570206E12, 25.0], [1.54570428E12, 684.0], [1.5457065E12, 37.0], [1.5457047E12, 702.0], [1.54570692E12, 78.0], [1.54570368E12, 91.0], [1.5457035E12, 60.0], [1.54570572E12, 84.0], [1.54570794E12, 585.0], [1.54570248E12, 24.0], [1.5457023E12, 25.0], [1.54570452E12, 87.0], [1.54570674E12, 73.0], [1.54570332E12, 20.0], [1.54570776E12, 69.95000000000073], [1.54570554E12, 451.0], [1.54570212E12, 23.0], [1.54570656E12, 84.0], [1.54570758E12, 345.0], [1.54570434E12, 111.0], [1.54570638E12, 56.0], [1.54570314E12, 24.0], [1.54570536E12, 521.9500000000007], [1.54570518E12, 75.0], [1.54570194E12, 31.0], [1.54570416E12, 793.9500000000007], [1.5457074E12, 73.0], [1.54570398E12, 71.0], [1.54570842E12, 124.0], [1.5457062E12, 352.9500000000007], [1.54570296E12, 233.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54570854E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 1000.0, "maxY": 39.0, "series": [{"data": [[67000.0, 19.0], [69000.0, 21.0], [73000.0, 18.0], [71000.0, 19.0], [75000.0, 18.5], [77000.0, 19.0], [81000.0, 21.0], [79000.0, 19.0], [85000.0, 18.0], [83000.0, 17.0], [89000.0, 20.0], [87000.0, 22.0], [91000.0, 18.0], [93000.0, 21.0], [95000.0, 18.0], [97000.0, 22.0], [1000.0, 26.0], [2000.0, 23.0], [3000.0, 21.0], [4000.0, 19.0], [5000.0, 16.0], [6000.0, 13.0], [7000.0, 12.0], [8000.0, 10.0], [9000.0, 9.0], [10000.0, 9.0], [11000.0, 9.0], [12000.0, 9.0], [13000.0, 9.0], [14000.0, 9.0], [15000.0, 9.0], [16000.0, 11.0], [17000.0, 13.0], [18000.0, 14.0], [19000.0, 16.0], [20000.0, 18.0], [21000.0, 19.0], [22000.0, 21.0], [23000.0, 24.0], [24000.0, 27.0], [25000.0, 28.0], [26000.0, 32.0], [27000.0, 37.0], [28000.0, 37.0], [29000.0, 39.0], [30000.0, 35.0], [31000.0, 34.0], [32000.0, 38.0], [33000.0, 35.0], [34000.0, 24.0], [36000.0, 25.0], [35000.0, 25.0], [37000.0, 24.5], [38000.0, 22.0], [40000.0, 26.0], [39000.0, 18.0], [42000.0, 19.0], [41000.0, 21.0], [43000.0, 19.0], [44000.0, 20.0], [45000.0, 20.0], [47000.0, 19.0], [46000.0, 20.0], [48000.0, 22.0], [49000.0, 23.0], [51000.0, 20.0], [50000.0, 21.0], [52000.0, 23.0], [53000.0, 19.0], [54000.0, 20.0], [55000.0, 21.0], [56000.0, 19.0], [57000.0, 19.0], [58000.0, 21.0], [59000.0, 21.0], [61000.0, 21.0], [60000.0, 19.0], [62000.0, 19.0], [63000.0, 20.0], [65000.0, 22.0], [64000.0, 25.0], [66000.0, 22.0], [68000.0, 19.0], [72000.0, 21.0], [70000.0, 20.0], [76000.0, 20.0], [74000.0, 20.0], [80000.0, 20.0], [78000.0, 20.0], [82000.0, 20.0], [86000.0, 20.0], [84000.0, 25.0], [90000.0, 21.0], [88000.0, 22.0], [92000.0, 22.0], [94000.0, 19.0], [96000.0, 28.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 8.5], [19000.0, 18.0], [10000.0, 9.0], [12000.0, 8.0], [6000.0, 6.0], [3000.0, 4.5], [13000.0, 10.0], [4000.0, 15.0], [1000.0, 4.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 97000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1000.0, "maxY": 37.0, "series": [{"data": [[67000.0, 17.0], [69000.0, 18.0], [73000.0, 0.0], [71000.0, 0.0], [75000.0, 16.0], [77000.0, 15.0], [81000.0, 19.0], [79000.0, 18.0], [85000.0, 17.0], [83000.0, 15.5], [89000.0, 16.0], [87000.0, 16.0], [91000.0, 15.0], [93000.0, 18.0], [95000.0, 14.0], [97000.0, 22.0], [1000.0, 0.0], [2000.0, 0.0], [3000.0, 0.0], [4000.0, 0.0], [5000.0, 0.0], [6000.0, 0.0], [7000.0, 0.0], [8000.0, 0.0], [9000.0, 0.0], [10000.0, 0.0], [11000.0, 0.0], [12000.0, 0.0], [13000.0, 0.0], [14000.0, 5.0], [15000.0, 7.0], [16000.0, 9.0], [17000.0, 12.0], [18000.0, 13.0], [19000.0, 15.0], [20000.0, 17.0], [21000.0, 18.0], [22000.0, 20.0], [23000.0, 22.0], [24000.0, 25.0], [25000.0, 26.0], [26000.0, 29.0], [27000.0, 35.0], [28000.0, 35.0], [29000.0, 37.0], [30000.0, 32.0], [31000.0, 32.0], [32000.0, 35.0], [33000.0, 32.0], [34000.0, 22.0], [36000.0, 23.0], [35000.0, 24.0], [37000.0, 23.0], [38000.0, 20.0], [40000.0, 20.0], [39000.0, 16.0], [42000.0, 14.0], [41000.0, 17.0], [43000.0, 15.0], [44000.0, 17.0], [45000.0, 14.0], [47000.0, 15.0], [46000.0, 15.0], [48000.0, 18.0], [49000.0, 18.0], [51000.0, 17.0], [50000.0, 18.0], [52000.0, 18.0], [53000.0, 14.0], [54000.0, 16.0], [55000.0, 15.0], [56000.0, 16.0], [57000.0, 16.0], [58000.0, 17.0], [59000.0, 18.0], [61000.0, 17.0], [60000.0, 15.0], [62000.0, 16.0], [63000.0, 16.0], [65000.0, 19.0], [64000.0, 17.0], [66000.0, 16.0], [68000.0, 13.5], [72000.0, 14.0], [70000.0, 16.0], [76000.0, 18.0], [74000.0, 18.0], [80000.0, 15.0], [78000.0, 18.0], [82000.0, 17.0], [86000.0, 18.0], [84000.0, 19.0], [90000.0, 17.0], [88000.0, 0.0], [92000.0, 22.0], [94000.0, 15.0], [96000.0, 19.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 0.0], [19000.0, 0.0], [10000.0, 0.0], [12000.0, 0.0], [6000.0, 0.0], [3000.0, 0.0], [13000.0, 0.0], [4000.0, 0.0], [1000.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 97000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1326.8, "minX": 1.54570188E12, "maxY": 8998.3, "series": [{"data": [[1.54570662E12, 1770.0333333333333], [1.54570338E12, 8689.733333333334], [1.5457056E12, 1874.1166666666666], [1.54570542E12, 4346.783333333334], [1.54570218E12, 8832.083333333334], [1.5457044E12, 1326.8], [1.54570764E12, 2893.8], [1.54570422E12, 4847.783333333334], [1.54570644E12, 2456.0833333333335], [1.5457032E12, 8736.5], [1.54570302E12, 8097.883333333333], [1.54570524E12, 2952.8333333333335], [1.54570746E12, 4235.35], [1.545702E12, 8998.3], [1.54570404E12, 2879.5], [1.54570626E12, 4273.966666666666], [1.54570848E12, 3588.7166666666667], [1.54570284E12, 8943.15], [1.54570728E12, 2081.2833333333333], [1.5457083E12, 3191.133333333333], [1.54570506E12, 2483.616666666667], [1.54570608E12, 2820.483333333333], [1.5457071E12, 2700.55], [1.54570386E12, 2848.95], [1.54570266E12, 7691.583333333333], [1.5457059E12, 1704.6333333333334], [1.54570812E12, 2864.2833333333333], [1.54570488E12, 4372.866666666667], [1.54570308E12, 8900.0], [1.54570752E12, 1966.5833333333333], [1.54570854E12, 1652.95], [1.5457053E12, 2999.3333333333335], [1.54570188E12, 8490.133333333333], [1.54570632E12, 2495.016666666667], [1.54570734E12, 3495.4], [1.5457041E12, 2204.616666666667], [1.54570614E12, 3138.5666666666666], [1.54570836E12, 1973.8166666666666], [1.5457029E12, 8917.483333333334], [1.54570512E12, 3063.883333333333], [1.54570494E12, 2075.633333333333], [1.54570392E12, 3653.883333333333], [1.54570716E12, 3273.1833333333334], [1.54570374E12, 2460.8], [1.54570818E12, 2152.366666666667], [1.54570272E12, 8518.383333333333], [1.54570596E12, 4420.216666666666], [1.54570254E12, 8778.766666666666], [1.54570476E12, 2141.633333333333], [1.54570698E12, 2447.6666666666665], [1.545708E12, 3474.8], [1.54570356E12, 4543.25], [1.54570578E12, 2707.35], [1.54570236E12, 5435.233333333334], [1.5457068E12, 4246.766666666666], [1.54570782E12, 2680.233333333333], [1.54570458E12, 4855.333333333333], [1.54570278E12, 8868.716666666667], [1.545705E12, 2911.3333333333335], [1.54570722E12, 3050.116666666667], [1.5457038E12, 4616.7], [1.54570602E12, 2455.3], [1.54570824E12, 2626.35], [1.5457026E12, 8835.783333333333], [1.54570704E12, 3487.0666666666666], [1.54570482E12, 2914.9166666666665], [1.54570806E12, 2503.7], [1.54570686E12, 3494.5], [1.54570362E12, 6779.9], [1.54570584E12, 2916.3333333333335], [1.54570566E12, 2475.05], [1.54570242E12, 8153.133333333333], [1.54570464E12, 2146.8], [1.54570788E12, 2539.633333333333], [1.54570446E12, 3586.7], [1.54570668E12, 3227.616666666667], [1.54570344E12, 6281.366666666667], [1.54570326E12, 7584.35], [1.54570548E12, 2385.65], [1.5457077E12, 3179.633333333333], [1.54570224E12, 7576.65], [1.54570206E12, 8919.533333333333], [1.54570428E12, 2687.6833333333334], [1.5457065E12, 3295.8166666666666], [1.5457047E12, 2912.4], [1.54570692E12, 2858.3], [1.54570368E12, 4360.283333333334], [1.5457035E12, 4575.033333333334], [1.54570572E12, 4569.833333333333], [1.54570794E12, 2989.233333333333], [1.54570248E12, 8724.216666666667], [1.5457023E12, 8971.033333333333], [1.54570452E12, 2108.5], [1.54570674E12, 2449.85], [1.54570332E12, 8879.533333333333], [1.54570776E12, 2761.4], [1.54570554E12, 3419.483333333333], [1.54570212E12, 8980.633333333333], [1.54570656E12, 4282.55], [1.54570758E12, 3085.3], [1.54570434E12, 3508.0666666666666], [1.54570638E12, 3197.7], [1.54570314E12, 7593.683333333333], [1.54570536E12, 1634.7333333333333], [1.54570518E12, 4784.283333333334], [1.54570194E12, 8958.483333333334], [1.54570416E12, 2750.733333333333], [1.5457074E12, 2509.4], [1.54570398E12, 2636.05], [1.54570842E12, 3239.366666666667], [1.5457062E12, 2759.3], [1.54570296E12, 6387.916666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54570854E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.54570188E12, "maxY": 4499.183333333333, "series": [{"data": [[1.54570662E12, 884.5333333333333], [1.54570338E12, 4344.766666666666], [1.5457056E12, 937.0666666666667], [1.54570542E12, 2173.4666666666667], [1.54570218E12, 4415.75], [1.5457044E12, 663.4], [1.54570764E12, 1446.9], [1.54570422E12, 2424.3], [1.54570644E12, 1227.9833333333333], [1.5457032E12, 4368.483333333334], [1.54570302E12, 4049.4], [1.54570524E12, 1476.4833333333333], [1.54570746E12, 2117.6], [1.545702E12, 4499.183333333333], [1.54570404E12, 1439.75], [1.54570626E12, 2137.366666666667], [1.54570848E12, 1794.1333333333334], [1.54570284E12, 4471.383333333333], [1.54570728E12, 1040.6166666666666], [1.5457083E12, 1595.1666666666667], [1.54570506E12, 1241.7], [1.54570608E12, 1410.2333333333333], [1.5457071E12, 1350.4], [1.54570386E12, 1424.55], [1.54570266E12, 3845.3166666666666], [1.5457059E12, 852.3], [1.54570812E12, 1432.0333333333333], [1.54570488E12, 2186.4333333333334], [1.54570308E12, 4449.766666666666], [1.54570752E12, 983.2833333333333], [1.54570854E12, 827.5166666666667], [1.5457053E12, 1499.8666666666666], [1.54570188E12, 4273.066666666667], [1.54570632E12, 1247.5166666666667], [1.54570734E12, 1747.6833333333334], [1.5457041E12, 1102.3], [1.54570614E12, 1569.2833333333333], [1.54570836E12, 986.8166666666667], [1.5457029E12, 4459.05], [1.54570512E12, 1532.1666666666667], [1.54570494E12, 1037.75], [1.54570392E12, 1826.9833333333333], [1.54570716E12, 1636.4666666666667], [1.54570374E12, 1230.15], [1.54570818E12, 1076.3], [1.54570272E12, 4259.616666666667], [1.54570596E12, 2210.133333333333], [1.54570254E12, 4389.366666666667], [1.54570476E12, 1071.0333333333333], [1.54570698E12, 1223.3], [1.545708E12, 1737.4], [1.54570356E12, 2271.85], [1.54570578E12, 1354.2], [1.54570236E12, 2717.0333333333333], [1.5457068E12, 2123.383333333333], [1.54570782E12, 1340.3], [1.54570458E12, 2427.6], [1.54570278E12, 4434.4], [1.545705E12, 1455.75], [1.54570722E12, 1525.1], [1.5457038E12, 2308.3333333333335], [1.54570602E12, 1227.5666666666666], [1.54570824E12, 1313.55], [1.5457026E12, 4417.9], [1.54570704E12, 1743.5333333333333], [1.54570482E12, 1457.3166666666666], [1.54570806E12, 1251.9666666666667], [1.54570686E12, 1747.2333333333333], [1.54570362E12, 3389.75], [1.54570584E12, 1457.6333333333334], [1.54570566E12, 1237.8833333333334], [1.54570242E12, 4077.0], [1.54570464E12, 1073.7166666666667], [1.54570788E12, 1269.5166666666667], [1.54570446E12, 1793.4166666666667], [1.54570668E12, 1613.8333333333333], [1.54570344E12, 3140.45], [1.54570326E12, 3792.15], [1.54570548E12, 1192.8666666666666], [1.5457077E12, 1589.9833333333333], [1.54570224E12, 3788.5666666666666], [1.54570206E12, 4459.483333333334], [1.54570428E12, 1343.4333333333334], [1.5457065E12, 1647.75], [1.5457047E12, 1455.8833333333334], [1.54570692E12, 1429.6833333333334], [1.54570368E12, 2180.133333333333], [1.5457035E12, 2287.6666666666665], [1.54570572E12, 2284.633333333333], [1.54570794E12, 1494.6], [1.54570248E12, 4362.15], [1.5457023E12, 4485.766666666666], [1.54570452E12, 1054.2666666666667], [1.54570674E12, 1224.9], [1.54570332E12, 4439.85], [1.54570776E12, 1380.6666666666667], [1.54570554E12, 1709.6333333333334], [1.54570212E12, 4490.616666666667], [1.54570656E12, 2141.616666666667], [1.54570758E12, 1542.6333333333334], [1.54570434E12, 1754.0333333333333], [1.54570638E12, 1598.8333333333333], [1.54570314E12, 3796.7], [1.54570536E12, 817.0833333333334], [1.54570518E12, 2391.9333333333334], [1.54570194E12, 4479.233333333334], [1.54570416E12, 1375.3666666666666], [1.5457074E12, 1254.8], [1.54570398E12, 1317.9166666666667], [1.54570842E12, 1619.95], [1.5457062E12, 1379.65], [1.54570296E12, 3193.4333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.54570854E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.impl.execchain.RequestAbortedException", "isController": false}, {"data": [[1.54570854E12, 0.21666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.io.InterruptedIOException", "isController": false}, {"data": [[1.54570662E12, 885.5], [1.54570338E12, 4344.933333333333], [1.5457056E12, 937.05], [1.54570542E12, 2173.3166666666666], [1.54570218E12, 4416.366666666667], [1.5457044E12, 663.4], [1.54570764E12, 1446.9], [1.54570422E12, 2423.516666666667], [1.54570644E12, 1228.1], [1.5457032E12, 4368.033333333334], [1.54570302E12, 4048.483333333333], [1.54570524E12, 1476.35], [1.54570746E12, 2117.75], [1.545702E12, 4499.05], [1.54570404E12, 1439.75], [1.54570626E12, 2136.6], [1.54570848E12, 1794.55], [1.54570284E12, 4471.783333333334], [1.54570728E12, 1040.6666666666667], [1.5457083E12, 1595.8666666666666], [1.54570506E12, 1241.8666666666666], [1.54570608E12, 1410.25], [1.5457071E12, 1350.1666666666667], [1.54570386E12, 1424.4333333333334], [1.54570266E12, 3846.233333333333], [1.5457059E12, 852.4], [1.54570812E12, 1432.2166666666667], [1.54570488E12, 2186.4333333333334], [1.54570308E12, 4450.283333333334], [1.54570752E12, 983.3], [1.54570854E12, 826.7833333333333], [1.5457053E12, 1499.5166666666667], [1.54570188E12, 4215.433333333333], [1.54570632E12, 1247.5666666666666], [1.54570734E12, 1747.7166666666667], [1.5457041E12, 1102.3166666666666], [1.54570614E12, 1569.2833333333333], [1.54570836E12, 987.0], [1.5457029E12, 4458.4], [1.54570512E12, 1531.75], [1.54570494E12, 1037.8833333333334], [1.54570392E12, 1826.8833333333334], [1.54570716E12, 1636.7], [1.54570374E12, 1230.5833333333333], [1.54570818E12, 1076.0666666666666], [1.54570272E12, 4258.833333333333], [1.54570596E12, 2210.016666666667], [1.54570254E12, 4389.366666666667], [1.54570476E12, 1070.6333333333334], [1.54570698E12, 1224.2666666666667], [1.545708E12, 1737.4], [1.54570356E12, 2271.4666666666667], [1.54570578E12, 1353.2666666666667], [1.54570236E12, 2718.133333333333], [1.5457068E12, 2123.383333333333], [1.54570782E12, 1339.9833333333333], [1.54570458E12, 2427.733333333333], [1.54570278E12, 4434.316666666667], [1.545705E12, 1455.6333333333334], [1.54570722E12, 1525.0166666666667], [1.5457038E12, 2308.366666666667], [1.54570602E12, 1227.7333333333333], [1.54570824E12, 1312.9], [1.5457026E12, 4417.916666666667], [1.54570704E12, 1743.5333333333333], [1.54570482E12, 1457.5666666666666], [1.54570806E12, 1251.7666666666667], [1.54570686E12, 1747.2666666666667], [1.54570362E12, 3390.1], [1.54570584E12, 1458.5833333333333], [1.54570566E12, 1237.2166666666667], [1.54570242E12, 4076.15], [1.54570464E12, 1073.1166666666666], [1.54570788E12, 1270.0666666666666], [1.54570446E12, 1793.2833333333333], [1.54570668E12, 1613.7833333333333], [1.54570344E12, 3140.883333333333], [1.54570326E12, 3792.15], [1.54570548E12, 1192.8166666666666], [1.5457077E12, 1589.6666666666667], [1.54570224E12, 3788.1], [1.54570206E12, 4460.033333333334], [1.54570428E12, 1344.2166666666667], [1.5457065E12, 1648.0166666666667], [1.5457047E12, 1456.4833333333333], [1.54570692E12, 1428.7166666666667], [1.54570368E12, 2180.1833333333334], [1.5457035E12, 2287.383333333333], [1.54570572E12, 2285.15], [1.54570794E12, 1494.6333333333334], [1.54570248E12, 4362.083333333333], [1.5457023E12, 4485.25], [1.54570452E12, 1054.2333333333333], [1.54570674E12, 1224.95], [1.54570332E12, 4439.716666666666], [1.54570776E12, 1380.7166666666667], [1.54570554E12, 1709.8166666666666], [1.54570212E12, 4490.05], [1.54570656E12, 2140.9333333333334], [1.54570758E12, 1542.6666666666667], [1.54570434E12, 1754.0333333333333], [1.54570638E12, 1598.85], [1.54570314E12, 3796.983333333333], [1.54570536E12, 817.6], [1.54570518E12, 2392.3166666666666], [1.54570194E12, 4479.3], [1.54570416E12, 1375.3666666666666], [1.5457074E12, 1254.6], [1.54570398E12, 1318.1166666666666], [1.54570842E12, 1619.45], [1.5457062E12, 1379.65], [1.54570296E12, 3194.45]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.54570854E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}, {"data": [[1.54570854E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54570854E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.54570188E12, "maxY": 4499.183333333333, "series": [{"data": [[1.54570854E12, 0.31666666666666665]], "isOverall": false, "label": "SkinPrice Creation-failure", "isController": false}, {"data": [[1.54570662E12, 884.5333333333333], [1.54570338E12, 4344.766666666666], [1.5457056E12, 937.0666666666667], [1.54570542E12, 2173.4666666666667], [1.54570218E12, 4415.75], [1.5457044E12, 663.4], [1.54570764E12, 1446.9], [1.54570422E12, 2424.3], [1.54570644E12, 1227.9833333333333], [1.5457032E12, 4368.483333333334], [1.54570302E12, 4049.4], [1.54570524E12, 1476.4833333333333], [1.54570746E12, 2117.6], [1.545702E12, 4499.183333333333], [1.54570404E12, 1439.75], [1.54570626E12, 2137.366666666667], [1.54570848E12, 1794.1333333333334], [1.54570284E12, 4471.383333333333], [1.54570728E12, 1040.6166666666666], [1.5457083E12, 1595.1666666666667], [1.54570506E12, 1241.7], [1.54570608E12, 1410.2333333333333], [1.5457071E12, 1350.4], [1.54570386E12, 1424.55], [1.54570266E12, 3845.3166666666666], [1.5457059E12, 852.3], [1.54570812E12, 1432.0333333333333], [1.54570488E12, 2186.4333333333334], [1.54570308E12, 4449.766666666666], [1.54570752E12, 983.2833333333333], [1.54570854E12, 827.5166666666667], [1.5457053E12, 1499.8666666666666], [1.54570188E12, 4244.583333333333], [1.54570632E12, 1247.5166666666667], [1.54570734E12, 1747.6833333333334], [1.5457041E12, 1102.3], [1.54570614E12, 1569.2833333333333], [1.54570836E12, 986.8166666666667], [1.5457029E12, 4459.05], [1.54570512E12, 1532.1666666666667], [1.54570494E12, 1037.75], [1.54570392E12, 1826.9833333333333], [1.54570716E12, 1636.4666666666667], [1.54570374E12, 1230.15], [1.54570818E12, 1076.3], [1.54570272E12, 4259.616666666667], [1.54570596E12, 2210.133333333333], [1.54570254E12, 4389.366666666667], [1.54570476E12, 1071.0333333333333], [1.54570698E12, 1223.3], [1.545708E12, 1737.4], [1.54570356E12, 2271.85], [1.54570578E12, 1354.2], [1.54570236E12, 2717.0333333333333], [1.5457068E12, 2123.383333333333], [1.54570782E12, 1340.3], [1.54570458E12, 2427.6], [1.54570278E12, 4434.4], [1.545705E12, 1455.75], [1.54570722E12, 1525.1], [1.5457038E12, 2308.3333333333335], [1.54570602E12, 1227.5666666666666], [1.54570824E12, 1313.55], [1.5457026E12, 4417.9], [1.54570704E12, 1743.5333333333333], [1.54570482E12, 1457.3166666666666], [1.54570806E12, 1251.9666666666667], [1.54570686E12, 1747.2333333333333], [1.54570362E12, 3389.75], [1.54570584E12, 1457.6333333333334], [1.54570566E12, 1237.8833333333334], [1.54570242E12, 4077.0], [1.54570464E12, 1073.7166666666667], [1.54570788E12, 1269.5166666666667], [1.54570446E12, 1793.4166666666667], [1.54570668E12, 1613.8333333333333], [1.54570344E12, 3140.45], [1.54570326E12, 3792.15], [1.54570548E12, 1192.8666666666666], [1.5457077E12, 1589.9833333333333], [1.54570224E12, 3788.5666666666666], [1.54570206E12, 4459.483333333334], [1.54570428E12, 1343.4333333333334], [1.5457065E12, 1647.75], [1.5457047E12, 1455.8833333333334], [1.54570692E12, 1429.6833333333334], [1.54570368E12, 2180.133333333333], [1.5457035E12, 2287.6666666666665], [1.54570572E12, 2284.633333333333], [1.54570794E12, 1494.6], [1.54570248E12, 4362.15], [1.5457023E12, 4485.766666666666], [1.54570452E12, 1054.2666666666667], [1.54570674E12, 1224.9], [1.54570332E12, 4439.85], [1.54570776E12, 1380.6666666666667], [1.54570554E12, 1709.6333333333334], [1.54570212E12, 4490.616666666667], [1.54570656E12, 2141.616666666667], [1.54570758E12, 1542.6333333333334], [1.54570434E12, 1754.0333333333333], [1.54570638E12, 1598.8333333333333], [1.54570314E12, 3796.7], [1.54570536E12, 817.0833333333334], [1.54570518E12, 2391.9333333333334], [1.54570194E12, 4479.233333333334], [1.54570416E12, 1375.3666666666666], [1.5457074E12, 1254.8], [1.54570398E12, 1317.9166666666667], [1.54570842E12, 1619.95], [1.5457062E12, 1379.65], [1.54570296E12, 3193.4333333333334]], "isOverall": false, "label": "SkinPrice Creation-success", "isController": false}, {"data": [[1.54570662E12, 885.5], [1.54570338E12, 4344.933333333333], [1.5457056E12, 937.05], [1.54570542E12, 2173.3166666666666], [1.54570218E12, 4416.366666666667], [1.5457044E12, 663.4], [1.54570764E12, 1446.9], [1.54570422E12, 2423.516666666667], [1.54570644E12, 1228.1], [1.5457032E12, 4368.033333333334], [1.54570302E12, 4048.483333333333], [1.54570524E12, 1476.35], [1.54570746E12, 2117.75], [1.545702E12, 4499.05], [1.54570404E12, 1439.75], [1.54570626E12, 2136.6], [1.54570848E12, 1794.55], [1.54570284E12, 4471.783333333334], [1.54570728E12, 1040.6666666666667], [1.5457083E12, 1595.8666666666666], [1.54570506E12, 1241.8666666666666], [1.54570608E12, 1410.25], [1.5457071E12, 1350.1666666666667], [1.54570386E12, 1424.4333333333334], [1.54570266E12, 3846.233333333333], [1.5457059E12, 852.4], [1.54570812E12, 1432.2166666666667], [1.54570488E12, 2186.4333333333334], [1.54570308E12, 4450.283333333334], [1.54570752E12, 983.3], [1.54570854E12, 826.7833333333333], [1.5457053E12, 1499.5166666666667], [1.54570188E12, 4243.916666666667], [1.54570632E12, 1247.5666666666666], [1.54570734E12, 1747.7166666666667], [1.5457041E12, 1102.3166666666666], [1.54570614E12, 1569.2833333333333], [1.54570836E12, 987.0], [1.5457029E12, 4458.4], [1.54570512E12, 1531.75], [1.54570494E12, 1037.8833333333334], [1.54570392E12, 1826.8833333333334], [1.54570716E12, 1636.7], [1.54570374E12, 1230.5833333333333], [1.54570818E12, 1076.0666666666666], [1.54570272E12, 4258.833333333333], [1.54570596E12, 2210.016666666667], [1.54570254E12, 4389.366666666667], [1.54570476E12, 1070.6333333333334], [1.54570698E12, 1224.2666666666667], [1.545708E12, 1737.4], [1.54570356E12, 2271.4666666666667], [1.54570578E12, 1353.2666666666667], [1.54570236E12, 2718.133333333333], [1.5457068E12, 2123.383333333333], [1.54570782E12, 1339.9833333333333], [1.54570458E12, 2427.733333333333], [1.54570278E12, 4434.316666666667], [1.545705E12, 1455.6333333333334], [1.54570722E12, 1525.0166666666667], [1.5457038E12, 2308.366666666667], [1.54570602E12, 1227.7333333333333], [1.54570824E12, 1312.9], [1.5457026E12, 4417.916666666667], [1.54570704E12, 1743.5333333333333], [1.54570482E12, 1457.5666666666666], [1.54570806E12, 1251.7666666666667], [1.54570686E12, 1747.2666666666667], [1.54570362E12, 3390.1], [1.54570584E12, 1458.5833333333333], [1.54570566E12, 1237.2166666666667], [1.54570242E12, 4076.15], [1.54570464E12, 1073.1166666666666], [1.54570788E12, 1270.0666666666666], [1.54570446E12, 1793.2833333333333], [1.54570668E12, 1613.7833333333333], [1.54570344E12, 3140.883333333333], [1.54570326E12, 3792.15], [1.54570548E12, 1192.8166666666666], [1.5457077E12, 1589.6666666666667], [1.54570224E12, 3788.1], [1.54570206E12, 4460.033333333334], [1.54570428E12, 1344.2166666666667], [1.5457065E12, 1648.0166666666667], [1.5457047E12, 1456.4833333333333], [1.54570692E12, 1428.7166666666667], [1.54570368E12, 2180.1833333333334], [1.5457035E12, 2287.383333333333], [1.54570572E12, 2285.15], [1.54570794E12, 1494.6333333333334], [1.54570248E12, 4362.083333333333], [1.5457023E12, 4485.25], [1.54570452E12, 1054.2333333333333], [1.54570674E12, 1224.95], [1.54570332E12, 4439.716666666666], [1.54570776E12, 1380.7166666666667], [1.54570554E12, 1709.8166666666666], [1.54570212E12, 4490.05], [1.54570656E12, 2140.9333333333334], [1.54570758E12, 1542.6666666666667], [1.54570434E12, 1754.0333333333333], [1.54570638E12, 1598.85], [1.54570314E12, 3796.983333333333], [1.54570536E12, 817.6], [1.54570518E12, 2392.3166666666666], [1.54570194E12, 4479.3], [1.54570416E12, 1375.3666666666666], [1.5457074E12, 1254.6], [1.54570398E12, 1318.1166666666666], [1.54570842E12, 1619.45], [1.5457062E12, 1379.65], [1.54570296E12, 3194.45]], "isOverall": false, "label": "SkinPrice Find By ID-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54570854E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.54570188E12, "maxY": 8998.233333333334, "series": [{"data": [[1.54570662E12, 1770.0333333333333], [1.54570338E12, 8689.7], [1.5457056E12, 1874.1166666666666], [1.54570542E12, 4346.783333333334], [1.54570218E12, 8832.116666666667], [1.5457044E12, 1326.8], [1.54570764E12, 2893.8], [1.54570422E12, 4847.816666666667], [1.54570644E12, 2456.0833333333335], [1.5457032E12, 8736.516666666666], [1.54570302E12, 8097.883333333333], [1.54570524E12, 2952.8333333333335], [1.54570746E12, 4235.35], [1.545702E12, 8998.233333333334], [1.54570404E12, 2879.5], [1.54570626E12, 4273.966666666666], [1.54570848E12, 3588.6833333333334], [1.54570284E12, 8943.166666666666], [1.54570728E12, 2081.2833333333333], [1.5457083E12, 3191.0333333333333], [1.54570506E12, 2483.5666666666666], [1.54570608E12, 2820.483333333333], [1.5457071E12, 2700.5666666666666], [1.54570386E12, 2848.983333333333], [1.54570266E12, 7691.55], [1.5457059E12, 1704.7], [1.54570812E12, 2864.25], [1.54570488E12, 4372.866666666667], [1.54570308E12, 8900.05], [1.54570752E12, 1966.5833333333333], [1.54570854E12, 1654.3], [1.5457053E12, 2999.383333333333], [1.54570188E12, 8488.5], [1.54570632E12, 2495.0833333333335], [1.54570734E12, 3495.4], [1.5457041E12, 2204.616666666667], [1.54570614E12, 3138.5666666666666], [1.54570836E12, 1973.8166666666666], [1.5457029E12, 8917.45], [1.54570512E12, 3063.9166666666665], [1.54570494E12, 2075.633333333333], [1.54570392E12, 3653.866666666667], [1.54570716E12, 3273.1666666666665], [1.54570374E12, 2460.733333333333], [1.54570818E12, 2152.366666666667], [1.54570272E12, 8518.45], [1.54570596E12, 4420.15], [1.54570254E12, 8778.733333333334], [1.54570476E12, 2141.6666666666665], [1.54570698E12, 2447.5666666666666], [1.545708E12, 3474.8], [1.54570356E12, 4543.316666666667], [1.54570578E12, 2707.4666666666667], [1.54570236E12, 5435.166666666667], [1.5457068E12, 4246.766666666666], [1.54570782E12, 2680.2833333333333], [1.54570458E12, 4855.333333333333], [1.54570278E12, 8868.716666666667], [1.545705E12, 2911.383333333333], [1.54570722E12, 3050.116666666667], [1.5457038E12, 4616.7], [1.54570602E12, 2455.3], [1.54570824E12, 2626.45], [1.5457026E12, 8835.816666666668], [1.54570704E12, 3487.0666666666666], [1.54570482E12, 2914.883333333333], [1.54570806E12, 2503.733333333333], [1.54570686E12, 3494.5], [1.54570362E12, 6779.85], [1.54570584E12, 2916.2166666666667], [1.54570566E12, 2475.1], [1.54570242E12, 8153.15], [1.54570464E12, 2146.8333333333335], [1.54570788E12, 2539.5833333333335], [1.54570446E12, 3586.7], [1.54570668E12, 3227.616666666667], [1.54570344E12, 6281.333333333333], [1.54570326E12, 7584.3], [1.54570548E12, 2385.6833333333334], [1.5457077E12, 3179.65], [1.54570224E12, 7576.666666666667], [1.54570206E12, 8919.516666666666], [1.54570428E12, 2687.65], [1.5457065E12, 3295.766666666667], [1.5457047E12, 2912.366666666667], [1.54570692E12, 2858.4], [1.54570368E12, 4360.316666666667], [1.5457035E12, 4575.05], [1.54570572E12, 4569.783333333334], [1.54570794E12, 2989.233333333333], [1.54570248E12, 8724.233333333334], [1.5457023E12, 8971.016666666666], [1.54570452E12, 2108.5], [1.54570674E12, 2449.85], [1.54570332E12, 8879.566666666668], [1.54570776E12, 2761.383333333333], [1.54570554E12, 3419.45], [1.54570212E12, 8980.666666666666], [1.54570656E12, 4282.55], [1.54570758E12, 3085.3], [1.54570434E12, 3508.0666666666666], [1.54570638E12, 3197.6833333333334], [1.54570314E12, 7593.683333333333], [1.54570536E12, 1634.6833333333334], [1.54570518E12, 4784.25], [1.54570194E12, 8958.533333333333], [1.54570416E12, 2750.733333333333], [1.5457074E12, 2509.4], [1.54570398E12, 2636.0333333333333], [1.54570842E12, 3239.4], [1.5457062E12, 2759.3], [1.54570296E12, 6387.883333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.54570854E12, 0.31666666666666665]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54570854E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

